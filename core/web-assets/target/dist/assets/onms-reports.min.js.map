{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///./src/main/assets/js/vendor/bootstrap-js.js","webpack:///./src/main/assets/js/apps/onms-elementList/templates/angular-onms-elementList-editListInPlace.html","webpack:///./src/main/assets/js/apps/onms-elementList/templates/angular-onms-elementList-editMapInPlace.html","webpack:///./src/main/assets/js/lib/onms-schedule-editor/scripts/ScheduleOptions.js","webpack:///./src/main/assets/js/lib/onms-schedule-editor/scripts/Time.js","webpack:///./src/main/assets/js/lib/onms-http/403-permission-denied.html","webpack:///./src/main/assets/js/lib/onms-pagination/index.js","webpack:///./src/main/assets/js/lib/onms-pagination/pagination-toolbar.html","webpack:///./src/main/assets/js/lib/onms-schedule-editor/scripts/ClockMode.js","webpack:///./src/main/assets/js/lib/onms-schedule-editor/scripts/Weekdays.js","webpack:///./src/main/assets/js/lib/onms-schedule-editor/scripts/CronDefintion.js","webpack:///./src/main/assets/modules/lib/util/index.js","webpack:///./src/main/assets/js/apps/onms-classifications/views/modals/popover.html","webpack:///./src/main/assets/js/lib/onms-schedule-editor/scripts/WeekdayOptions.js","webpack:///./src/main/assets/js/lib/onms-schedule-editor/scripts/Intervals.js","webpack:///./src/main/assets/js/vendor/angular-js.js","webpack:///./src/main/assets/js/lib/onms-schedule-editor/scripts/parsers/CustomParser.js","webpack:///./src/main/assets/js/lib/onms-schedule-editor/scripts/parsers/DailyParser.js","webpack:///./src/main/assets/js/lib/onms-schedule-editor/scripts/Range.js","webpack:///./src/main/assets/js/lib/onms-schedule-editor/scripts/parsers/DayOfMonthParser.js","webpack:///./src/main/assets/js/lib/onms-schedule-editor/scripts/ContextError.js","webpack:///./src/main/assets/js/lib/onms-datetimepicker/index.js","webpack:///./src/main/assets/js/lib/onms-datetimepicker/template.html","webpack:///./src/main/assets/js/lib/onms-schedule-editor/index.js","webpack:///./src/main/assets/js/lib/onms-schedule-editor/templates/schedule-editor.tpl.html","webpack:///./src/main/assets/js/lib/onms-schedule-editor/templates/interval-input.tpl.html","webpack:///./src/main/assets/js/lib/onms-schedule-editor/templates/time-input.tpl.html","webpack:///./src/main/assets/js/vendor/jquery-js.js","webpack:///./src/main/assets/js/lib/onms-http/ContextError.js","webpack:///./src/main/assets/js/apps/onms-reports/index.js","webpack:///./src/main/assets/js/lib/onms-schedule-editor/scripts/Types.js","webpack:///./src/main/assets/js/apps/onms-reports/ReportDetails.js","webpack:///./src/main/assets/js/lib/onms-http/index.js","webpack:///./src/main/assets/js/lib/onms-http/ErrorResponse.js","webpack:///./src/main/assets/js/apps/onms-reports/index.html","webpack:///./src/main/assets/js/apps/onms-reports/templates.html","webpack:///./src/main/assets/js/apps/onms-reports/persisted.html","webpack:///./src/main/assets/js/apps/onms-reports/schedules.html","webpack:///./src/main/assets/js/apps/onms-reports/details.html","webpack:///./src/main/assets/js/apps/onms-reports/modals/schedule-edit-modal.html","webpack:///./src/main/assets/js/apps/onms-reports/report-details.html","webpack:///./src/main/assets/js/apps/onms-elementList/lib/elementList.js","webpack:///./src/main/assets/js/apps/onms-elementList/templates/angular-onms-elementList-editInPlace.html"],"names":["root","factory","exports","module","define","amd","a","i","window","console","log","jQuery","require","path","angular","run","c","put","ScheduleOptions","input","options","this","clockMode","ClockMode","FULL_CLOCK_SYSTEM","HALF_CLOCK_SYSTEM","Error","type","Types","DAILY","interval","at","Time","hours","minutes","from","to","daysOfWeek","dayOfMonth","weekOfMonth","dayOfWeek","String","Weekdays","Sunday","id","dayOfMonthToggle","cronExpression","timezone","undefined","showDebugOptions","convert","disableMinutes","WeekdayOptions","key","substr","toUpperCase","validate","CUSTOM","cron","CronDefinition","seconds","month","DAYS_PER_WEEK","Intervals","EVERY_HOUR","getSelectedWeekdays","join","DAYS_PER_MONTH","asCronExpression","items","split","length","ContextError","isBefore","serverZone","_onmsZoneId","moment","tz","guess","displayZone","d","CronParser","parseExpression","getCronExpression","next","toDate","errors","parsers","DailyParser","DayOfMonthParser","CustomParser","canParse","parse","newInput","suffix","mode","verify","thisTime","other","getMinutesOfDay","newMode","paginationTemplate","directive","restrict","scope","model","position","onChangeCallback","link","element","attrs","page","totalItems","limit","currentPage","onChange","transclude","templateUrl","label","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","all","isMinutesInterval","isMinutesRange","__contains","isHoursInterval","isHoursRange","findMe","hoursInterval","fields","year","Util","base","document","getElementsByTagName","href","url","location","getBaseHref","booleanValue","elementName","checkboxes","getElementsByName","index","hasOwnProperty","checked","newOptions","item","weekday","selectedWeekdays","push","daysOfWeekExpression","days","weekdays","eachDay","shortcut","EVERY_3_HOURS","EVERY_2_HOURS","EVERY_30_MINUTES","EVERY_15_MINUTES","EVERY_10_MINUTES","EVERY_5_MINUTES","Hours","Minutes","createFrom","weekdayOptions","isConcreteMinutes","isConcreteHours","minuteIntervals","hourIntervals","range","Range","end","start","cronHours","intervalIndex","rangeIndex","regExp","RegExp","test","context","params","template","$timeout","format","sideBySide","inline","locale","date","calendarWeeks","maxDate","onStateChange","elementId","invalidState","defaultDate","buttons","showToday","showClose","icons","clear","close","event","target","value","validationHandle","cancel","parsedDate","isValid","error","$apply","datetimepicker","scheduleEditorTemplate","intervalInputTemplate","timeInputTemplate","verifyInput","e","message","$watchGroup","$watchCollection","$watch","newValue","oldValue","minutesStep","initMinutes","left","right","initHours","hash","handleReportError","response","report","optionalCallbackIfNoContextError","errorResponse","ErrorResponse","isBadRequest","contextError","asContextError","setErrors","handleGrafanaError","isContextError","elementList","indexTemplate","templatesTemplate","persistedtTemplate","schedulesTemplate","detailsTemplate","editScheduleModalTemplate","reportDetailsTemplate","confirmTopoverTemplate","config","$locationProvider","hashPrefix","html5Mode","confirmationPopoverDefaults","$stateProvider","$urlRouterProvider","state","controller","resolve","otherwise","$resource","method","isArray","triggerName","uid","WhoamiResource","whoami","successCallback","errorCallback","data","user","name","email","roles","isAdmin","isReportDesigner","GrafanaResource","$q","$http","onInvalidChange","onGlobalError","oldTimeZone","endpoints","dashboards","selected","endpoint","dashboard","onDateParamStateChange","parameter","$evalAsync","internalValue","paramHash","ret","sha256","update","internalFormat","digest","timezoneChanged","before","after","parametersByName","parameters","newDate","clone","validateTimezone","endpointChanged","resetErrors","loadEndpoints","list","description","newVal","deliveryOptions","scheduleOptions","oldVal","isGrafanaReport","newSelected","deferred","defer","selectedDashboard","dashboardId","get","then","res","getDashboardDetails","newDashboard","finally","promise","updateGrafanaParameters","EMAIL_REGEXP","ctrl","$validators","modelValue","isDefined","$isEmpty","$scope","$rootScope","UserService","fetchUserInfo","userInfo","setGlobalError","globalError","status","statusText","globalErrorDetails","ReportTemplateResource","refresh","reports","$window","$state","$stateParams","$uibModal","meta","reportId","online","ReportDetails","loading","reportForm","$invalid","onReportFormInvalidStateChange","loadDetails","showReportFormatOptions","showDeliveryOptions","showDeliveryOptionsToggle","showScheduleOptions","showScheduleOptionsToggle","deliverReport","scheduleReport","canEditTriggerName","requestParameters","userId","runReport","debug","responseType","fileBlob","Blob","fileURL","createObjectURL","filename","headers","toLowerCase","createElement","body","appendChild","style","download","click","URL","revokeObjectURL","removeChild","bodyAsString","fromCharCode","apply","Uint8Array","bodyAsJson","JSON","deliverySuccess","scheduleSuccess","execute","updateDateParameters","ReportScheduleResource","scheduledReports","pagination","offset","contentRange","parseContentRange","total","deleteAll","delete","schedule","edit","open","backdrop","keyboard","size","result","hideEndpointsChooser","getReportDetails","reportData","catch","err","$close","reject","$promise","ReportStorageResource","persistedReports","supportedSurveillanceCategories","surveillanceCategories","supportedCategories","categories","supportedFormats","formats","supportedTimezones","timezones","timezoneEditable","order","inputType","hidden","internalLocale","updateTimezoneEditable","xhr","XMLHttpRequest","checkResponseText","readyState","DONE","responseText","datetimeformatConfig","zoneId","onreadystatechange","setRequestHeader","send","hasErrors","isGrafanaEndpointSelected","endpointUid","dashboardUid","dashboardZone","guessedTimezone","updateTimezoneParameter","p","permissionDeniedTemplate","responseError","rejection","$emit","$httpProvider","defaults","common","interceptors","$on","baseTags","warn","$uibModalInstance","reload","dismiss","MODULE_NAME","ISO_8601_DATE_FORMAT","ISO_8601_DATE_FORMAT_WITHOUT_MILLIS","escapeSearchValue","replace","toFiql","clauses","first","fiql","property","operator","fromFiql","statements","segments","normalizeOffset","maxOffset","lastPageOffset","newOffset","Math","floor","editInPlaceTemplate","editListInPlaceTemplate","editMapInPlaceTemplate","fuzzy","enabled","rewriteLinks","editing","originalValue","copy","unedit","onKeyup","$event","keyCode","submit","onSubmit","valueType","step","add","confirmAndRemove","confirm","onEdit","values","newKey","keyType","$location","$log","$filter","_s","searchClauses","orderBy","initialLimit","search","Number","query","lastOffset","searchParam","newLimit","MAX_VALUE","queryParams","addSearchClause","clause","isDate","Date","getSearchClause","clauseEquals","b","addEpochTimestampSearchClause","removeSearchClause","removeSearchClauses","replaceSearchClause","oldClause","newClause","scopeOldClause","scopeNewClause","clearSearch","changeOrderBy","setOffset","o","setLimit","deleteItem","appendTransform","defaultTransform","transform","t","pattern"],"mappings":"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","file":"onms-reports.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn ","console.log('init: bootstrap-js'); // eslint-disable-line no-console\n\nconst jQuery = require('vendor/jquery-js');\nrequire('bootstrap/dist/js/bootstrap');\n\nmodule.exports = jQuery;\n","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/onms-elementList/templates/angular-onms-elementList-editListInPlace.html';\nvar html = \" <span ng-repeat=\\\"value in values\\\"> <button class=\\\"btn btn-sm btn-secondary\\\" ng-click=\\\"confirmAndRemove(values, value)\\\" style=margin-bottom:3px;margin-right:3px> {{value}}&nbsp;<i class=\\\"fa fa-close\\\"/> </button> </span> <span style=line-height:24px ng-hide=editing> <a href style=text-decoration:none ng-click=edit()><i class=\\\"fa fa-edit fa-lg\\\"/></a>&nbsp; </span> <span ng-show=editing class=text-nowrap> <input type={{valueType}} ng-keyup=onKeyup($event) ng-model=newValue /> <a href style=text-decoration:none ng-click=\\\"add(values, newValue)\\\"><i class=\\\"fa fa-plus fa-lg\\\"/></a> <a href style=text-decoration:none ng-click=unedit()><i class=\\\"fa fa-close fa-lg\\\"/></a> </span> <span ng-transclude/> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/onms-elementList/templates/angular-onms-elementList-editMapInPlace.html';\nvar html = \" <span ng-repeat=\\\"(key,value) in values\\\"> <button class=\\\"btn btn-sm btn-secondary\\\" ng-click=\\\"confirmAndRemove(values, key)\\\" style=margin-bottom:3px;margin-right:3px> <b>{{key}}:</b> {{value}}&nbsp;<i class=\\\"fa fa-close\\\"/> </button> </span> <span style=line-height:24px ng-hide=editing> <a href style=text-decoration:none ng-click=edit()><i class=\\\"fa fa-edit fa-lg\\\"/></a>&nbsp; </span> <span ng-show=editing class=text-nowrap> <input type={{keyType}} ng-keyup=onKeyup($event) ng-model=newKey /> <input type={{valueType}} ng-keyup=onKeyup($event) ng-model=newValue /> <a href style=text-decoration:none ng-click=\\\"add(values, newKey, newValue)\\\"><i class=\\\"fa fa-plus fa-lg\\\"/></a> <a href style=text-decoration:none ng-click=unedit()><i class=\\\"fa fa-close fa-lg\\\"/></a> </span> <span ng-transclude/> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import ClockMode from './ClockMode';\nimport Weekdays from './Weekdays';\nimport Types from './Types';\nimport Time from './Time';\nimport CronDefinition from './CronDefintion';\nimport WeekdayOptions from './WeekdayOptions';\nimport CustomParser from './parsers/CustomParser';\nimport DailyParser from './parsers/DailyParser';\nimport DayOfMonthParser from './parsers/DayOfMonthParser';\nimport ContextError from './ContextError';\nimport Intervals from './Intervals';\n\nimport CronParser from 'cron-parser';\nimport moment from 'moment';\nrequire('moment-timezone');\n\nexport default class ScheduleOptions {\n\n    /* eslint-disable complexity */\n    constructor(input) {\n        const options = typeof input === 'undefined' ? {} : input;\n\n        // Pre populate Values\n        this.clockMode = options.clockMode || ClockMode.FULL_CLOCK_SYSTEM;\n        if (this.clockMode !== ClockMode.HALF_CLOCK_SYSTEM && this.clockMode !== ClockMode.FULL_CLOCK_SYSTEM) {\n            throw new Error('Provided clock mode not supported')\n        }\n\n        // Daily\n        this.type = options.type || Types.DAILY;\n        this.interval = typeof options.interval !== 'undefined' ? options.interval : 0;\n        this.at = options.at || new Time({hours: 0, minutes: 0});\n        this.from = options.from || new Time({hours: 0, minutes: 0});\n        this.to = options.to || new Time({hours: 23, minutes: 0});\n\n        // Days per Week\n        this.daysOfWeek = options.daysOfWeek || {};\n\n        // Days per Month\n        this.dayOfMonth = options.dayOfMonth || '1'; // 1st day\n        this.weekOfMonth = options.dayOfMonth || '1';\n        this.dayOfWeek = options.dayOfWeek || String(Weekdays.Sunday.id);\n        this.dayOfMonthToggle = options.dayOfMonthToggle || 'dayOfMonth';\n\n        // Custom\n        this.cronExpression = options.cronExpression || '0 0/5 * * * ?';\n\n        // Report Time Zone to use (if any)\n        this.timezone = options.timezone || undefined;\n\n        // Enable debugging?\n        this.showDebugOptions = options.showDebugOptions || false;\n\n        // Ensure each time is actually a Time object\n        if (!(this.at instanceof Time)) {\n            this.at = new Time(this.at);\n        }\n        if (!(this.from instanceof Time)) {\n            this.from = new Time(this.from);\n        }\n        if (!(this.to instanceof Time)) {\n            this.to = new Time(this.to);\n        }\n\n        // Enforce the right clock mode\n        this.at.convert(this.clockMode);\n        this.from.convert(this.clockMode);\n        this.to.convert(this.clockMode);\n\n        // Enforce disabling Minutes\n        this.from.options.disableMinutes = true;\n        this.to.options.disableMinutes = true;\n\n        // Enforce correct type\n        if (!(this.daysOfWeek instanceof WeekdayOptions)) {\n            this.daysOfWeek = new WeekdayOptions(this.daysOfWeek);\n        }\n        this.interval = String(this.interval);\n    }\n\n    getSelectedWeekdays() {\n        const selectedWeekdays = Object.keys(this.daysOfWeek)\n            .filter(function(key) {\n                return this.daysOfWeek[key] === true;\n            }, this)\n            .map(function(key) {\n                return key.substr(0, 3).toUpperCase();\n            });\n        return selectedWeekdays;\n    }\n\n    getCronExpression() {\n\n        // Validate before actually returning the expression\n        this.validate();\n\n        // In case of a custom expression, just use it directly\n        if (this.type === Types.CUSTOM) {\n            return this.cronExpression;\n        }\n\n        // Otherwise, re Populate a cron definition\n        const cron = new CronDefinition({seconds: 0, minutes: 0, hours: 0, dayOfMonth: '*', month: '*', dayOfWeek: '?'});\n\n        // Daily Calculation\n        if (this.type === Types.DAILY || this.type === Types.DAYS_PER_WEEK) {\n            const interval = this.interval;\n            const at = new Time(this.at, ClockMode.FULL_CLOCK_SYSTEM);\n            const from = new Time(this.from, ClockMode.FULL_CLOCK_SYSTEM);\n            const to = new Time(this.to, ClockMode.FULL_CLOCK_SYSTEM);\n\n            if (interval === '0') { // Only once per day\n                cron.hours = at.hours;\n                cron.minutes = at.minutes;\n            } else if (interval === Intervals.EVERY_HOUR) { // Every hours\n                const hours = from.hours === to.hours ? from.hours : (from.hours + '-' + to.hours);\n                cron.hours = hours;\n                cron.minutes = 0;\n            } else if (interval % 60 === 0) { // every 2 or 3 hours\n                const hours = from.hours + '-' + to.hours;\n                cron.hours = hours + '/' + (interval / 60);\n                cron.minutes = 0;\n            } else { // every n minutes\n                if (from.hours === to.hours) {\n                    cron.hours = from.hours;\n                    cron.minutes = 0;\n                } else {\n                    // In case we defined an hours range, we decrease the end range by 1\n                    // This is necessary, because the cron expression \"0 0/30 1-2 * * ?\"\n                    // would fire at 1:00, 1:30, 2:00 and 2:30 every day.\n                    // By decreasing the hour by 1, it will fire at 1:00 and 1:30 instead.\n                    cron.hours = from.hours + '-' + (to.hours - 1);\n                    cron.minutes = '0/' + interval;\n                }\n            }\n        }\n\n        // Update dayOfWeek if we are in day of week mode\n        if (this.type === Types.DAYS_PER_WEEK) {\n            cron.dayOfWeek = this.getSelectedWeekdays().join(',');\n        }\n        if (this.type === Types.DAYS_PER_MONTH) {\n            const at = new Time(this.at, ClockMode.FULL_CLOCK_SYSTEM);\n            cron.minutes = at.minutes;\n            cron.hours = at.hours;\n            if (this.dayOfMonthToggle === 'dayOfMonth') {\n                cron.dayOfMonth = this.dayOfMonth;\n            } else {\n                cron.dayOfWeek = this.dayOfWeek + (this.weekOfMonth !== 'L' ? '#' : '') + this.weekOfMonth;\n            }\n        }\n\n        // Due to a quartz limitation either cron.dayOfMonth or cron.dayOfWeek must be '?'\n        // Source: http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html (Bottom of the page)\n        //\n        // As dayOfWeek is '?' by default if not defined, we set dayOfMonth to ? if dayOfWeek is set\n        if (this.type === Types.DAYS_PER_WEEK || this.type === Types.DAYS_PER_MONTH && cron.dayOfWeek !== '?') {\n            cron.dayOfMonth = '?';\n        }\n\n        return cron.asCronExpression();\n    }\n\n    validate() {\n        if (this.type === Types.CUSTOM) {\n            const items = this.cronExpression.trim().split(' ');\n            if (items.length < 6 || items.length > 7) {\n                throw new ContextError('cronExpression', 'Invalid cron expression');\n            }\n        }\n\n        // Ensure that we actually have set a day\n        if (this.type === Types.DAYS_PER_WEEK) {\n            if (this.type === Types.DAYS_PER_WEEK && this.getSelectedWeekdays().length === 0) {\n                throw new ContextError('dayOfWeek', 'Please select at least one day');\n            }\n        }\n\n        // If there is an interval, ensure from is before to, otherwise bail\n        if ((this.type === Types.DAILY || this.type === Types.DAYS_PER_WEEK) && this.interval !== '0') {\n            if (this.to.isBefore(this.from)) {\n                throw new ContextError('to', 'To time must be equal or after from time');\n            }\n        }\n    }\n\n    getServerZone() {\n        return this.serverZone || window._onmsZoneId;\n    }\n\n    getBrowserZone() {\n        return moment.tz.guess();\n    }\n\n    getNextExecution(displayZone) {\n        const interval = CronParser.parseExpression(this.getCronExpression(), {\n            tz: this.timezone,\n        });\n\n        const d = interval.next().toDate();\n        return moment.tz(d, displayZone || this.timezone || moment.tz.guess());\n    }\n\n    isValid() {\n        return typeof this.errors === 'undefined' || Object.keys(this.errors).length === 0;\n    }\n\n    static createFrom(input) {\n       const parsers = [\n            new DailyParser(),\n            new DayOfMonthParser(),\n            new CustomParser() // If nothing else was able to parse it, we make it a custom expression\n        ];\n        for (let i = 0; i < parsers.length; i++) {\n            if (parsers[i].canParse(input) === true) {\n                const options = parsers[i].parse(input);\n                return options;\n            }\n        }\n        // This is technically unreachable code\n        // but to make eslint happy, we have to put this in\n        return new CustomParser().parse(input);\n    }\n}\n","import ClockMode from './ClockMode';\n\nexport default class Time {\n    constructor (input, clockMode) {\n        const newInput = input || {};\n        this.hours = typeof newInput.hours === 'undefined' ? 12 : parseInt(newInput.hours, 10);\n        this.minutes = typeof newInput.minutes === 'undefined' ? 0 : parseInt(newInput.minutes, 10);\n        this.suffix = newInput.suffix || null;\n        this.mode = this.suffix === null ? ClockMode.FULL_CLOCK_SYSTEM : ClockMode.HALF_CLOCK_SYSTEM;\n\n        // Reset suffix if 24 clock mode\n        if (this.mode === ClockMode.FULL_CLOCK_SYSTEM) {\n            this.suffix = null;\n        }\n\n        // Additional options for rendering\n        this.options = newInput.options || {};\n        this.verify();\n\n        // If a clockMode is defined, automatically convert it\n        if (clockMode === ClockMode.FULL_CLOCK_SYSTEM || clockMode === ClockMode.HALF_CLOCK_SYSTEM) {\n            this.convert(clockMode);\n        }\n    }\n\n    verify() {\n        if (this.mode === ClockMode.HALF_CLOCK_SYSTEM) {\n            if (this.suffix !== 'am' && this.suffix !== 'pm') {\n                throw new Error('Clock suffix, must be either \\'am\\' or \\'pm\\', but was \\'' + this.suffix + '\\'');\n            }\n            if (this.hours <= 0 || this.hours > 12) {\n                throw new Error('Hours must be between [1-12] but was ' + this.hours);\n            }\n        }\n        if (this.mode === ClockMode.FULL_CLOCK_SYSTEM) {\n            if (this.hours < 0 || this.hours > 23) {\n                throw new Error('Hours must be between [0-23] but was ' + this.hours);\n            }\n        }\n        if (this.minutes < 0 || this.minutes > 59) {\n            throw new Error('Minutes must be between [0-59] but was ' + this.minutes);\n        }\n    }\n\n    getMinutesOfDay() {\n        const thisTime = new Time(this, ClockMode.FULL_CLOCK_SYSTEM);\n        return thisTime.hours * 60 + thisTime.minutes;\n    }\n\n    isBefore(other) {\n        if (!(other instanceof Time)) {\n            throw new Error('Other object must be of type Time, but was of type ' + typeof other);\n        }\n        const minutesOfDay = this.getMinutesOfDay();\n        const otherMinutesOfDay = other.getMinutesOfDay();\n        const before = minutesOfDay - otherMinutesOfDay < 0;\n        return before;\n    }\n\n    convert(newMode) {\n        if (newMode !== ClockMode.FULL_CLOCK_SYSTEM && newMode !== ClockMode.HALF_CLOCK_SYSTEM) {\n            throw new Error('Unknown Clock Mode \\'' + newMode + '\\'');\n        }\n\n        // If conversion is required\n        if (this.mode !== newMode) {\n            // AM/PM Clock -> 24 Hours Clock\n            if (newMode === ClockMode.FULL_CLOCK_SYSTEM) {\n                // 12:00 am is 00:00\n                if (this.hours === 12 && this.suffix === 'am') {\n                    this.hours = 0;\n                }\n                // anything pm requires a 12 hours offset\n                if (this.suffix === 'pm' && this.hours >= 1 && this.hours < 12) {\n                    this.hours += 12;\n                }\n                this.suffix = null;\n            }\n\n            // 24 Hours Clock -> AM/PM Clock\n            if (newMode === ClockMode.HALF_CLOCK_SYSTEM) {\n                // 00:00 is 12:00 am\n                if (this.hours === 0) {\n                    this.hours = 12;\n                    this.suffix = 'am';\n                }\n                // anything between 1:00 and 11:00 am (we consider hours only here) are 'am'\n                else if (this.hours >= 1 && this.hours <= 11) {\n                    this.suffix = 'am';\n                }\n                // 12:00 is 12:00 pm\n                else if (this.hours === 12) {\n                    this.suffix = 'pm';\n                }\n                // anything > 12, requires a -12 and is pm\n                else if (this.hours > 12) {\n                    this.hours -= 12;\n                    this.suffix = 'pm';\n                }\n            }\n            this.mode = newMode;\n        }\n        return this;\n    }\n\n    toString() {\n        return ('00' + this.hours).slice(-2) + ':' + ('00' + this.minutes).slice(-2) + (this.mode === ClockMode.HALF_CLOCK_SYSTEM ? (' ' + this.suffix) : '');\n    }\n}\n","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/lib/onms-http/403-permission-denied.html';\nvar html = \"<div class=modal-header> <h3><i class=\\\"fa fa-exclamation-triangle text-warning\\\"></i> Permission Denied</h3> </div> <div class=modal-body> <h5> You are not allowed to perform the requested action. </h5> <p class=text-muted> This is not supposed to happen. Please reload the page and contact your administrator if this occurs more often. </p> </div> <div class=modal-footer> <button class=\\\"btn btn-primary\\\" ng-click=reload()>Reload</button> </div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","const angular = require('vendor/angular-js');\nconst paginationTemplate = require('./pagination-toolbar.html');\n\nconst MODULE_NAME = 'onms.pagination';\n\nangular.module(MODULE_NAME, [ 'ui.bootstrap' ])\n    .directive('pagination', function() {\n        return {\n            restrict: 'E',\n            scope: {\n                model: '=model',\n                position: '@position',\n                onChangeCallback: '=onChange'\n            },\n            link: function(scope, element, attrs) {\n                if (scope.model === undefined) { throw new Error('No model defined.'); }\n                if (scope.model.page === undefined) { throw new Error('No attribute model.page defined'); }\n                if (scope.model.totalItems === undefined) { throw new Error('No attribute model.totalItems defined'); }\n                if (scope.model.limit === undefined) { throw new Error('No attribute model.limit defined'); }\n\n                var currentPage = scope.model.page;\n                scope.onChange = function() {\n                    if (currentPage !== scope.model.page) {\n                        currentPage = scope.model.page;\n                        if (scope.onChangeCallback) {\n                            scope.onChangeCallback();\n                        }\n                    }\n                };\n            },\n            transclude: true,\n            templateUrl: paginationTemplate\n        }\n    });\n","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/lib/onms-pagination/pagination-toolbar.html';\nvar html = \"<div> <div ng-transclude ng-if=\\\"position === 'bottom'\\\"></div> <div class=row> <div class=\\\"col-md-4 col-lg-6 col-sm-12\\\" ng-show=\\\"(model.totalItems / model.limit) > 1\\\"> <div style=margin:0 uib-pagination ng-model=model.page total-items=model.totalItems items-per-page=model.limit rotate=true boundary-links=true max-size=5 boundary-link-numbers=true ng-change=onChange()> </div> </div> <div class=\\\"col-md-8 col-lg-6 col-sm-12 mt-4\\\"> <pre class=pull-right ng-show=\\\"model.totalItems == 0\\\">No items found.</pre> <pre class=pull-right ng-show=\\\"model.totalItems > 0\\\">{{model.totalItems / model.page === 1\\n            ? \\\"Item \\\" + (model.offset + 1)\\n            : \\\"Items \\\" + ((model.page - 1) * model.limit + 1) + \\\" - \\\" + (model.page * model.limit > model.totalItems ? model.totalItems : model.page * model.limit)}} ({{model.totalItems}} total)</pre> </div> </div> <div ng-transclude ng-if=\\\"position === 'top' || position === undefined\\\"></div> </div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","const ClockMode = {\n    HALF_CLOCK_SYSTEM: 'AM_PM',\n    FULL_CLOCK_SYSTEM: '24_HOURS'\n};\nexport default ClockMode;\n","class Weekdays {\n    constructor(id, label) {\n        this.id = id;\n        this.label = label;\n    }\n\n    get shortcut() {\n        return this.label.substr(0, 3).toUpperCase();\n    }\n}\n\nconst Sunday = new Weekdays(1, 'Sunday');\nconst Monday = new Weekdays(2, 'Monday');\nconst Tuesday = new Weekdays(3, 'Tuesday');\nconst Wednesday = new Weekdays(4, 'Wednesday');\nconst Thursday = new Weekdays(5, 'Thursday');\nconst Friday = new Weekdays(6, 'Friday');\nconst Saturday = new Weekdays(7, 'Saturday');\n\nconst all = [\n    Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday\n];\n\nexport default {\n    all,\n    Weekdays,\n    Sunday,\n    Monday,\n    Tuesday,\n    Wednesday,\n    Thursday,\n    Friday,\n    Saturday\n};\n","export default class CronDefinition {\n    constructor(input) {\n        let options = typeof input !== 'undefined' ? input : {};\n        this.seconds = typeof options.seconds !== 'undefined' ? options.seconds : {};\n        this.minutes = typeof options.minutes !== 'undefined' ? options.minutes : {};\n        this.hours = typeof options.hours !== 'undefined' ? options.hours : {};\n        this.dayOfMonth = typeof options.dayOfMonth !== 'undefined' ? options.dayOfMonth : {};\n        this.month = typeof options.month !== 'undefined' ? options.month : {};\n        this.dayOfWeek = typeof options.dayOfWeek !== 'undefined' ? options.dayOfWeek : {};\n    }\n\n    asCronExpression() {\n        const array = [\n            this.seconds, this.minutes, this.hours, this.dayOfMonth, this.month, this.dayOfWeek\n        ];\n        return array.join(' ');\n    }\n\n    get interval() {\n        if (this.isMinutesInterval()) {\n            return this.minutes.substr(this.minutes.indexOf('/') + 1);\n        }\n        if (this.isHoursInterval()) {\n            const hoursInterval = this.hours.substr(this.hours.indexOf('/') + 1);\n            return String(parseInt(hoursInterval, 10) * 60);\n        }\n\n        // If there is no range, it is not possible to determine\n        // anymore if the user originally selected every hour, every 30, 15, 10 or 5 minutes\n        // However if the hours are a range, we must set the interval to anything != 0\n        if (this.isHoursRange() >= 1) {\n            return '60'; // fallback to every hour\n        }\n        return '0';\n    }\n\n    isConcreteMinutes() {\n        return !this.isMinutesInterval()\n            && !this.isMinutesRange()\n            && !this.__contains(this.minutes, ',')\n            && parseInt(this.minutes, 10) >= 0;\n    }\n\n    isMinutesInterval() {\n        return this.__contains(this.minutes, '/');\n    }\n\n    isMinutesRange() {\n        return this.__contains(this.minutes, '-');\n    }\n\n    isConcreteHours() {\n        return !this.isHoursInterval()\n            && !this.isHoursRange()\n            && !this.__contains(this.hours, ',')\n            && parseInt(this.hours, 10) >= 0;\n    }\n\n    isHoursRange() {\n        return this.__contains(this.hours, '-');\n    }\n\n    isHoursInterval() {\n        return this.__contains(this.hours, '/');\n    }\n\n    __contains(input, findMe) {\n        if (typeof input === 'string') {\n            return input.indexOf(findMe) >= 1;\n        }\n        return false;\n    }\n\n    static createFrom(input) {\n        if (typeof input !== 'string' || input === '' || input.trim() === '') {\n            throw new Error('Cannot parse provided expression. Please make sure it is a valid cron expression');\n        }\n        const cronExpression = input.trim();\n        const fields = cronExpression.split(' ');\n        if (fields.length < 6 || fields.length > 7) {\n            throw new Error('Invalid Cron Expression. Expected field count is 6 or 7, but got ' + fields.length);\n        }\n        // Parse it\n        const cron = new CronDefinition({\n            seconds: fields[0],\n            minutes: fields[1],\n            hours: fields[2],\n            dayOfMonth: fields[3],\n            month: fields[4],\n            dayOfWeek: fields[5]\n        });\n        if (fields.length === 7) {\n            cron.year = fields[6];\n        }\n        return cron;\n    }\n}\n","export default class Util {\n\tstatic getBaseHref() {\n\t\tconst base = document.getElementsByTagName('base')[0];\n\t\tif (base) {\n\t\t\treturn base.href;\n\t\t}\n\t\treturn '';\n\t}\n\tstatic setLocation(url) {\n\t\tif (window && window.location) {\n\t\t\twindow.location.href = Util.getBaseHref() + url;\n\t\t}\n\t}\n\tstatic toggle(booleanValue, elementName) {\n\t\tvar checkboxes = document.getElementsByName(elementName);\n\t\tfor (var index in checkboxes) {\n\t\t\tif (checkboxes.hasOwnProperty(index)) {\n\t\t\t\tcheckboxes[index].checked = booleanValue;\n\t\t\t}\n\t\t}\n\t}\n}","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/onms-classifications/views/modals/popover.html';\nvar html = \"<div class=\\\"popover px-2 py-2\\\" ng-class=\\\"[vm.$attrs.placement || vm.defaults.placement, 'bs-popover-' + (vm.$attrs.placement || vm.defaults.placement), vm.$attrs.popoverClass || vm.defaults.popoverClass, {fade: vm.animation}]\\\"> <div class=\\\"popover-arrow arrow\\\" style=top:50px></div> <h3 class=popover-title ng-bind-html=vm.$attrs.title></h3> <div class=popover-content> <p ng-bind-html=vm.$attrs.message></p> <div class=row> <div class=col-sm-6 ng-if=\\\"!vm.$attrs.hideConfirmButton && !vm.defaults.hideConfirmButton\\\" ng-class=\\\"{'col-sm-offset-3': vm.$attrs.hideCancelButton || vm.defaults.hideCancelButton}\\\"> <button class=\\\"btn btn-block confirm-button\\\" ng-class=\\\"'btn-' + (vm.$attrs.confirmButtonType || vm.defaults.confirmButtonType)\\\" ng-click=\\\"vm.onConfirm(); vm.hidePopover()\\\" ng-bind-html=\\\"vm.$attrs.confirmText || vm.defaults.confirmText\\\"> </button> </div> <div class=col-sm-6 ng-if=\\\"!vm.$attrs.hideCancelButton && !vm.defaults.hideCancelButton\\\" ng-class=\\\"{'col-sm-offset-3': vm.$attrs.hideConfirmButton || vm.defaults.hideConfirmButton}\\\"> <button class=\\\"btn btn-block cancel-button\\\" ng-class=\\\"'btn-' + (vm.$attrs.cancelButtonType || vm.defaults.cancelButtonType)\\\" ng-click=\\\"vm.onCancel(); vm.hidePopover()\\\" ng-bind-html=\\\"vm.$attrs.cancelText || vm.defaults.cancelText\\\"> </button> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import Weekdays from './Weekdays';\n\nexport default class WeekdayOptions {\n    constructor(input) {\n        let options = {};\n\n        // in case of an array, convert it to an object\n        if (Array.isArray(input)) {\n            let newOptions = {};\n            input.forEach((item) => {\n                if (item instanceof Weekdays.Weekdays) {\n                    newOptions[item.label] = true;\n                } else {\n                    newOptions[item] = true;\n                }\n            });\n            options = newOptions;\n        } else if (typeof input !== 'undefined') {\n            options = input;\n        }\n\n        // Initialize\n        Object.values(Weekdays.all).forEach((weekday) => {\n            if (options.hasOwnProperty(weekday.label) === false) {\n                this[weekday.label] = false;\n            } else {\n                this[weekday.label] = options[weekday.label] && true; // enforce boolean\n            }\n        }, this);\n    }\n\n    getSelectedWeekdays() {\n        const selectedWeekdays = [];\n        Object.values(Weekdays.all).forEach((weekday) => {\n            if (this[weekday.label] === true) {\n                selectedWeekdays.push(weekday);\n            }\n        });\n        return selectedWeekdays;\n    }\n\n    static createFrom(daysOfWeekExpression) {\n        const days = daysOfWeekExpression.split(',');\n        const weekdays = Object.values(Weekdays.all);\n        const selectedWeekdays = [];\n        days.forEach((eachDay) => {\n            for (let i = 0; i < weekdays.length; i++) {\n                if (eachDay === weekdays[i].shortcut) {\n                    selectedWeekdays.push(weekdays[i])\n                }\n            }\n        });\n        const options = new WeekdayOptions(selectedWeekdays);\n        return options;\n    }\n}\n","const EVERY_3_HOURS = '180';\nconst EVERY_2_HOURS = '120';\nconst EVERY_HOUR = '60';\nconst EVERY_30_MINUTES = '30';\nconst EVERY_15_MINUTES = '15';\nconst EVERY_10_MINUTES = '10';\nconst EVERY_5_MINUTES = '5';\n\nconst Minutes = [\n    EVERY_30_MINUTES,\n    EVERY_15_MINUTES,\n    EVERY_10_MINUTES,\n    EVERY_5_MINUTES\n];\n\nconst Hours = [\n    EVERY_3_HOURS,\n    EVERY_2_HOURS,\n    EVERY_HOUR\n];\n\nconst all = [\n    EVERY_3_HOURS,\n    EVERY_2_HOURS,\n    EVERY_HOUR,\n    EVERY_30_MINUTES,\n    EVERY_15_MINUTES,\n    EVERY_10_MINUTES,\n    EVERY_5_MINUTES,\n];\n\nexport default {\n    all,\n    EVERY_3_HOURS,\n    EVERY_2_HOURS,\n    EVERY_HOUR,\n    EVERY_30_MINUTES,\n    EVERY_15_MINUTES,\n    EVERY_10_MINUTES,\n    EVERY_5_MINUTES,\n    Hours,\n    Minutes,\n};","/* Angular Core */\nconst angular = require('angular');\nrequire('angular-animate');\nrequire('angular-cookies');\nrequire('angular-route');\nrequire('angular-resource');\nrequire('angular-sanitize');\n\n/* 3rd-Party Modules */\nrequire('angular-growl-v2');\nrequire('angular-loading-bar');\n\nrequire('angular-growl-v2/build/angular-growl.css');\nrequire('angular-loading-bar/build/loading-bar.css');\n\n/* Bootstrap UI */\nrequire('vendor/bootstrap-js');\nrequire('angular-bootstrap-checkbox');\nrequire('ui-bootstrap4'); // angular-ui-boostrap for bootstrap 4\n\nconsole.log('init: angular-js'); // eslint-disable-line no-console\n\nmodule.exports = window['angular'] = angular;","import Types from '../Types';\nimport ScheduleOptions from '../ScheduleOptions';\n\n/**\n * If all fails, the custom parser will handle any cron expression as a Custom ScheduleOptions.\n */\nexport default class CustomParser {\n    canParse(input) {\n        return true;\n    }\n\n    parse(input) {\n        return new ScheduleOptions({ type: Types.CUSTOM, cronExpression: input });\n    }\n}","import Types from '../Types';\nimport Time from '../Time';\nimport Range from '../Range';\nimport CronDefinition from '../CronDefintion';\nimport WeekdayOptions from '../WeekdayOptions';\nimport ScheduleOptions from '../ScheduleOptions';\nimport Intervals from '../Intervals';\n\n/**\n * The daily parser will parse any cron expression,\n * which was generated by the Schedule Editor in \"Daily\" or \"Days per Week\" Mode.\n */\nexport default class DailyParser {\n\n    canParse(input) {\n        const cron = CronDefinition.createFrom(input);\n        const weekdayOptions = WeekdayOptions.createFrom(cron.dayOfWeek);\n        const canParse = cron.year === undefined\n            && cron.seconds === '0'\n            && (cron.isConcreteMinutes() || (cron.isMinutesInterval() && cron.minutes.indexOf('0') === 0))\n            && (cron.isConcreteHours() || cron.isHoursInterval() || cron.isHoursRange())\n            && (cron.month === '*')\n            && ((cron.dayOfMonth === '*' && cron.dayOfWeek === '?')\n                    || (cron.dayOfMonth === '?' && weekdayOptions.getSelectedWeekdays().length > 0));\n        if (canParse) {\n            if (cron.isMinutesInterval()) {\n                const minuteIntervals = Intervals.Minutes;\n                return minuteIntervals.indexOf(cron.interval) >= 0;\n            }\n            if (cron.isHoursInterval()) {\n                const hourIntervals = Intervals.Hours;\n                return hourIntervals.indexOf(cron.interval) >= 0;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    parse(input) {\n        const cron = CronDefinition.createFrom(input);\n        const options = new ScheduleOptions({ type: Types.DAILY });\n        options.interval = cron.interval;\n\n        // Parse at, from and to\n        if (options.interval === '0') {\n            options.at = new Time({ hours: cron.hours, minutes: cron.minutes });\n        } else {\n            const range = new Range(cron.hours);\n\n            // add one hour offset in case of minutes interval and hours are range\n            if ((options.interval % 60 !== 0) && cron.isHoursRange()) {\n                // When generating the cron, the to hour was decreased by one,\n                // we now revert it by increasing it by 1\n                range.end = parseInt(range.end, 10) + 1;\n            }\n            options.from = new Time({hours: range.start, minutes: 0});\n            options.to = new Time({hours: range.end, minutes: 0});\n        }\n\n        // If days of week are set, switch type and apply daysOfWeek accordingly\n        const weekdayOptions = WeekdayOptions.createFrom(cron.dayOfWeek);\n        if (weekdayOptions.getSelectedWeekdays().length > 0) {\n            options.type = Types.DAYS_PER_WEEK;\n            options.daysOfWeek = weekdayOptions;\n        }\n        return options;\n    }\n}\n","export default class Range {\n    constructor(cronHours) {\n        const intervalIndex = cronHours.indexOf('/');\n        const rangeIndex = cronHours.indexOf('-');\n        const range = cronHours.substr(0, intervalIndex === -1 ? cronHours.length : intervalIndex); // remove interval\n        this.start = range.substr(0, rangeIndex === -1 ? range.length : rangeIndex);\n        this.end = rangeIndex === -1 ? this.start : range.substr(rangeIndex + 1);\n    }\n}","import Types from '../Types';\nimport Time from '../Time';\nimport CronDefinition from '../CronDefintion';\nimport ScheduleOptions from '../ScheduleOptions';\n\n/**\n * The DayOfMonthParser will parse any cron expression,\n * which was generated by the Schedule Editor in \"Days of Month\" mode.\n */\nexport default class DayOfMonthParser {\n    constructor() {\n        this.regExp = new RegExp('[1-7]#[1,2,3]|L');\n    }\n\n    canParse(input) {\n        const cron = CronDefinition.createFrom(input);\n        const canParse = cron.year === undefined\n            && cron.seconds === '0'\n            && cron.isConcreteMinutes()\n            && cron.isConcreteHours()\n            && cron.month === '*'\n            && cron.dayOfMonth.indexOf(',') === -1\n            && cron.dayOfMonth.indexOf('-') === -1\n            && cron.dayOfMonth.indexOf('/') === -1\n            // If dayOfMonth is set, dayOfWeek must be ?\n            // Or dayOfMonth is ?, then dayOfWeek must be set, only then it is parsable\n            && (((parseInt(cron.dayOfMonth, 10) >= 1  && parseInt(cron.dayOfMonth, 10) <= 31)\n                    || cron.dayOfMonth === 'L' && cron.dayOfWeek === '?')\n                || (cron.dayOfMonth === '?' && this.regExp.test(cron.dayOfWeek)));\n        return canParse;\n    }\n\n    parse(input) {\n        const cron = CronDefinition.createFrom(input);\n        const options = new ScheduleOptions({\n            type: Types.DAYS_PER_MONTH,\n            at: new Time({ hours: cron.hours, minutes: cron.minutes })\n        });\n\n        // Determine the toggle\n        if (cron.dayOfMonth === '?') {\n            options.dayOfMonthToggle = 'dayOfWeek';\n        } else {\n            options.dayOfMonthToggle = 'dayOfMonth';\n        }\n\n        // Set the values according of the toggle\n        if (options.dayOfMonthToggle === 'dayOfMonth') {\n            options.dayOfMonth = cron.dayOfMonth;\n        } else {\n            options.weekOfMonth = cron.dayOfWeek.substr(-1);\n            options.dayOfWeek = cron.dayOfWeek.substr(0, 1);\n        }\n        return options;\n    }\n}","export default class ContextError extends Error {\n    constructor(context='entity', ...params) {\n        super(...params);\n        this.context = context;\n    }\n}","'use strict';\n\nrequire('expose-loader?moment!moment');\nrequire('vendor/jquery-js');\nrequire('tempusdominus-bootstrap-4/build/js/tempusdominus-bootstrap-4');\nrequire('tempusdominus-bootstrap-4/build/css/tempusdominus-bootstrap-4.css');\n\nconst angular = require('vendor/angular-js');\nconst template  = require('./template.html');\n\nangular.module('onms.datetimepicker', ['ui.bootstrap'])\n    .directive('datetimepicker', function($timeout) {\n        return {\n            restrict: 'E',\n            templateUrl: template,\n            scope: {\n                id: '@?id',\n                format: '<?format',\n                sideBySide: '@?expand',\n                inline: '@?inline',\n                locale: '<?locale',\n                date: '=?ngModel',\n                calendarWeeks: '@?calendarWeeks',\n                maxDate: '=?maxDate',\n                options: '=?options',\n                onStateChange: '&?onStateChange'\n            },\n            link: function(scope, element, attrs) {\n                // Apply if id is provided\n                if (scope.id) {\n                    scope.elementId = scope.id;\n                } else { // otherwise calculate it\n                    scope.id = angular.element('[data-toggle=\"datetimepicker\"]').length;\n                    scope.elementId = 'datetimepicker-' + scope.id;\n                }\n                scope.onStateChange = scope.onStateChange || function(invalidState) {}; // eslint-disable-line @typescript-eslint/no-empty-function\n\n                // Determine the options\n                scope.options = scope.options || {};\n                scope.options.sideBySide = scope.sideBySide === \"true\" || false;\n                scope.options.inline = scope.inline === \"true\" || false;\n                scope.options.calendarWeeks = scope.calendarWeeks === \"true\" || false;\n                scope.options.format = scope.options.format || 'YYYY-MM-DD HH:mm';\n                if (scope.locale) {\n                    scope.options.locale = scope.locale;\n                }\n                if (scope.date) {\n                    scope.options.defaultDate = scope.date;\n                }\n                if (scope.maxDate) {\n                    scope.options.maxDate = scope.maxDate;\n                }\n                if (scope.format) {\n                    scope.options.format = scope.format;\n                }\n                scope.options.buttons = {\n                    showToday: true,\n                    showClose: true\n                };\n\n                // Override the clear icon as it is using fa-delete by default which is not available\n                scope.options.icons = {\n                    clear: \"fa fa-trash\",\n                    close: \"fa fa-check\",\n                };\n\n                // Listen for keydown events to validate the input immediately\n                // and not only on lost focus\n                element.bind('keydown', function(event) {\n                    if (event.target && event.target.value) {\n                        // Stop previous validation\n                        if (scope.validationHandle) {\n                            $timeout.cancel(scope.validationHandle);\n                        }\n                        // Trigger validation\n                        scope.validationHandle = $timeout(function() {\n                            const parsedDate = moment(event.target.value, scope.options.format);\n                            if (parsedDate.isValid()) {\n                                scope.date = parsedDate;\n                                scope.error = false;\n                            } else {\n                                scope.error = true;\n                            }\n                            scope.onStateChange({invalidState: scope.error});\n                        }, 100);\n                    }\n                });\n\n                // On change of datetimepicker, update the model value\n                element.bind('change.datetimepicker', function(event) {\n                    scope.$apply(function() {\n                        if (event.date) {\n                            scope.date = event.date.format(scope.options.format);\n                            scope.error = false;\n                            scope.onStateChange({invalidState: scope.error, date: scope.date})\n                        }\n                    });\n                });\n\n                // Component is not yet rendered, so invoke it delayed\n                $timeout(function() {\n                    angular.element(\"#\" + scope.elementId).datetimepicker(scope.options);\n                }, 0);\n            }\n        }\n    })\n;\n\nmodule.exports = angular;","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/lib/onms-datetimepicker/template.html';\nvar html = \"<div class=form-group> <div class=\\\"input-group date\\\" id={{elementId}} data-target-input=nearest> <input type=text ng-class=\\\"{ 'is-invalid': error }\\\" class=\\\"form-control datetimepicker\\\" data-target=#{{elementId}} /> <div class=input-group-append data-target=#{{elementId}} data-toggle=datetimepicker> <div class=input-group-text><i class=\\\"fa fa-calendar\\\"></i></div> </div> <div class=invalid-feedback ng-show=\\\"error === true\\\">Please provide a valid date value.</div> </div> </div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import ClockMode from './scripts/ClockMode';\nimport Time from './scripts/Time';\nimport ScheduleOptions from './scripts/ScheduleOptions';\nimport Types from './scripts/Types';\nimport Weekdays from './scripts/Weekdays.js';\n\nconst scheduleEditorTemplate = require('./templates/schedule-editor.tpl.html');\nconst intervalInputTemplate = require('./templates/interval-input.tpl.html');\nconst timeInputTemplate = require('./templates/time-input.tpl.html');\n\nconst MODULE_NAME = 'onms.schedule.editor';\n\nangular.module(MODULE_NAME, [])\n    .directive('onmsScheduleEditor', function() {\n        return {\n            restrict: 'E',\n            templateUrl: scheduleEditorTemplate,\n            scope: {\n                id: '=?id',\n                options: '=ngModel'\n            },\n            link: function(scope, element, attrs) {\n                scope.id = scope.id || 'schedule';\n                scope.options.type = scope.options.type || Types.DAILY;\n                scope.options = new ScheduleOptions(scope.options);\n                scope.weekdays = Weekdays.all;\n\n                // Updates the cron expression on each option change\n                scope.verifyInput = function() {\n                    try {\n                        scope.errors = undefined;\n                        scope.options.errors = scope.errors;\n                        scope.options.to.error = undefined;\n                        scope.options.getCronExpression();\n                    } catch (e) {\n                        if (e.context === 'to') {\n                            scope.options.to.error = e.message;\n                            scope.errors = { to: e.message };\n                        } else if (e.context) {\n                            scope.errors = {};\n                            scope.errors[e.context] = e.message;\n                        } else {\n                            console.log('Unexpected error occurred', e);\n                        }\n                        scope.options.errors = scope.errors;\n                    }\n                };\n\n                // Ensure we validate and calculate the cron expression after any change\n                scope.$watchGroup([\n                    'options.type',\n                    'options.interval',\n                    'options.dayOfMonth',\n                    'options.dayOfWeek',\n                    'options.weekOfMonth',\n                    'options.dayOfMonthToggle',\n                    'options.cronExpression'\n                ], scope.verifyInput);\n                scope.$watchCollection('options.at', scope.verifyInput);\n                scope.$watchCollection('options.from', scope.verifyInput);\n                scope.$watchCollection('options.to', scope.verifyInput);\n                scope.$watchCollection('options.daysOfWeek', scope.verifyInput);\n\n                // Change the dayOfMonthToggle if any value was changed from the other \"group\"\n                scope.$watch('options.dayOfMonth', function(newValue, oldValue) {\n                    if (newValue !== oldValue && scope.options.dayOfMonthToggle !== 'dayOfMonth') {\n                        scope.options.dayOfMonthToggle = 'dayOfMonth';\n                    }\n                });\n                scope.$watchGroup(['options.dayOfWeek', 'options.weekOfMonth'], function(newValue, oldValue) {\n                    if ((newValue[0] !== oldValue[0] || newValue[1] !== oldValue[1])\n                            && scope.options.dayOfMonthToggle !== 'dayOfWeek') {\n                        scope.options.dayOfMonthToggle = 'dayOfWeek';\n                    }\n                });\n            }\n        }\n    })\n\n    .directive('onmsScheduleInterval', function() {\n        return {\n            restrict: 'E',\n            templateUrl: intervalInputTemplate,\n            scope: {\n                value: '=ngModel'\n            },\n        }\n    })\n\n    .directive('onmsTimeInput', [function() {\n        return {\n            restrict: 'E',\n            templateUrl: timeInputTemplate,\n            scope: {\n                // The model which is used for rendering.\n                // Must have hours, minutes and suffix property.\n                // If suffix is not set, 24 hours format is assumed\n                model: '=ngModel',\n\n                // Defines if the time uses 24 hours format, or am/pm\n                mode: '=?mode',\n\n                // in case you don't want to show all minutes,\n                // you can define the step size e.g. 5\n                // to only show 0, 5, 10, etc.\n                // Default is 5\n                minutesStep: '=?minutesStep',\n\n                // If you want to disable minute input\n                disableMinutes: '=?disableMinutes'\n            },\n            link: function(scope, element, attrs) {\n                // Set default options, if not defined\n                if (scope.model.options === undefined) {\n                    scope.options = {\n                        mode: ClockMode.HALF_CLOCK_SYSTEM,\n                        disableMinutes: false,\n                        minutesStep: 5,\n                    }\n                } else {\n                    scope.options = scope.model.options;\n                }\n                if (typeof scope.disableMinutes === 'boolean') {\n                    scope.options.disableMinutes = scope.disableMinutes;\n                }\n                if (scope.mode === ClockMode.FULL_CLOCK_SYSTEM || scope.mode === ClockMode.HALF_CLOCK_SYSTEM) {\n                    scope.options.mode = scope.mode;\n                }\n                if (typeof scope.minutesStep === 'number') {\n                    scope.options.minutesStep = scope.minutesStep;\n                }\n\n                // Enforce either the defined rendered mode, or if not provided the mode of the model\n                scope.options.mode = scope.options.mode || scope.model.mode;\n                if (scope.options.mode !== ClockMode.FULL_CLOCK_SYSTEM && scope.options.mode !== ClockMode.HALF_CLOCK_SYSTEM) {\n                    scope.options.mode = ClockMode.FULL_CLOCK_SYSTEM;\n                }\n                if (typeof scope.options.disableMinutes !== 'boolean') {\n                    scope.options.disableMinutes = false;\n                }\n                if (typeof scope.options.minutesStep !== 'number') {\n                    scope.options.minutesStep = 5;\n                }\n\n                // Verify model\n                if (!(scope.model instanceof Time)) {\n                    scope.model = new Time(scope.model);\n                }\n\n                // Enforce correct time visualization\n                scope.model.convert(scope.options.mode);\n\n                var initMinutes = function() {\n                    scope.minutes = [];\n                    for (var i=0; i<60; i+=scope.options.minutesStep) {\n                        scope.minutes.push(i);\n                    }\n                    // Ensure the defined minutes are available\n                    if (scope.minutes.indexOf(scope.model.minutes) === -1) {\n                        scope.minutes.push(scope.model.minutes);\n                    }\n                    scope.minutes.sort(function(left, right) {\n                        return parseInt(left, 10) - parseInt(right, 10);\n                    });\n                };\n                var initHours = function() {\n                    scope.hours = [];\n                    var start = scope.model.mode === ClockMode.HALF_CLOCK_SYSTEM ? 1: 0;\n                    var end = scope.model.mode === ClockMode.HALF_CLOCK_SYSTEM ? 12 : 23;\n                    for (var i=start; i<=end; i++) {\n                        scope.hours.push(i);\n                    }\n                };\n\n                // Input variables\n                initMinutes();\n                initHours();\n\n                // When minutesStep changed, update minutes values\n                scope.$watch('options.minutesStep', function(newValue) {\n                    initMinutes();\n                });\n                // When the mode changed, convert\n                scope.$watch('options.mode', function(newValue, oldValue) {\n                    if (newValue !== oldValue) {\n                        // convert time\n                        scope.model.convert(scope.options.mode);\n\n                        // Reset hours as they are different for each mode\n                        initHours();\n                    }\n                });\n            }\n        }\n    }])\n    ;\n","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/lib/onms-schedule-editor/templates/schedule-editor.tpl.html';\nvar html = \"<style type=text/css>onms-time-input{display:inline-block}.iso-datetime{font-family:monospace}.zone{display:inline;margin:unset;padding:.5rem;vertical-align:middle}.next-scheduled-time{padding-top:1rem;padding-bottom:1rem}td{padding-right:.4rem}</style> <form class=form novalidate> <div class=\\\"\\\"> <div class=form-check> <input class=form-check-input type=radio name={{id}}TypeSelect id={{id}}TypeDaily ng-model=options.type value=daily> <label class=form-check-label for={{id}}TypeDaily> Daily </label> </div> <div class=form-check> <input class=form-check-input type=radio name={{id}}TypeSelect id={{id}}TypeDaysPerWeek ng-model=options.type value=daysPerWeek> <label class=form-check-label for={{id}}TypeDaysPerWeek> Days per week </label> </div> <div class=form-check> <input class=form-check-input type=radio name={{id}}TypeSelect id={{id}}TypeDaysPerMonth ng-model=options.type value=daysPerMonth> <label class=form-check-label for={{id}}TypeDaysPerMonth> Days per month </label> </div> <div class=form-check> <input class=form-check-input type=radio name={{id}}TypeSelect id={{id}}TypeCustom ng-model=options.type value=custom> <label class=form-check-label for={{id}}TypeCustom> Cron Expression </label> </div> </div> <hr/> <div class=\\\"\\\" ng-if=\\\"options.type === 'daysPerWeek'\\\"> <label>Weekdays</label> <div class=\\\"form-check ml-1\\\" ng-repeat=\\\"weekday in weekdays\\\"> <input class=form-check-input ng-class=\\\"{'is-invalid': errors.dayOfWeek}\\\" type=checkbox name={{id}}{{weekday.id}} id={{id}}{{weekday.id}} ng-model=options.daysOfWeek[weekday.label] value=custom> <label class=form-check-label for={{id}}{{weekday.id}}> {{weekday.label}} </label> </div> <p class=\\\"text-danger small mb-0\\\" ng-if=errors.dayOfWeek>{{errors.dayOfWeek}}</p> </div> <div class=mt-2 ng-if=\\\"options.type === 'daily' || options.type === 'daysPerWeek'\\\"> <div class=form-group> <label>Interval</label> <onms-schedule-interval ng-model=options.interval></onms-schedule-interval> </div> <div class=form-group ng-if=\\\"options.interval === '0'\\\"> <label>At</label> <onms-time-input ng-model=options.at options=options.at /> <span class=zone>{{options.timezone}}</span> </div> <div class=form-group ng-if=\\\"options.interval !== '0'\\\"> <label>From</label> <onms-time-input ng-model=options.from options=options.from /> </div> <div class=form-group ng-if=\\\"options.interval !== '0'\\\"> <label>To</label> <onms-time-input ng-model=options.to options=options.to /> </div> </div> <div class=\\\"\\\" ng-if=\\\"options.type === 'daysPerMonth'\\\"> <div class=form-group> <label>At</label> <onms-time-input ng-model=options.at options=options.at /> <span class=zone>{{options.timezone}}</span> </div> <div class=\\\"\\\"> <label>On</label> <div class=\\\"form-inline my-1 ml-1\\\"> <input class=\\\"\\\" type=radio ng-model=options.dayOfMonthToggle value=dayOfMonth> <span class=mx-1>the</span> <select class=\\\"form-control custom-select\\\" ng-model=options.dayOfMonth> <option value=1>1st</option> <option value=2>2nd</option> <option value=3>3rd</option> <option value=4>4th</option> <option value=5>5th</option> <option value=6>6th</option> <option value=7>7th</option> <option value=8>8th</option> <option value=9>9th</option> <option value=10>10th</option> <option value=11>11th</option> <option value=12>12th</option> <option value=13>13th</option> <option value=14>14th</option> <option value=15>15th</option> <option value=16>16th</option> <option value=17>17th</option> <option value=18>18th</option> <option value=19>19th</option> <option value=20>20th</option> <option value=21>21st</option> <option value=22>22nd</option> <option value=23>23rd</option> <option value=24>24th</option> <option value=25>25th</option> <option value=26>26th</option> <option value=27>27th</option> <option value=28>28th</option> <option value=29>29th</option> <option value=30>30th</option> <option value=31>31st</option> <option value=L>Last</option> </select> <span class=ml-1>day of every month</span> </div> <div class=\\\"form-inline my-1 ml-1\\\"> <input class=\\\"\\\" type=radio ng-model=options.dayOfMonthToggle value=dayOfWeek> <span class=mx-1>the</span> <select class=\\\"form-control custom-select\\\" ng-model=options.weekOfMonth> <option value=1>first</option> <option value=2>second</option> <option value=3>third</option> <option value=4>fourth</option> <option value=L>last</option> </select> <select class=\\\"form-control custom-select mx-1\\\" ng-model=options.dayOfWeek> <option ng-repeat=\\\"weekday in weekdays track by weekday.id\\\" value={{weekday.id}}>{{weekday.label}}</option> </select> <span>of every month</span> </div> </div> </div> <div class=\\\"\\\" ng-if=\\\"options.type === 'custom'\\\"> <div class=form-inline> <input id=customCronExpressionInput type=text class=form-control ng-class=\\\"{'is-invalid': errors.cronExpression}\\\" ng-model=\\\"options.cronExpression \\\"/> <span class=zone>{{options.timezone}}</span> <a href=http://www.quartz-scheduler.org/documentation/quartz-2.2.2/tutorials/crontrigger.html class=ml-2 target=_blank title=\\\"Help me\\\"> <i class=\\\"fa fa-question-circle\\\" aria-hidden=true></i> </a> <p class=invalid-feedback ng-if=errors.cronExpression>{{errors.cronExpression}}</p> </div> </div> <div class=next-scheduled-time> <label> Next scheduled time: </label> <table> <tr> <td> Report: </td> <td> <span class=iso-datetime>{{options.getNextExecution(options.timezone).format(\\\"llll\\\")}}</span> </td> <td> ({{options.timezone}}) </td> </tr> <tr ng-if=options.getServerZone()> <td> Server: </td> <td> <span class=iso-datetime>{{options.getNextExecution(options.getServerZone()).format(\\\"llll\\\")}}</span> </td> <td> ({{options.getServerZone()}}) </td> </tr> <tr> <td> Browser: </td> <td> <span class=iso-datetime>{{options.getNextExecution(options.getBrowserZone()).format(\\\"llll\\\")}}</span> </td> <td> ({{options.getBrowserZone()}}) </td> </tr> </table> </div> <div class=\\\"text-muted mt-2\\\" ng-if=options.showDebugOptions> <hr/> <label>Generated Cron Expression</label> <pre class=\\\"bg-light px-2 py-2 text-muted\\\">{{options.getCronExpression()}}</pre> <label>Schedule Options</label> <pre class=\\\"bg-light px-2 py-2 text-muted\\\">{{options | json}}</pre> </div> </form> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/lib/onms-schedule-editor/templates/interval-input.tpl.html';\nvar html = \"<select class=\\\"form-control custom-select\\\" ng-model=value> <option value=0 selected=selected>once per day</option> <option value=180>every 3 hours</option> <option value=120>every 2 hours</option> <option value=60>every hour</option> <option value=30>every 30 minutes</option> <option value=15>every 15 minutes</option> <option value=10>every 10 minutes</option> <option value=5>every 5 minutes</option> </select> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/lib/onms-schedule-editor/templates/time-input.tpl.html';\nvar html = \"<div class=form-inline> <select class=\\\"form-control custom-select mx-1\\\" ng-class=\\\"{'is-invalid': model.error}\\\" ng-options=\\\"i for i in hours\\\" ng-model=model.hours> </select> <span>:</span> <select class=\\\"form-control custom-select mx-1\\\" ng-class=\\\"{'is-invalid': model.error && !options.disableMinutes}\\\" ng-model=model.minutes ng-options=\\\"('00' + i).slice(-2) for i in minutes\\\" ng-disabled=options.disableMinutes> </select> <select class=\\\"form-control custom-select\\\" ng-if=\\\"model.mode === 'AM_PM'\\\" ng-model=model.suffix> <option value=am>am</option> <option value=pm>pm</option> </select> <p class=\\\"invalid-feedback ml-1\\\" ng-if=model.error>{{model.error}}</p> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","console.log('init: jquery-js'); // eslint-disable-line no-console\n\nconst jQuery = require('jquery');\nmodule.exports = jQuery;\n","export default class ContextError extends Error {\n    constructor(context='entity', ...params) {\n        super(...params);\n        this.context = context;\n    }\n}","import ReportDetails from './ReportDetails';\nimport ErrorResponse from '../../lib/onms-http/ErrorResponse';\nimport Types from '../../lib/onms-schedule-editor/scripts/Types';\nimport moment from 'moment';\nrequire('moment-timezone');\n\nconst hash = require('hash.js');\nconst angular = require('vendor/angular-js');\nrequire('../../lib/onms-http');\nrequire('../../lib/onms-pagination');\nrequire('../../lib/onms-datetimepicker');\nrequire('../../lib/onms-schedule-editor');\nrequire('angular-ui-router');\nrequire('angular-bootstrap-confirm');\nrequire('ui-select-bs4');\nrequire('ui-select-bs4/dist/select.css');\n\nconst elementList = require('../onms-elementList/lib/elementList');\nconst indexTemplate  = require('./index.html');\nconst templatesTemplate  = require('./templates.html');\nconst persistedtTemplate  = require('./persisted.html');\nconst schedulesTemplate  = require('./schedules.html');\nconst detailsTemplate  = require('./details.html');\nconst editScheduleModalTemplate  = require('./modals/schedule-edit-modal.html');\n\nconst reportDetailsTemplate = require('./report-details.html');\nconst confirmTopoverTemplate = require('../onms-classifications/views/modals/popover.html');\n\nconst handleReportError = function(response, report, optionalCallbackIfNoContextError) {\n    if (report && response) {\n        const errorResponse = new ErrorResponse(response);\n        if (errorResponse.isBadRequest()) {\n            const contextError = errorResponse.asContextError();\n            report.setErrors(contextError);\n        } else if (optionalCallbackIfNoContextError) {\n            optionalCallbackIfNoContextError(response);\n        }\n    }\n};\n\nconst handleGrafanaError = function(response, report, optionalCallbackIfNoContextError) {\n    // In case the dashboards could not be loaded, it may be due to\n    // an issue with talking to Grafana itself.\n    const errorResponse = new ErrorResponse(response);\n    if (errorResponse.isContextError()) {\n        const contextError = errorResponse.asContextError();\n        if (contextError.context === 'entity') {\n            contextError.context = 'GRAFANA_ENDPOINT_UID';\n        }\n        report.setErrors(contextError);\n    }  else {\n        handleReportError(response, report, optionalCallbackIfNoContextError);\n    }\n};\n\n(function() {\n    'use strict';\n\n    var MODULE_NAME = 'onms.reports';\n\n    angular.module(MODULE_NAME, [\n            'angular-loading-bar',\n            'ngResource',\n            'ngSanitize',\n            'ui.router',\n            'ui.select',\n            'mwl.confirm',\n            'onms.http',\n            'onms.default.apps',\n            'onms.datetimepicker',\n            'onms.schedule.editor',\n            'onms.pagination'\n        ])\n        .config( ['$locationProvider', function ($locationProvider) {\n            $locationProvider.hashPrefix('!');\n            $locationProvider.html5Mode(false);\n        }])\n        .run(function(confirmationPopoverDefaults) {\n            confirmationPopoverDefaults.templateUrl = confirmTopoverTemplate;\n        })\n        .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\n            $stateProvider\n                .state('report', {\n                    url: '/report',\n                    controller: 'ReportsController',\n                    templateUrl: indexTemplate\n                })\n                .state('report.templates', {\n                    url: '/templates',\n                    controller: 'ReportTemplatesController',\n                    templateUrl: templatesTemplate\n                })\n                .state('report.templates.details', {\n                    url: '/:id?online',\n                    controller: 'ReportDetailController',\n                    templateUrl: detailsTemplate,\n                    resolve: {\n\n                    }\n                })\n                .state('report.schedules', {\n                    url: '/schedules',\n                    controller: 'ReportSchedulesController',\n                    templateUrl: schedulesTemplate\n                })\n                .state('report.persisted', {\n                    url: '/persisted',\n                    controller: 'ReportStorageController',\n                    templateUrl: persistedtTemplate\n                })\n            ;\n            $urlRouterProvider.otherwise('/report/templates');\n        }])\n        .factory('ReportTemplateResource', function($resource) {\n            return $resource('rest/reports/:id', {id: '@id'},\n                {\n                    'list':             { method: 'GET', isArray: true },\n                    'get':              { method: 'GET' },\n                    'listScheduled':    { method: 'GET', isArray:true, url:'rest/reports/scheduled'}\n                }\n            );\n        })\n        .factory('ReportScheduleResource', function($resource) {\n            return $resource('rest/reports/scheduled/:id', {id: '@triggerName'},\n                {\n                    'list':             { method: 'GET', isArray: true },\n                    'get':              { method: 'GET', isArray: false },\n                    'delete':           { method: 'DELETE', params: {triggerName: -1} /* to prevent accidentally deleting all */ },\n                    'deleteAll':        { method: 'DELETE'},\n                    'update':           { method: 'PUT'}\n                }\n            );\n        })\n        .factory('ReportStorageResource', function($resource) {\n            return $resource('rest/reports/persisted/:id', {id: '@id'},\n                {\n                    'list':             { method: 'GET', isArray: true },\n                    'get':              { method: 'GET' },\n                    'delete':           { method: 'DELETE', params: {id: -1} /* to prevent accidentally deleting all */ },\n                    'deleteAll':        { method: 'DELETE'},\n                }\n            );\n        })\n        .factory('WhoamiResource', function($resource) {\n            return $resource('rest/whoami', {}, {'whoami': {method: 'GET'}});\n        })\n        .factory('GrafanaResource', function($resource) {\n            return $resource('rest/endpoints/grafana/:id', {id: '@id'},\n                {\n                    'get':          { method: 'GET' },\n                    'list':         { method: 'GET', isArray:true },\n                    'dashboards':   { method: 'GET', isArray:true, url: 'rest/endpoints/grafana/:uid/dashboards', params: {uid: '@uid'} },\n                });\n        })\n        .factory('UserService', function(WhoamiResource) {\n            return {\n                whoami: function(successCallback, errorCallback) {\n                    return WhoamiResource.whoami(function(data) {\n                        var user = {\n                            id: data['id'],\n                            name: data['fullName'],\n                            email: data['email'],\n                            roles: data['roles'],\n\n                            isAdmin: function() {\n                                return this.roles.indexOf(\"ROLE_ADMIN\") >= 0;\n                            },\n\n                            isReportDesigner: function() {\n                                return this.roles.indexOf(\"ROLE_REPORT_DESIGNER\") >= 0;\n                            }\n                        };\n                        if (successCallback) {\n                            successCallback(user);\n                        }\n                    }, function(error) {\n                        if (errorCallback) {\n                            errorCallback(error);\n                        }\n                    });\n                }\n            };  \n        })\n        .directive('onmsReportDetails', ['GrafanaResource', '$q', '$http', function (GrafanaResource, $q, $http) {\n            const getDashboardDetails = (uid, dashboardId) => {\n                return $http.get('rest/endpoints/grafana/' + uid + '/dashboards/' + dashboardId).then((res) => res.data);\n            };\n\n            return {\n                restrict: 'E',\n                templateUrl: reportDetailsTemplate,\n                scope: {\n                    report: '=?ngModel',\n                    options: '=?options',\n                    onInvalidChange: '&?onInvalidChange',\n                    onGlobalError: '&onGlobalError'\n                },\n                link: function (scope, element, attrs) {\n                    scope.oldTimeZone = undefined;\n\n                    scope.endpoints = [];\n                    scope.dashboards = [];\n                    scope.selected = {\n                        endpoint: undefined,\n                        dashboard: undefined\n                    };\n                    scope.onInvalidChange = scope.onInvalidChange || function(invalidState) {}; // eslint-disable-line @typescript-eslint/no-empty-function\n                    scope.onDateParamStateChange = function(state, date, parameter) {\n                        scope.$evalAsync(() => {\n                            if (date && parameter) {\n                                parameter.internalValue = date;\n                            }\n                            scope.onInvalidChange({invalidState: state});\n                        });\n                    };\n\n                    scope.paramHash = (parameter) => {\n                        const ret = hash.sha256();\n                        if (parameter) {\n                            ret.update(parameter.type);\n                            ret.update(parameter.name);\n                            ret.update(parameter.value);\n                            ret.update(parameter.internalValue);\n                            ret.update(parameter.internalFormat);\n                        }\n                        return ret.digest('hex');\n                    };\n\n                    scope.timezoneChanged = () => {\n                        const before = scope.oldTimeZone;\n                        const after = scope.report && scope.report.parametersByName['timezone'] ? scope.report.parametersByName['timezone'].value : undefined;\n\n                        if (before && after && before !== after) {\n                            // timezone has changed, adjust existing date/time values to match\n\n                            scope.report.parameters.forEach((parameter, index) => {\n                                if (parameter.type === 'date') {\n                                    const oldDate = moment.tz(parameter.internalValue, before);\n                                    const newDate = oldDate.clone().tz(after);\n                                    if (newDate.isValid()) {\n                                        parameter.internalValue = newDate.format(parameter.internalFormat);\n                                        parameter.date = newDate.format('YYYY-MM-DD');\n                                        parameter.hours = newDate.hours();\n                                        parameter.minutes = newDate.minutes();\n                                    } else {\n                                        // eslint-disable-next-line no-console\n                                        console.error('timezoneChanged(): new date is invalid?!');\n                                    }\n\n                                    // re-hydrate this parameter because the datetime picker isn't refreshing itself properly\n                                    scope.report.parameters[index] = scope.report.parametersByName[parameter.name] = Object.assign({}, parameter);\n                                }\n                            });\n                        }\n\n                        // done processing, update state for next time\n                        if (scope.report && scope.report.parametersByName['timezone']) {\n                            scope.report.parametersByName['timezone'].value = after;\n                        }\n                        scope.oldTimeZone = after;\n                        scope.report.validateTimezone();\n                    };\n\n                    scope.endpointChanged = function () {\n                        scope.dashboards = [];\n                        scope.selected.dashboard = undefined;\n                        scope.report.resetErrors();\n                        if (scope.report.parametersByName['timezone']) {\n                            scope.report.parametersByName['timezone'].value = undefined;\n                            scope.timezoneChanged();\n                        }\n                        GrafanaResource.dashboards({uid: scope.selected.endpoint.uid}, function (dashboards) {\n                            scope.dashboards = dashboards;\n                            if (scope.dashboards.length > 0) {\n                                scope.selected.dashboard = scope.dashboards[0];\n                            }\n                        }, function (response) {\n                            handleGrafanaError(response, scope.report, () => scope.onGlobalError({response: response}));\n                        });\n                    };\n\n                    scope.loadEndpoints = function () {\n                        scope.report.resetErrors();\n                        GrafanaResource.list(function (endpoints) {\n                            scope.endpoints = endpoints;\n                            scope.endpoints.forEach(function (item) {\n                                item.label = item.uid;\n                                if (item.description) {\n                                    item.label += \" - \" + item.description;\n                                }\n                            });\n                            if (scope.endpoints.length > 0) {\n                                scope.selected.endpoint = scope.endpoints[0];\n                                scope.endpointChanged();\n                            }\n                        }, function (errorResponse) {\n                            handleGrafanaError(errorResponse, scope.report, () => scope.onGlobalError({response: errorResponse}));\n                        });\n                    };\n\n                    // Ensure the format matches\n                    scope.$watch('report.format', function (newVal) {\n                        if (scope.report.deliveryOptions) {\n                            scope.report.deliveryOptions.format = newVal;\n                        }\n                    });\n\n                    scope.$watch('report.scheduleOptions.type', function() {\n                        // Reset cronExpression issue, if we changed the type as the message may be outdated\n                        if (scope.report.scheduleOptions.type !== Types.CUSTOM && scope.report.errors.cronExpression) {\n                            scope.report.errors.cronExpression = undefined;\n                        }\n                    });\n\n                    scope.$watchCollection('report.parameters', function(newVal, oldVal) {\n                        if (oldVal.length === 0 && newVal.length !== 0) {\n                            if (scope.report.isGrafanaReport()) {\n                                scope.loadEndpoints();\n                            }\n                        }\n                    });\n\n                    scope.$watchCollection('selected', (newSelected) => {\n                        const deferred = $q.defer();\n\n                        if (newSelected\n                            && newSelected.endpoint\n                            && newSelected.endpoint.uid\n                            && newSelected.dashboard\n                            && newSelected.dashboard.uid\n                        ) {\n                            const selectedDashboard = newSelected.dashboard;\n                            // the dashboard object you get from search doesn't include the full\n                            // dashboard data; query the dashboard and grab the timezone from it\n                            getDashboardDetails(newSelected.endpoint.uid, selectedDashboard.uid).then((newDashboard) => {\n                                if (newDashboard\n                                    && newDashboard.timezone !== undefined\n                                    && selectedDashboard.timezone !== newDashboard.timezone\n                                ) {\n                                    selectedDashboard.timezone = newDashboard.timezone;\n                                    scope.timezoneChanged();\n                                }\n                            }).finally(() => {\n                                deferred.resolve(selectedDashboard);\n                            });\n                        } else {\n                            // endpoint and/or dashboard are missing UIDs?  assume we can't do anything yet\n                            deferred.resolve((newSelected && newSelected.dashboard) ? newSelected.dashboard : undefined);\n                        }\n                        deferred.promise.finally(() => {\n                            scope.report.updateGrafanaParameters(newSelected);\n                        })\n                    });\n\n                    scope.$watch('reportForm.$invalid', function(newVal, oldVal) {\n                        if (scope.onInvalidChange) {\n                            scope.onInvalidChange({invalidState: newVal});\n                        }\n                    });\n                }\n            }\n        }])\n        .directive('multiEmails', function() {\n            const EMAIL_REGEXP = /^[-!#$%&'*+/0-9=?A-Z^_a-z{|}~](\\.?[-!#$%&'*+/0-9=?A-Z^_a-z{|}~])*@[a-zA-Z](-?[a-zA-Z0-9])*(\\.[a-zA-Z](-?[a-zA-Z0-9])*)+$/;\n            return {\n                restrict: 'A',\n                require: 'ngModel',\n                link: function (scope, element, attrs, ctrl) {\n                    if (ctrl && ctrl.$validators.email) {\n                        ctrl.$validators.email = function(modelValue) {\n                            if (angular.isDefined(modelValue)) {\n                                const isValidEmails = ctrl.$isEmpty(modelValue) || modelValue.split(',').every(\n                                    function (email) {\n                                        return EMAIL_REGEXP.test(email.trim());\n                                    }\n                                );\n                                return isValidEmails;\n                            }\n                            return false;\n                        };\n                    }\n                }\n            };\n        })\n        .controller('ReportsController', ['$scope', '$rootScope', '$http', 'UserService', function($scope, $rootScope, $http, UserService) {\n            $scope.fetchUserInfo = function() {\n                UserService.whoami(function(user) {\n                    $scope.userInfo = user;\n                }, function(errorResponse) {\n                    $scope.setGlobalError(errorResponse);\n                });\n            };\n            $scope.fetchUserInfo();\n            $scope.setGlobalError = function(errorResponse) {\n                $scope.globalError = 'An unexpected error occurred: ' + errorResponse.status + ' ' + errorResponse.statusText;\n                $scope.globalErrorDetails = JSON.stringify(errorResponse, null, 2);\n            };\n            $scope.globalError = undefined;\n            $scope.globalErrorDetails = undefined;\n        }])\n        .controller('ReportTemplatesController', ['$scope', '$http', 'ReportTemplateResource', function($scope, $http, ReportTemplateResource) {\n            $scope.refresh = function() {\n                $scope.reports = [];\n\n                ReportTemplateResource.list(function(response) {\n                    if (response && Array.isArray(response)) {\n                        $scope.reports = response;\n                    }\n                }, function(errorResponse) {\n                    $scope.setGlobalError(errorResponse);\n                })\n            };\n\n            $scope.refresh();\n\n        }])\n        .controller('ReportDetailController', ['$scope', '$http', '$window', '$state', '$stateParams', '$uibModal', 'ReportTemplateResource', function($scope, $http, $window, $state, $stateParams, $uibModal, ReportTemplateResource) {\n            $scope.meta = {\n                reportId: $stateParams.id,\n                online: $stateParams.online === 'true'\n            };\n\n            $scope.report = new ReportDetails({id: $scope.meta.reportId, scope: $scope});\n            $scope.options = {};\n            $scope.loading = false;\n            $scope.reportForm = { $invalid: false };\n            $scope.onReportFormInvalidStateChange = function(invalidState) {\n                $scope.reportForm.$invalid = invalidState;\n            };\n\n            $scope.loadDetails = function() {\n                $scope.loading = true;\n                $scope.selected = {\n                    endpoint: undefined,\n                    dashboard: undefined\n                };\n\n                $scope.options = {\n                    showReportFormatOptions: $scope.meta.online,\n                    showDeliveryOptions: $scope.userInfo.isReportDesigner() || $scope.userInfo.isAdmin(),\n                    showDeliveryOptionsToggle: true && $scope.meta.online,\n                    showScheduleOptions: $scope.userInfo.isReportDesigner() || $scope.userInfo.isAdmin(),\n                    showScheduleOptionsToggle: true,\n                    deliverReport: !$scope.meta.online,\n                    scheduleReport: false,\n                    canEditTriggerName: true\n                };\n\n                const requestParameters = {\n                    id: $scope.report.id,\n                    userId: $scope.userInfo.id\n                };\n\n                ReportTemplateResource.get(requestParameters, function(response) {\n                    $scope.loading = false;\n                    $scope.report = new ReportDetails(Object.assign(response, {scope: $scope}));\n                }, function(response) {\n                    $scope.loading = false;\n                    $scope.setGlobalError(response);\n                });\n            };\n\n            $scope.runReport = function() {\n                $scope.report.resetErrors();\n                // eslint-disable-next-line no-console\n                console.debug('running report:', $scope.report);\n                $http({\n                    method: 'POST',\n                    url: 'rest/reports/' + $stateParams.id,\n                    data:  { id:$scope.report.id, parameters: $scope.report.parameters, format: $scope.report.format},\n                    responseType:  'arraybuffer'\n                }).then(function (response) {\n                        var data = response.data;\n                        var fileBlob = new Blob([data], {type: $scope.report.format === 'PDF' ? 'application/pdf' : 'text/csv'});\n                        var fileURL = URL.createObjectURL(fileBlob);\n                        var contentDisposition = response.headers(\"Content-Disposition\");\n                        // var filename = (contentDisposition.split(';')[1].trim().split('=')[1]).replace(/\"/g, '');\n                        var filename = $stateParams.id + '.' + $scope.report.format.toLowerCase();\n\n                        var a = document.createElement('a');\n                        document.body.appendChild(a);\n                        a.style = 'display: none';\n                        a.href = fileURL;\n                        a.download = filename;\n                        a.click();\n                        window.URL.revokeObjectURL(fileURL);\n                        document.body.removeChild(a);\n                    },\n                    function(response) {\n                        if (response.status === 400) {\n                            // content Type is 'arraybuffer', so first convert to json\n                            const bodyAsString = String.fromCharCode.apply(null, new Uint8Array(response.data));\n                            const bodyAsJson = JSON.parse(bodyAsString);\n                            response.data = bodyAsJson;\n                            handleReportError(response, $scope.report, (response) => $scope.setGlobalError(response));\n                        } else {\n                            $scope.setGlobalError(response);\n                        }\n                    });\n            };\n\n            $scope.deliverReport = function() {\n                $scope.report.resetErrors();\n                $http({\n                    method: 'POST',\n                    url: 'rest/reports/persisted',\n                    data: {\n                        id: $scope.report.id,\n                        parameters: $scope.report.parameters,\n                        format: $scope.report.format,\n                        deliveryOptions: $scope.report.deliveryOptions\n                    }\n                }).then(function() {\n                    $scope.deliverySuccess = true;\n                }, function(response) {\n                    handleReportError(response, $scope.report, (response) => $scope.setGlobalError(response));\n                })\n            };\n\n            $scope.scheduleReport = function() {\n                $scope.report.resetErrors();\n                $http({\n                    method: 'POST',\n                    url: 'rest/reports/scheduled',\n                    data: {\n                        id: $scope.report.id,\n                        parameters: $scope.report.parameters,\n                        format: $scope.report.format,\n                        deliveryOptions: $scope.report.deliveryOptions,\n                        cronExpression: $scope.report.scheduleOptions.getCronExpression(),\n                    }\n                }).then(function(response) {\n                    $scope.scheduleSuccess = true;\n                }, function(response) {\n                    handleReportError(response, $scope.report, (response) => $scope.setGlobalError(response));\n                })\n            };\n\n            $scope.execute = function() {\n                $scope.deliverySuccess = false;\n                $scope.scheduleSuccess = false;\n                $scope.$evalAsync(() => {\n                    $scope.report.updateDateParameters();\n                });\n                $scope.$evalAsync(() => {\n                    if ($scope.meta.online && !$scope.options.deliverReport && !$scope.options.scheduleReport) {\n                        $scope.runReport();\n                    }\n                    if ($scope.options.deliverReport && !$scope.options.scheduleReport) {\n                        $scope.deliverReport();\n                    }\n                    if ($scope.options.deliverReport && $scope.options.scheduleReport) {\n                        $scope.scheduleReport();\n                    }\n                });\n            };\n\n            // We wait for the userInfo to be set, otherwise loading\n            // cannot be performed as we don't have a user id\n            $scope.$watch(\"userInfo\", function(newVal, oldVal) {\n                if (newVal) {\n                    $scope.loadDetails();\n                }\n            });\n        }])\n        .controller('ReportSchedulesController', ['$scope', '$uibModal', 'ReportScheduleResource', function($scope, $uibModal, ReportScheduleResource) {\n            $scope.scheduledReports = [];\n            $scope.pagination = { page: 1, limit: 20, totalItems : 0, offset: 0 };\n\n            $scope.refresh = function() {\n                const parameters = $scope.pagination || {};\n                ReportScheduleResource.list({\n                    limit: parameters.limit || 20,\n                    offset: (parameters.page -1) * parameters.limit || 0,\n                }, function(data, headers) {\n                    $scope.scheduledReports = data;\n                    const contentRange = elementList.parseContentRange(headers('Content-Range'));\n                    $scope.pagination.totalItems = contentRange.total;\n                }, function(response) {\n                    $scope.setGlobalError(response);\n                });\n            };\n\n            $scope.deleteAll = function() {\n                ReportScheduleResource.deleteAll({}, function(response) {\n                   $scope.pagination.page = 1; // go back to page 1\n                   $scope.refresh();\n                }, function(response) {\n                    $scope.setGlobalError(response);\n                });\n            };\n\n            $scope.delete = function(schedule) {\n                ReportScheduleResource.delete({id: schedule.triggerName || -1}, function(response) {\n                    // If we deleted the last report on this page\n                    if ($scope.scheduledReports.length === 1 && $scope.pagination.page > 1) {\n                        $scope.pagination.page--; // go a page back\n                    }\n                    $scope.refresh();\n                }, function(response) {\n                    $scope.setGlobalError(response);\n                })\n            };\n\n            $scope.edit = function(triggerName, reportId) {\n                const modalInstance = $uibModal.open({\n                    templateUrl: editScheduleModalTemplate,\n                    backdrop: 'static',\n                    keyboard: false,\n                    size: 'lg',\n                    controller: 'ScheduleEditController',\n                    resolve: {\n                        userInfo: function() {\n                            return $scope.userInfo;\n                        },\n                        meta: function() {\n                            return {\n                                reportId: reportId,\n                                online: false,\n                                triggerName: triggerName\n                            }\n                        },\n                        setGlobalError: function() {\n                            return $scope.setGlobalError;\n                        }\n                    }\n\n                });\n\n                modalInstance.result.then(function() {\n                    $scope.refresh();\n                });\n            };\n\n            $scope.refresh();\n        }])\n        .controller('ScheduleEditController', ['$http', '$q', '$scope', '$timeout', 'userInfo', 'meta', 'setGlobalError', 'ReportScheduleResource', function($http, $q, $scope, $timeout, userInfo, meta, setGlobalError, ReportScheduleResource) {\n            $scope.meta = meta;\n            $scope.userInfo = userInfo;\n            $scope.report = null;\n            $scope.options = {};\n            $scope.loading = false;\n            $scope.reportForm = { $invalid : false };\n\n            const getReportDetails = (reportId) => {\n                return $http.get('rest/reports/scheduled/' + reportId).then((res) => res.data);\n            };\n\n            $scope.onReportFormInvalidStateChange = function(invalidState) {\n                $scope.reportForm.$invalid = invalidState;\n            };\n\n            $scope.setGlobalError = function(response) {\n                setGlobalError(response);\n            };\n\n            $scope.loadDetails = function() {\n                if ($scope.loading) {\n                    return;\n                }\n                $scope.loading = true;\n\n                $scope.$evalAsync(() => {\n                    $scope.selected = {\n                        endpoint: undefined,\n                        dashboard: undefined\n                    };\n\n                    $scope.options = {\n                        hideEndpointsChooser: true,        // endpoint should not be changed when editing\n                        showReportFormatOptions: false,    // Options are not shown, as we are editing a schedule\n                        showDeliveryOptions: true,         // always show when editing\n                        showDeliveryOptionsToggle: false,  // Toggling is disabled\n                        showScheduleOptions: true,         // always show when editing\n                        showScheduleOptionsToggle: false, // Toggling is disabled\n                        deliverReport: true,        // when editing schedule and delivery is enabled\n                        scheduleReport: true,       // when editing schedule and delivery is enabled\n                        canEditTriggerName: false,  // When in edit mode, the trigger name should be unique\n                    };\n\n                    getReportDetails($scope.meta.triggerName).then((reportData) => {\n                        $scope.report = new ReportDetails(Object.assign(reportData, {scope: $scope}));\n                    }).catch((err) => {\n                        $scope.setGlobalError(err);\n                        $scope.$close();\n                    }).finally(() => {\n                        $scope.loading = false;\n                    });\n                });\n            };\n\n            $scope.update = function() {\n                if (!$scope.report) {\n                    return $q.reject('report not initialized');\n                }\n                $scope.report.resetErrors();\n                const data = {\n                    id: $scope.report.id,\n                    triggerName: $scope.meta.triggerName,\n                    parameters: $scope.report.parameters,\n                    format: $scope.report.format,\n                    deliveryOptions: $scope.report.deliveryOptions,\n                    cronExpression: $scope.report.scheduleOptions.getCronExpression(),\n                };\n                return ReportScheduleResource.update(data).$promise.catch((err) => {\n                    // eslint-disable-next-line no-console\n                    console.error(err);\n                    handleReportError(err, $scope.report, () => {\n                        $scope.setGlobalError(err);\n                    });\n                }).finally(() => {\n                    $scope.$close();\n                });\n            };\n\n            $scope.loadDetails();\n        }])\n        .controller('ReportStorageController', ['$scope', '$http', '$window', '$stateParams', 'ReportStorageResource', function($scope, $http, $window, $stateParams, ReportStorageResource) {\n            $scope.persistedReports = [];\n            $scope.pagination = { page: 1, limit: 20, totalItems : 0, offset: 0 };\n\n            $scope.refresh = function() {\n                const parameters = $scope.pagination || {};\n                ReportStorageResource.list({\n                    limit: parameters.limit || 20,\n                    offset: (parameters.page -1) * parameters.limit || 0,\n                }, function(data, headers) {\n                    $scope.persistedReports = data;\n                    const contentRange = elementList.parseContentRange(headers('Content-Range'));\n                    $scope.pagination.totalItems = contentRange.total;\n                }, function(response) {\n                    $scope.setGlobalError(response);\n                });\n            };\n\n            $scope.deleteAll = function() {\n                ReportStorageResource.deleteAll({}, function(response) {\n                    $scope.pagination.page = 1; // go back to page 1\n                    $scope.refresh();\n                }, function(response) {\n                    $scope.setGlobalError(response);\n                });\n            };\n\n            $scope.delete = function(report) {\n                ReportStorageResource.delete({id: report.id || -1}, function(response) {\n                    // If we deleted the last report on this page\n                    if ($scope.persistedReports.length === 1 && $scope.pagination.page > 1) {\n                        $scope.pagination.page--; // go back a page\n                    }\n                    $scope.refresh();\n                }, function(response) {\n                    $scope.setGlobalError(response);\n                })\n            };\n\n            $scope.refresh();\n        }])\n    ;\n}());\n","const Types = {\n    DAILY: 'daily',\n    DAYS_PER_WEEK: 'daysPerWeek',\n    DAYS_PER_MONTH: 'daysPerMonth',\n    CUSTOM: 'custom'\n};\nexport default Types;\n","import Types from '../../lib/onms-schedule-editor/scripts/Types';\nimport ScheduleOptions from '../../lib/onms-schedule-editor/scripts/ScheduleOptions';\nimport ContextError from '../../lib/onms-http/ContextError';\nimport Util from 'lib/util';\n\nimport moment from 'moment';\nrequire('moment-timezone');\n\nexport default class ReportDetails {\n\n    constructor(input = {}) {\n        this.supportedSurveillanceCategories = input.surveillanceCategories;\n        this.supportedCategories = input.categories;\n        this.supportedFormats = [];\n        if (Array.isArray(input.formats)) {\n            this.supportedFormats = input.formats.map(function(item) {\n                return item.name\n            });\n        }\n        this.supportedTimezones = input.timezones || ['US/Eastern'];\n        this.parameters = input.parameters || [];\n        this.parametersByName = {};\n        this.deliveryOptions = input.deliveryOptions || {};\n        this.scheduleOptions = typeof input.cronExpression === 'string' ? ScheduleOptions.createFrom(input.cronExpression) : new ScheduleOptions();\n        this.format = input.deliveryOptions && input.deliveryOptions.format || 'PDF';\n        this.id = input.id;\n        this.errors = input.errors || {};\n        this.timezoneEditable = true;\n\n        // In order to have the ui look the same as before, just order the parameters\n        const order = ['string', 'integer', 'float', 'double', 'timezone', 'date'];\n        this.parameters.sort(function(left, right) {\n            return order.indexOf(left.type) - order.indexOf(right.type);\n        });\n\n        // Pre processing of parameters\n        this.parameters.forEach(function(parameter) {\n            // Apply default values for categories\n            if (parameter.inputType === 'reportCategorySelector') {\n                parameter.value = this.supportedSurveillanceCategories[0];\n            }\n            if (parameter.inputType === 'onmsCategorySelector') {\n                parameter.value = this.supportedCategories[0];\n            }\n\n            // Hide certain items\n            parameter.hidden = parameter.name === 'GRAFANA_ENDPOINT_UID'\n                || parameter.name === 'GRAFANA_DASHBOARD_UID'\n                || parameter.name === 'dateFormat';\n\n            // index parameters\n            this.parametersByName[parameter.name] = parameter;\n        }, this);\n\n        this.parameters.filter(function(parameter) {\n            return parameter.type === 'date'\n        }).forEach(function(parameter) {\n            // Originally the idea was to format the date using the user locale setting\n            // However this format is ISO conform, so we always use it instead\n            parameter.internalFormat = 'YYYY-MM-DD HH:mm';\n            parameter.internalLocale = 'en'; // Always assume en as locale\n            parameter.internalValue = moment(parameter.date, parameter.internalFormat).hours(parameter.hours).minutes(parameter.minutes).format(parameter.internalFormat);\n        });\n\n        this.updateTimezoneEditable();\n        this.validateTimezone();\n\n        // Adjust format\n        if (this.supportedFormats.indexOf(this.format) === -1) {\n            this.format = this.supportedFormats[0];\n        }\n        if (this.supportedFormats.indexOf(this.deliveryOptions.format) === -1) {\n            this.deliveryOptions.format = this.format;\n        }\n\n        if (window._onmsZoneId) {\n            this.scheduleOptions.serverZone = window._onmsZoneId;\n        } else {\n            const xhr = new XMLHttpRequest();\n            const checkResponseText = () => {\n                try {\n                    if (xhr.readyState === XMLHttpRequest.DONE) {\n                        if (xhr.status === 200) {\n                            const config = JSON.parse(xhr.responseText);\n                            if (config.datetimeformatConfig && config.datetimeformatConfig.zoneId) {\n                                window._onmsZoneId = config.datetimeformatConfig.zoneId;\n                                this.scheduleOptions.serverZone = config.datetimeformatConfig.zoneId;\n                                return;\n                            }\n                        }\n                        // eslint-disable-next-line no-console\n                        console.error('Failed to request server time zone: ' + xhr.status + ' ' + xhr.statusText);\n                        this.scheduleOptions.serverZone = null;\n                    }\n                } catch (e) {\n                    // eslint-disable-next-line no-console\n                    console.error('An error occurred getting the server time zone:', e);\n                    this.scheduleOptions.serverZone = null;\n                }\n            };\n\n            xhr.onreadystatechange = () => {\n                if (input && input.scope) {\n                    input.scope.$evalAsync(checkResponseText);\n                } else {\n                    checkResponseText();\n                }\n            };\n            xhr.open('GET', Util.getBaseHref() + 'rest/info');\n            xhr.setRequestHeader('Accept', 'application/json');\n            xhr.send();\n        }\n\n    }\n\n    hasErrors() {\n        const hasErrors = Object.keys(this.errors).length > 0\n            || (this.isGrafanaReport() && !this.isGrafanaEndpointSelected())\n            || !this.scheduleOptions.isValid();\n        return hasErrors;\n    }\n\n    resetErrors() {\n        this.errors = {};\n    }\n\n    setErrors(contextError) {\n        if ((contextError && contextError.context && contextError.message) || (contextError instanceof ContextError)) {\n            if (contextError.context !== 'cronExpression'\n                  || (contextError.context === 'cronExpression' && this.scheduleOptions.type === Types.CUSTOM)\n            ) {\n                this.errors[contextError.context] = contextError.message;\n                return;\n            } else if (contextError.context === 'cronExpression' && this.scheduleOptions.type !== Types.CUSTOM) {\n                throw new Error(\"Generated cronExpression was not parsable by backend. If this happens contact OpenNMS support\");\n            }\n        }\n        throw new Error(\"Provided contextError must be of type ContextError\")\n    }\n\n    isGrafanaEndpointSelected() {\n        if (!this.isGrafanaReport()) {\n            throw new Error(\"Report is not a Grafana Report\");\n        }\n        const endpointUid = this.parametersByName['GRAFANA_ENDPOINT_UID'];\n        const dashboardUid = this.parametersByName['GRAFANA_DASHBOARD_UID'];\n\n        const endpointSelected = endpointUid.value && typeof endpointUid.value === 'string' && endpointUid.value.length > 0\n            && dashboardUid.value && typeof dashboardUid.value && dashboardUid.value.length > 0;\n        return endpointSelected;\n    }\n\n    isGrafanaReport() {\n        return typeof this.parametersByName['GRAFANA_ENDPOINT_UID'] !== 'undefined'\n            && typeof this.parametersByName['GRAFANA_DASHBOARD_UID'] !== 'undefined'\n    }\n\n    updateTimezoneEditable() {\n        const dashboardZone = this.dashboard && this.dashboard.timezone !== undefined ? this.dashboard.timezone : undefined;\n\n        if (dashboardZone !== undefined) {\n            if (dashboardZone === 'browser' || dashboardZone.trim() === '') {\n                // timezone in grafana dashboard is set to default/browser,\n                // which for our purposes should behave the same\n                this.timezoneEditable = true;\n            } else if (this.supportedTimezones.indexOf(this.parametersByName['timezone'].value) >= 0) {\n                // timezone in grafana dashboard matches an available timezone,\n                // use it (always)\n                this.timezoneEditable = false;\n            } else {\n                // timezone in grafana dashboard isn't default/browser, but\n                // we don't have a matching supported timezone; the timezone\n                // on the other end is one supposedly supported by Jasper\n                // so I guess I'll just add it to the list ¯\\_(ツ)_/¯\n                this.supportedTimezones.push(dashboardZone);\n                this.timezoneEditable = false;\n            }\n        } else {\n            // either this isn't a grafana report, or we haven't gotten the dashboard timezone (yet)\n        }\n    }\n\n    validateTimezone() {\n        this.updateTimezoneEditable();\n\n        // Ensure timezone has a valid value\n        this.parameters.filter((parameter) => {\n            return parameter.type === 'timezone';\n         }).forEach((parameter) => {\n            if (this.timezoneEditable) {\n                if (parameter.value && parameter.value.trim().length > 0 && this.supportedTimezones.indexOf(parameter.value) >= 0) {\n                    // we have already selected a valid timezone, carry on\n                } else {\n                    // otherwise, guess the timezone; If it actually exists, it is used;\n                    // if it doesn't exist, the first from the list is selected\n                    const guessedTimezone = moment.tz.guess(true);\n                    if (this.supportedTimezones.indexOf(guessedTimezone) >= 0) {\n                        parameter.value = guessedTimezone;\n                    } else {\n                        parameter.value = this.supportedTimezones[0];\n                    }\n                }\n\n                this.parametersByName['timezone'] = parameter;\n            } else {\n                // if the timezone is not editable, it should already be\n                // set to something in the supported list, so it's safe\n                // to just not do anything\n            }\n        });\n        if (this.parametersByName['timezone']) {\n            this.scheduleOptions.timezone = this.parametersByName['timezone'].value;\n        }\n    }\n\n    updateTimezoneParameter(selected) {\n        this.dashboard = selected.dashboard;\n        let timezone = selected.dashboard ? selected.dashboard.timezone : undefined;\n        if (timezone === 'utc') {\n            // special case: Grafana passes UTC as `utc` (sigh)\n            timezone = 'UTC';\n        }\n        if (timezone) {\n            this.parametersByName['timezone'].value = timezone;\n            this.scheduleOptions.timezone = timezone;\n        }\n        this.validateTimezone();\n    }\n\n    // Before sending the report we must replace the values for the Endpoint UID and Dashboard UID\n    updateGrafanaParameters(selected) {\n        if (this.isGrafanaReport()) {\n            this.parametersByName['GRAFANA_ENDPOINT_UID'].value = selected.endpoint ? selected.endpoint.uid : this.parametersByName['GRAFANA_ENDPOINT_UID'].value;\n            this.parametersByName['GRAFANA_DASHBOARD_UID'].value = selected.dashboard ? selected.dashboard.uid : this.parametersByName['GRAFANA_DASHBOARD_UID'].value;\n            this.updateTimezoneParameter(selected);\n        }\n    }\n\n    // Before sending the report, the date values must be updated accordingly\n    updateDateParameters() {\n        // Set the date value\n        this.parameters.filter(function (parameter) {\n            return parameter.type === 'date';\n        }).forEach(function (p) {\n            const date = moment(p.internalValue, p.internalFormat);\n            p.date = date.format('YYYY-MM-DD');\n            p.hours = date.hours();\n            p.minutes = date.minutes();\n            p.internalValue = date.format(p.internalFormat);\n        });\n    }\n}\n","'use strict';\n\nconst angular = require('vendor/angular-js');\n\nconst permissionDeniedTemplate  = require('./403-permission-denied.html');\n\nangular.module('onms.http', ['ui.bootstrap'])\n    .factory('InterceptorService',['$q', '$rootScope', function($q, $rootScope) {\n        return {\n            responseError: function (rejection) {\n                if (rejection.status === 401) {\n                    if (rejection.config && rejection.config.url\n                        && (rejection.config.url.startsWith('rest/')\n                            || rejection.config.url.startsWith('api/v2/'))\n                    ) {\n                        console.error('Login Required', rejection, rejection.headers); // eslint-disable-line no-console\n                        $rootScope.$emit('loginRequired');\n                    }\n                }\n                if (rejection.status === 403) {\n                    $rootScope.$emit('permissionDenied');\n                }\n                return $q.reject(rejection);\n            }\n        }\n    }])\n    .config(['$httpProvider',\n        function ($httpProvider) {\n            $httpProvider.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n            $httpProvider.interceptors.push('InterceptorService');\n        }\n    ])\n    .run(['$rootScope', '$uibModal', function($rootScope, $uibModal) {\n        $rootScope.$on('loginRequired', function() {\n            var baseTags = document.getElementsByTagName('base');\n            if (baseTags && baseTags.length > 0 && baseTags[0].href) {\n                window.location.href = baseTags[0].href + 'login.jsp?session_expired=true';\n            } else {\n                console.warn('Login is required, but cannot forward to login page due to missing base tag.'); // eslint-disable-line no-console\n            }\n        });\n\n        $rootScope.$on('permissionDenied', function() {\n            $uibModal.open({\n                templateUrl: permissionDeniedTemplate,\n                controller: function($scope, $uibModalInstance) {\n                    $scope.reload = function () {\n                        $uibModalInstance.dismiss();\n                        window.location.reload();\n                    };\n                },\n                size: '',\n                backdrop: 'static',\n                keyboard  : false\n            });\n        });\n    }])\n;\n\nmodule.exports = angular;","import ContextError from \"./ContextError\";\n\nexport default class ErrorResponse {\n\n    constructor(response) {\n        this.response = response;\n    }\n\n    get status() {\n        return this.response.status;\n    }\n\n    isContextError() {\n        return this.response.data && this.response.data.context && this.response.data.message;\n    }\n\n    asContextError() {\n        if (this.isContextError()) {\n            return new ContextError(this.response.data.context, this.response.data.message);\n        }\n        if (this.response.data && this.response.data.message) {\n            return new ContextError('entity', this.response.data.message);\n        }\n        return new ContextError('entity', 'Unexpected error occurred. No details about the nature of the error were provided');\n    }\n\n    isBadRequest() {\n        return this.status === 400;\n    }\n}","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/onms-reports/index.html';\nvar html = \"<div class=\\\"alert alert-danger\\\" ng-if=globalError> <span>{{globalError}}</span> <pre ng-show=globalErrorDetails>{{globalErrorDetails}}</pre> </div> <div class=w-100 ng-if=!globalError> <ul id=tabs class=\\\"nav nav-tabs\\\"> <li role=presentation class=nav-item> <a ui-sref-active=active ui-sref=report.templates data-name=report-templates class=nav-link>Report Templates</a> </li> <li role=presentation class=nav-item> <a ui-sref-active=active ui-sref=report.schedules data-name=report-schedules class=nav-link>Report Schedules</a> </li> <li role=presentation class=nav-item> <a ui-sref-active=active ui-sref=report.persisted data-name=report-persisted class=nav-link>Persisted Reports</a> </li> </ul> <div class=\\\"card border-top-0\\\" ui-view> </div> </div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/onms-reports/templates.html';\nvar html = \"<span ng-if=\\\"reports.length == 0\\\">No Data available</span> <div class=row> <div class=col-5> <div class=\\\"mx-2 my-2\\\" style=\\\"height:calc(100vh - 109px);overflow:scroll\\\"> <div class=\\\"list-group list-group-flush\\\" ng-if=\\\"reports.length > 0\\\"> <a ng-repeat=\\\"report in reports\\\" ui-sref-active=active ui-sref=\\\"report.templates.details({'id': report.id, 'online': report.online})\\\" class=\\\"list-group-item list-group-item-action\\\"> <h5 class=\\\"\\\">{{report.name}}</h5> <div class=text-muted> {{report.description}} <span class=\\\"badge badge-secondary pull-right\\\" ng-if=!report.online title=\\\"Can only deliver or schedule Report\\\"> no adhoc </span> </div> </a> </div> </div> </div> <div class=col-7 ui-view> </div> </div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/onms-reports/persisted.html';\nvar html = \"<div class=\\\"mx-2 my-2\\\"> <div class=mb-4> <button class=\\\"btn btn-secondary\\\" id=action.refresh ng-click=refresh()><i class=\\\"fa fa-refresh\\\"></i></button> <button class=\\\"btn btn-secondary\\\" ng-if=\\\"userInfo.isReportDesigner() || userInfo.isAdmin() && persistedReports.length > 0\\\" id=action.deleteAll mwl-confirm message=\\\"Do you really want to delete all persisted reports?\\\" on-confirm=deleteAll() placement=right confirm-button-type=danger cancel-button-type=secondary confirm-text=Yes cancel-text=No title=\\\"Delete All\\\"> <i class=\\\"fa fa-trash\\\"></i> </button> </div> <div ng-if=\\\"persistedReports.length == 0\\\"> <span>No Data available</span> </div> <pagination model=pagination ng-if=\\\"persistedReports.length > 0\\\" position=bottom on-change=refresh> <table class=\\\"table table-sm table-striped mb-2\\\"> <thead> <tr> <th ng-if=\\\"userInfo.isReportDesigner() || userInfo.isAdmin()\\\">Action</th> <th>View Report</th> <th>Title</th> <th>Report ID</th> <th>Run Date</th> </tr> </thead> <tbody> <tr ng-repeat=\\\"report in persistedReports\\\"> <td ng-if=\\\"userInfo.isReportDesigner() || userInfo.isAdmin()\\\"> <button class=\\\"btn btn-sm btn-danger\\\" ng-click=delete(report)><i class=\\\"fa fa-trash\\\"></i></button> </td> <td> <a ng-repeat=\\\"format in report.formats\\\" href=\\\"rest/reports/download?locatorId={{report.id}}&amp;format={{format}}\\\" class=mr-4><i ng-class=\\\"{'fa-file-pdf-o': format === 'PDF', 'fa-file-text-o': format === 'CSV'}\\\" class=fa></i> {{format}}</a> </td> <td>{{report.title}}</td> <td>{{report.reportId}}</td> <td>{{report.date}}</td> <td> </td> </tr> </tbody> </table> </pagination> </div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/onms-reports/schedules.html';\nvar html = \"<div class=\\\"mx-2 my-2\\\"> <div class=mb-4> <button class=\\\"btn btn-secondary\\\" id=action.refresh ng-click=refresh() title=Refresh><i class=\\\"fa fa-refresh\\\"></i></button> <button class=\\\"btn btn-secondary\\\" ng-if=\\\"userInfo.isReportDesigner() || userInfo.isAdmin() && scheduledReports.length > 0\\\" id=action.deleteAll mwl-confirm message=\\\"Do you really want to delete all persisted reports?\\\" on-confirm=deleteAll() placement=right confirm-button-type=danger cancel-button-type=secondary confirm-text=Yes cancel-text=No title=\\\"Delete All\\\"> <i class=\\\"fa fa-trash\\\"></i> </button> </div> <div ng-if=\\\"scheduledReports.length == 0\\\"> <span>No Data available</span> </div> <pagination model=pagination ng-if=\\\"scheduledReports.length > 0\\\" position=bottom on-change=refresh> <table class=\\\"table table-sm table-striped mb-2\\\"> <thead> <tr> <th ng-if=\\\"userInfo.isReportDesigner() || userInfo.isAdmin()\\\">Action(s)</th> <th>Template</th> <th>Format</th> <th colspan=3>Delivery Options</th> <th>Cron Expression</th> <th>Trigger Name</th> <th>Next fire time</th> </tr> </thead> <tbody> <tr ng-repeat=\\\"schedule in scheduledReports\\\"> <td> <button class=\\\"btn btn-sm btn-danger\\\" title=\\\"Delete Schedule\\\" ng-if=\\\"userInfo.isReportDesigner() || userInfo.isAdmin()\\\" ng-click=delete(schedule)><i class=\\\"fa fa-trash\\\"></i></button> <button class=\\\"btn btn-sm btn-primary\\\" id=action.edit.{{schedule.triggerName}} ng-click=\\\"edit(schedule.triggerName, schedule.reportId)\\\" title=\\\"Show Report Parameters\\\"><i class=\\\"fa fa-cogs\\\"></i></button> </td> <td>{{schedule.reportId}}</td> <td> <i class=fa ng-class=\\\"{'fa-file-pdf-o':schedule.deliveryOptions.format === 'PDF', 'fa-file-text-o': schedule.deliveryOptions.format === 'CSV'}\\\"></i> {{schedule.deliveryOptions.format}} </td> <td> <span ng-if=\\\"schedule.deliveryOptions.persist || false\\\" title=\\\"Persist to Disk\\\"> <i class=\\\"fa fa-save\\\"></i> </span> </td> <td> <span ng-if=\\\"schedule.deliveryOptions.sendMail || false\\\" title=\\\"Mail to {{schedule.deliveryOptions.mailTo}}\\\"> <i class=\\\"fa fa-envelope-o\\\"></i> </span> </td> <td> <span ng-if=\\\"schedule.deliveryOptions.webhook || false\\\" title=\\\"POST to {{schedule.deliveryOptions.webhookUrl}}\\\"> <i class=\\\"fa fa-paper-plane-o\\\"></i> </span> </td> <td> <span title=\\\"Cron Expression\\\"> <i class=\\\"fa fa-clock-o\\\"></i> <small>{{schedule.cronExpression}}</small> </span> </td> <td>{{schedule.triggerName}}</td> <td>{{schedule.nextFireTime}}</td> <td> </td> </tr> </tbody> </table> </pagination> </div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/onms-reports/details.html';\nvar html = \" <div class=\\\"alert alert-danger mx-2 my-2\\\" ng-if=errorMessage> <span>{{errorMessage}}</span> </div> <div class=\\\"alert alert-warning mx-2 my-2\\\" ng-if=\\\"!meta.online && !(userInfo.isAdmin() || userInfo.isReportDesigner())\\\"> <span>This report cannot be executed adhoc and you do not have permissions to deliver/schedule this report.</span> </div> <div ng-if=\\\"meta.online || userInfo.isAdmin() || userInfo.isReportDesigner()\\\"> <onms-report-details ng-model=report options=options on-invalid-change=onReportFormInvalidStateChange(invalidState) on-global-error=setGlobalError(response)></onms-report-details> <div class=\\\"alert alert-success mx-4\\\" ng-if=scheduleSuccess> The report was scheduled. <br/> <a ui-sref-active=active ui-sref=report.schedules>Show Schedules</a> </div> <div class=\\\"alert alert-success mx-4\\\" ng-if=deliverySuccess> The report was scheduled for delivery. It may take some time until it is delivered. <br/> <a ui-sref-active=active ui-sref=report.schedules>Show scheduled Reports</a> <br/> <a ui-sref-active=active ui-sref=report.persisted>Show persisted Reports</a> </div> <div class=\\\"form-group mx-4\\\"> <button class=\\\"btn btn-danger\\\" name=cancel id=cancel ui-sref=report.templates> <i class=\\\"fa fa-times\\\"></i> Cancel </button> <button class=\\\"btn btn-primary\\\" name=run id=execute ng-click=execute() ng-disabled=\\\"reportForm.$invalid || !report.scheduleOptions.isValid() || (report.isGrafanaReport() && !report.isGrafanaEndpointSelected())\\\"> <span ng-if=\\\"meta.online && !options.deliverReport && !options.scheduleReport\\\"><i class=\\\"fa fa-play\\\"></i> Create</span> <span ng-if=\\\"options.deliverReport && !options.scheduleReport\\\"><i class=\\\"fa fa-share\\\"></i> Deliver</span> <span ng-if=\\\"options.deliverReport && options.scheduleReport\\\"><i class=\\\"fa fa-clock-o\\\"></i> Schedule</span> Report </button> </div> </div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/onms-reports/modals/schedule-edit-modal.html';\nvar html = \"<div class=modal-header> <h3>Edit Schedule</h3> </div> <div class=modal-body> <onms-report-details ng-if=report ng-model=report options=options on-invalid-change=onReportFormInvalidStateChange(invalidState) on-global-error=setGlobalError(response)></onms-report-details> </div> <div class=modal-footer> <button class=\\\"btn btn-danger\\\" id=action.cancel.{{meta.triggerName}} ng-click=$close()><i class=\\\"fa fa-times\\\"></i> Cancel</button> <button class=\\\"btn btn-primary\\\" id=action.update.{{meta.triggerName}} ng-click=update() ng-disabled=\\\"reportForm.$invalid || !report.scheduleOptions.isValid() || (report.isGrafanaReport() && !report.isGrafanaEndpointSelected())\\\"><i class=\\\"fa fa-save\\\"></i> Update</button> </div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/onms-reports/report-details.html';\nvar html = \"<style type=text/css>.ui-select-bootstrap.is-invalid>.ui-select-match>.btn{border-color:#dc3545;background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23dc3545' viewBox='-2 -2 7 7'%3e%3cpath stroke='%23dc3545' d='M0 0l3 3m0-3L0 3'/%3e%3ccircle r='.5'/%3e%3ccircle cx='3' r='.5'/%3e%3ccircle cy='3' r='.5'/%3e%3ccircle cx='3' cy='3' r='.5'/%3e%3c/svg%3E\\\");background-repeat:no-repeat;background-position:100% calc(.375em + .1875rem);background-size:calc(.75em + .375rem) calc(.75em + .375rem)}.ui-select-bootstrap>.ui-select-match>.btn{border-color:#ced4da;background-color:#fff;background:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3e%3cpath fill='%23{$custom-select-indicator-color}' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e\\\") no-repeat right .75rem center/8px 10px}.ui-select-match[disabled]{background-color:#eee}</style> <form name=reportForm class=\\\"form mx-4 mt-2\\\" role=form novalidate> <div class=\\\"\\\" ng-if=\\\"report.parameters && report.parameters.length > 0\\\"> <h3 class=\\\"\\\">Report Parameters</h3> <div ng-show=\\\"report.isGrafanaReport() && !options.hideEndpointsChooser\\\" class=form-group> <label>Grafana Endpoint</label> <a href=/opennms/admin/endpoint/index.jsp title=\\\"Configure Grafana Endpoints\\\"> <i class=\\\"fa fa-plug\\\"></i></a> <a href title=\\\"Reload Grafana Endpoints\\\" ng-click=loadEndpoints()> <i class=\\\"fa fa-refresh\\\"></i></a> <ui-select ng-model=selected.endpoint ng-show=\\\"endpoints.length > 0\\\" ng-class=\\\"{ 'is-invalid': report.errors.GRAFANA_ENDPOINT_UID || report.errors.GRAFANA_DASHBOARD_UID }\\\" ng-change=endpointChanged() theme=bootstrap> <ui-select-match placeholder=\\\"Select Grafana Endpoint\\\"> <span>{{$select.selected.label}}</span> </ui-select-match> <ui-select-choices repeat=\\\"endpoint in (endpoints | filter: $select.search)\\\"> {{endpoint.label}} </ui-select-choices> </ui-select> <p class=\\\"alert alert-warning\\\" ng-if=\\\"endpoints.length == 0\\\"> There is no Grafana Endpoint defined. Please <a href=/opennms/admin/endpoint/index.jsp>add a Grafana Endpoint</a>. </p> <div class=\\\"text-danger mt-1\\\" style=font-size:80% ng-if=report.errors.GRAFANA_ENDPOINT_UID> {{report.errors.GRAFANA_ENDPOINT_UID}}: <a href=/opennms/admin/endpoint/index.jsp#!/endpoints/grafana>Configure Grafana Endpoints</a> </div> <div class=\\\"text-danger mt-1\\\" style=font-size:80% ng-if=report.errors.GRAFANA_DASHBOARD_UID> {{report.errors.GRAFANA_DASHBOARD_UID}} </div> </div> <div ng-show=\\\"report.isGrafanaReport() && selected.endpoint\\\" class=form-group> <label>Grafana Dashboard</label> <a ng-if=\\\"dashboards.length > 0\\\" href={{selected.endpoint.url}}/{{selected.dashboard.url}} title=\\\"Show Dashboard\\\" target=_blank> <i class=\\\"fa fa-dashboard\\\"></i></a> <a href title=\\\"Refresh Dashboards\\\" ng-click=endpointChanged()><i class=\\\"fa fa-refresh\\\"></i></a> <ui-select ng-model=selected.dashboard ng-show=\\\"dashboards.length > 0\\\" theme=bootstrap> <ui-select-match placeholder=\\\"Select Grafana Dashboard\\\"> <span>{{$select.selected.title}}</span> </ui-select-match> <ui-select-choices repeat=\\\"dashboard in (dashboards | filter: $select.search)\\\"> {{dashboard.title}} </ui-select-choices> </ui-select> <p class=\\\"alert alert-warning\\\" ng-if=\\\"dashboards.length == 0\\\"> There is no Grafana Dashboard defined. Please <a href={{selected.endpoint.url}}/dashboards target=_blank>add a Dashboard</a>. </p> </div> <div ng-if=\\\"parameter.type === 'string' && parameter.hidden === false\\\" class=form-group ng-repeat-start=\\\"parameter in report.parameters track by paramHash(parameter)\\\"> <label for={{parameter.name}} class=\\\"\\\">{{parameter.displayName}}</label> <select id={{parameter.name}} name=p{{parameter.name}} ng-if=\\\"parameter.inputType === 'reportCategorySelector'\\\" class=\\\"form-control custom-select\\\" ng-class=\\\"{ 'is-invalid' : reportForm[parameter.name].$invalid || report.errors[parameter.name] || error[parameter.name]}\\\" ng-model=parameter.value ng-options=\\\"option for option in report.supportedSurveillanceCategories\\\"> </select> <select id={{parameter.name}} ng-if=\\\"parameter.inputType === 'onmsCategorySelector'\\\" class=\\\"form-control custom-select\\\" ng-model=parameter.value> <option ng-repeat=\\\"option in report.supportedCategories\\\">{{option}}</option> </select> <input id={{parameter.name}} name={{parameter.name}} ng-if=\\\"parameter.inputType !== 'reportCategorySelector' && parameter.inputType !== 'onmsCategorySelector'\\\" ng-class=\\\"{ 'is-invalid' : reportForm[parameter.name].$invalid || report.errors[parameter.name]}\\\" class=form-control type=text ng-model=parameter.value required/> <div ng-show=reportForm[parameter.name].$invalid class=invalid-feedback>Please provide a value.</div> <div ng-show=report.errors[parameter.name] class=invalid-feedback>{{report.errors[parameter.name]}}</div> </div> <div ng-if=\\\"parameter.type === 'integer'\\\" class=form-group> <label for={{parameter.name}} class=\\\"\\\">{{parameter.displayName}}</label> <input id={{parameter.name}} name={{parameter.name}} ng-class=\\\"{ 'is-invalid' : reportForm[parameter.name].$invalid || report.errors[parameter.name] || report.errors[parameter.name]}\\\" class=form-control type=text ng-pattern=/^-?[0-9]*$/ ng-model=parameter.value required/> <div ng-show=reportForm[parameter.name].$invalid class=invalid-feedback>Please provide an integer value.</div> <div ng-show=report.errors[parameter.name] class=invalid-feedback>{{report.errors[parameter.name]}}</div> </div> <div ng-if=\\\"parameter.type === 'float'\\\" class=form-group> <label for={{parameter.name}} class=\\\"\\\">{{parameter.displayName}}</label> <input id={{parameter.name}} name={{parameter.name}} ng-class=\\\"{ 'is-invalid' : reportForm[parameter.name].$invalid || report.errors[parameter.name] || report.errors[parameter.name]}\\\" class=form-control type=number ng-model=parameter.value required/> <div ng-show=reportForm[parameter.name].$invalid class=invalid-feedback>Please provide a decimal number.</div> <div ng-show=report.errors[parameter.name] class=invalid-feedback>{{report.errors[parameter.name]}}</div> </div> <div ng-if=\\\"parameter.type === 'double'\\\" class=form-group> <label for={{parameter.name}} class=\\\"\\\">{{parameter.displayName}}</label> <input id={{parameter.name}} name={{parameter.name}} ng-class=\\\"{ 'is-invalid' : reportForm[parameter.name].$invalid || report.errors[parameter.name] || report.errors[parameter.name]}\\\" class=form-control type=number ng-model=parameter.value required/> <div ng-show=reportForm[parameter.name].$invalid class=invalid-feedback>Please provide a decimal number.</div> <div ng-show=report.errors[parameter.name] class=invalid-feedback>{{report.errors[parameter.name]}}</div> </div> <div ng-if=\\\"parameter.type === 'date'\\\" class=form-group> <label for={{parameter.name}} class=\\\"\\\">{{parameter.displayName}}</label> <div class=input-group ng-if=\\\"options.scheduleReport && parameter.useAbsoluteDate === false\\\"> <input type=number name={{parameter.name}}Count ng-class=\\\"{ 'is-invalid' : reportForm[parameter.name + 'Count'].$invalid || report.errors[parameter.name + 'Count'] }\\\" class=form-control min=0 max=31 step=1 ng-pattern=/^[0-9]*$/ ng-model=parameter.count placeholder=count required/> <select class=\\\"form-control custom-select\\\" ng-model=parameter.interval> <option value=day>day</option> <option value=month>month</option> <option value=year>year</option> </select> <label class=\\\"my-auto mx-2\\\"> ago, at </label> <input type=number name={{parameter.name}}Hours ng-class=\\\"{ 'is-invalid' : reportForm[parameter.name + 'Hours'].$invalid || report.errors[parameter.name + 'Hours'] }\\\" class=form-control min=0 max=23 step=1 ng-pattern=/^[0-9]*$/ ng-model=parameter.hours placeholder=hours required/> <input type=number name={{parameter.name}}Minutes ng-class=\\\"{ 'is-invalid' : reportForm[parameter.name + 'Minutes'].$invalid || report.errors[parameter.name + 'Minutes'] }\\\" class=form-control min=0 max=59 step=1 ng-pattern=/^[0-9]*$/ ng-model=parameter.minutes placeholder=minutes required/> <div ng-show=\\\"reportForm[parameter.name + 'Count'].$invalid || report.errors[parameter.name + 'Count']\\\" class=invalid-feedback>{{report.errors[parameter.name + 'Count'] || 'Please provide a count value between 0 and 31.'}}</div> <div ng-show=\\\"reportForm[parameter.name + 'Hours'].$invalid || report.errors[parameter.name + 'Hours']\\\" class=invalid-feedback>{{report.errors[parameter.name + 'Hours'] || 'Please provide an hours value between 0 and 23.'}}</div> <div ng-show=\\\"reportForm[parameter.name + 'Minutes'].$invalid || report.errors[parameter.name + 'Minutes']\\\" class=invalid-feedback>{{report.errors[parameter.name + 'Minutes'] || 'Please provide a minutes value between 0 and 59.'}}</div> </div> <datetimepicker ng-if=\\\"!options.scheduleReport || parameter.useAbsoluteDate === true\\\" locale=parameter.internalLocale format=parameter.internalFormat ng-model=parameter.internalValue expand=true on-state-change=\\\"onDateParamStateChange(invalidState, date, parameter)\\\"></datetimepicker> </div> <div ng-if=\\\"parameter.type === 'timezone'\\\" class=form-group ng-repeat-end> <label for={{parameter.name}} class=\\\"\\\">{{parameter.displayName}}</label> <ui-select id={{parameter.name}} name={{parameter.name}} ng-model=parameter.value ng-change=timezoneChanged() ng-disabled=!report.timezoneEditable ng-class=\\\"{ 'is-invalid' : reportForm[parameter.name].$invalid || report.errors[parameter.name] || report.errors[parameter.name]}\\\" theme=bootstrap> <ui-select-match placeholder=\\\"Select Timezone\\\"> <span>{{$select.selected}}</span> </ui-select-match> <ui-select-choices repeat=\\\"timezone in (report.supportedTimezones | filter: $select.search)\\\"> {{timezone}} </ui-select-choices> </ui-select> <div ng-show=!report.timezoneEditable class=\\\"text-horizon mt-1\\\" style=font-size:80%> Time Zone has been explicitly configured in the Grafana Dashboard. This can be modified by changing <i>Timezone</i> in <a href=\\\"{{selected.endpoint.url}}/{{selected.dashboard.url}}?editview=settings\\\" target=_blank>Time Options <i class=\\\"fa fa-external-link\\\"></i></a>. </div> <div ng-show=report.errors[parameter.name] class=\\\"text-danger mt-1\\\" style=font-size:80%>{{report.errors[parameter.name]}}</div> </div> <hr class=mb-4 /> </div> <div class=form-group ng-if=\\\"options.showReportFormatOptions && !options.deliverReport\\\"> <label for=reportFormat class=\\\"\\\">Report Format</label> <select id=reportFormat name=reportFormat ng-class=\\\"{ 'is-invalid' : reportForm.reportFormat.$invalid || report.errors.format }\\\" class=\\\"form-control custom-select\\\" ng-model=report.format ng-options=\\\"format as format for format in report.supportedFormats\\\"> </select> <div ng-show=report.errors.format class=invalid-feedback>{{report.errors.format}}</div> <hr class=mb-4 /> </div> <div class=\\\"form-group ml-4\\\" ng-if=\\\"options.showDeliveryOptions && options.showDeliveryOptionsToggle\\\"> <input type=checkbox id=deliverReport ng-model=options.deliverReport class=form-check-input ng-change=\\\"options.scheduleReport = options.deliverReport && options.scheduleReport\\\"/> <label class=form-check-label data-toggle=tooltip data-placement=right title=\\\"Deliver report to file system or via e-mail\\\" for=deliverReport> <i class=\\\"fa fa-share\\\"></i> Deliver this report </label> </div> <div class=\\\"\\\" ng-if=\\\"options.showDeliveryOptions && options.deliverReport\\\"> <h3>Report Delivery Options</h3> <div class=\\\"\\\"> <div class=form-group> <label for=instanceId>Unique name</label> <button class=\\\"btn btn-link text-secondary px-0\\\" popover-trigger=\\\"'mouseenter'\\\" uib-popover=\\\"A name to identify this report. Must be unique overall schedules/deliveries.\\\"><i class=\\\"fa fa-info-circle\\\"/> </button> <input ng-disabled=!options.canEditTriggerName id=instanceId name=instanceId ng-model=report.deliveryOptions.instanceId ng-class=\\\"{ 'is-invalid' : reportForm.instanceId.$invalid || report.errors.instanceId }\\\" class=form-control data-toggle=tooltip data-placement=right title=\\\"A name to identify this report. Must be unique overall reports.\\\" required/> <div ng-show=reportForm.instanceId.$invalid class=invalid-feedback>Please provide a value.</div> <div ng-show=report.errors.instanceId class=invalid-feedback>{{report.errors.instanceId}}</div> </div> <div class=form-group> <label for=format class=\\\"\\\">Format</label> <select id=format name=format ng-class=\\\"{ 'is-invalid' : reportForm.format.$invalid || report.errors.format }\\\" class=\\\"form-control custom-select\\\" ng-model=report.format data-toggle=tooltip data-placement=right title=\\\"The output format of the generated report.\\\" ng-options=\\\"format as format for format in report.supportedFormats\\\"> </select> <div ng-show=report.errors.format class=invalid-feedback>{{report.errors.format}}</div> </div> <div class=\\\"form-group ml-4\\\"> <input type=checkbox id=persistToggle ng-model=report.deliveryOptions.persist class=form-check-input ng-class=\\\"{ 'is-invalid' : report.errors.sendMail_persist_webhook }\\\"/> <label class=form-check-label data-toggle=tooltip data-placement=right title=\\\"Indicates whether a copy of the generated report is stored on disk.\\\" for=persistToggle> Save a copy of this report </label> </div> <div class=\\\"form-group ml-4\\\"> <input type=checkbox id=sendMailToggle ng-model=report.deliveryOptions.sendMail class=form-check-input ng-class=\\\"{ 'is-invalid' : report.errors.sendMail_persist_webhook }\\\"/> <label class=form-check-label for=sendMailToggle data-toggle=tooltip data-placement=right title=\\\"Indicates whether the generated report is send via email to the defined recipient.\\\"> Email report </label> </div> <div class=\\\"form-group ml-4\\\"> <input type=checkbox id=webhookToggle ng-model=report.deliveryOptions.webhook class=form-check-input ng-class=\\\"{ 'is-invalid' : report.errors.sendMail_persist_webhook }\\\"/> <label class=form-check-label for=webhookToggle data-toggle=tooltip data-placement=right title=\\\"Indicates wheter the generated report is pushed to an URL\\\"> Webhook </label> <div ng-show=report.errors.sendMail_persist_webhook class=invalid-feedback>Please select at least one delivery method</div> </div> <div class=form-group ng-if=report.deliveryOptions.sendMail> <label for=mailRecipient>Recipient</label> <button class=\\\"btn btn-link text-secondary px-0\\\" popover-trigger=\\\"'mouseenter'\\\" uib-popover=\\\"Allows multiple recipients by separating them via comma: test@opennms.org,ulf@opennms.org\\\"><i class=\\\"fa fa-info-circle\\\"/> </button> <input id=mailRecipient name=mailRecipient ng-model=report.deliveryOptions.mailTo placeholder=some@email.org type=email class=form-control ng-class=\\\"{ 'is-invalid' : reportForm.mailRecipient.$invalid || report.errors.mailTo }\\\" data-toggle=tooltip data-placement=right title=\\\"The recipient of the generated report if 'Email report' is enabled.\\\" multi-emails required/> <div ng-show=reportForm.mailRecipient.$invalid class=invalid-feedback>Please provide a valid email.</div> <div ng-show=report.errors.mailTo class=invalid-feedback>{{report.errors.mailTo}}</div> </div> <div class=form-group ng-if=report.deliveryOptions.webhook> <label for=mailRecipient>Webhook URL</label> <button class=\\\"btn btn-link text-secondary px-0\\\" popover-trigger=\\\"'outsideClick'\\\" uib-popover-html=\\\"'\\n                        <div>\\n                            Posts the generated report to this http endpoint.\\n                            If url parameters are required, substitution of the URL supports the following parameters: <br/> <br/>\\n                            - <strong>format</strong> Format of the report <br/>\\n                            - <strong>instanceId</strong> Unique name of the report <br/>\\n                            - <strong>parameter_&lt;parameterName&gt;</strong> Any report parameter <br/> <br/>\\n\\n                            <strong>Example</strong> <br/>\\n                            <span>http://localhost:8080/files?instanceId=:instanceId&format=:format&option=:parameter_option</pre>\\n                        </div>'\\\"> <i class=\\\"fa fa-info-circle\\\"></i> </button> <input id=webhookUrl name=webhookUrl ng-model=report.deliveryOptions.webhookUrl placeholder=https://example.org/:reportId/?:instanceId type=text class=form-control ng-class=\\\"{ 'is-invalid' : reportForm.webhookUrl.$invalid || report.errors.webhookUrl }\\\" data-toggle=tooltip data-placement=right title=\\\"The report is sent to this URL with an http post request after generated\\\" required/> <div ng-show=reportForm.webhookUrl.$invalid class=invalid-feedback>Please provide a valid webhook url.</div> <div ng-show=report.errors.webhookUrl class=invalid-feedback>{{report.errors.webhookUrl}}</div> </div> </div> <hr class=mb-4 /> </div> <div class=\\\"form-group ml-4\\\" ng-if=\\\"options.showScheduleOptions && options.showScheduleOptionsToggle\\\"> <input type=checkbox id=createSchedule ng-model=options.scheduleReport class=form-check-input ng-change=\\\"options.deliverReport = options.deliverReport || options.scheduleReport\\\"/> <label class=form-check-label data-toggle=tooltip data-placement=right title=\\\"Schedule this report\\\" for=createSchedule> <i class=\\\"fa fa-clock-o\\\"></i> Schedule this report </label> </div> <div class=\\\"\\\" ng-if=\\\"options.showScheduleOptions && options.scheduleReport\\\"> <h3>Schedule Editor</h3> <div class=\\\"\\\"> <onms-schedule-editor ng-model=report.scheduleOptions /> <div class=text-danger style=font-size:80%;max-width:300px ng-if=report.errors.cronExpression>{{report.errors.cronExpression}}</div> </div> <hr/> </div> <p class=text-danger style=font-size:80% ng-if=report.errors.entity> {{report.errors.entity}} </p> </form>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","const MODULE_NAME = 'onms.elementList';\n\n/**\n * ISO-8601 date format string.\n */\nwindow.ISO_8601_DATE_FORMAT = 'yyyy-MM-ddTHH:mm:ss.sssZ';\nwindow.ISO_8601_DATE_FORMAT_WITHOUT_MILLIS = 'yyyy-MM-ddTHH:mm:ssZ';\n\nconst angular = require('vendor/angular-js');\nconst jQuery = require('vendor/jquery-js');\nrequire('vendor/bootstrap-js');\n\nconst editInPlaceTemplate = require('../templates/angular-onms-elementList-editInPlace.html');\nconst editListInPlaceTemplate = require('../templates/angular-onms-elementList-editListInPlace.html');\nconst editMapInPlaceTemplate = require('../templates/angular-onms-elementList-editMapInPlace.html');\n\n/**\n * Function used to append an extra transformer to the default $http transforms.\n */\nconst appendTransform = (defaultTransform, transform) => {\n\tconst t = angular.isArray(defaultTransform) ? defaultTransform : [ defaultTransform ];\n\treturn t.concat(transform);\n};\n\n/**\n * Escape FIQL reserved characters by URL-encoding them. Reserved characters are:\n * <ul>\n * <li>!</li>\n * <li>$</li>\n * <li>'</li>\n * <li>(</li>\n * <li>)</li>\n * <li>*</li>\n * <li>+</li>\n * <li>,</li>\n * <li>;</li>\n * <li>=</li>\n * </ul>\n * @param value\n * @returns String with reserved characters URL-encoded\n */\nconst escapeSearchValue = (value) => {\n\tif (typeof value === 'string') {\n\t\t\treturn value\n\t\t\t\t\t.replace('!', '%21')\n\t\t\t\t\t.replace('$', '%24')\n\t\t\t\t\t.replace('\\'', '%27')\n\t\t\t\t\t.replace('(', '%28')\n\t\t\t\t\t.replace(')', '%29')\n\t\t\t\t\t// People are going to type this in as a wildcard, so I\n\t\t\t\t\t// guess they'll have to type in '%2A' if they want to\n\t\t\t\t\t// match an asterisk...\n\t\t\t\t\t//.replace('*', '%2A')\n\t\t\t\t\t.replace('+', '%2B')\n\t\t\t\t\t.replace(',', '%2C')\n\t\t\t\t\t.replace(';', '%3B')\n\t\t\t\t\t.replace('=', '%3D');\n\t}\n\treturn value;\n};\n\n/**\n * Convert from a clause into a FIQL query string.\n */\nconst toFiql = (clauses) => {\n\tlet first = true;\n\tlet fiql = '';\n\tfor (let i = 0; i < clauses.length; i++) {\n\t\tif (!first) {\n\t\t\tfiql += ';';\n\t\t}\n\t\tfiql += clauses[i].property;\n\n\t\tswitch (clauses[i].operator) {\n\t\tcase 'EQ':\n\t\t\tfiql += '=='; break;\n\t\tcase 'NE':\n\t\t\tfiql += '!='; break;\n\t\tcase 'LT':\n\t\t\tfiql += '=lt='; break;\n\t\tcase 'LE':\n\t\t\tfiql += '=le='; break;\n\t\tcase 'GT':\n\t\t\tfiql += '=gt='; break;\n\t\tcase 'GE':\n\t\t\tfiql += '=ge='; break;\n\t\tdefault:\n\t\t\t// otherwise, do nothing\n\t\t\tbreak;\n\t\t}\n\n\t\tfiql += escapeSearchValue(clauses[i].value);\n\n\t\tfirst = false;\n\t}\n\treturn fiql;\n};\n\n/**\n * Convert from a FIQL query string into separate clause objects.\n * This only works for simple queries composed of multiple AND (';')\n * clauses.\n * \n * TODO: Expand this to cover more FIQL syntax\n */\nconst fromFiql = (fiql) => {\n\tlet statements = fiql.split(';');\n\tlet segments = [];\n\tlet clauses = [];\n\tfor (let i = 0; i < statements.length; i++) {\n\t\tif (statements[i].indexOf('==') > 0) {\n\t\t\tsegments = statements[i].split('==');\n\t\t\tclauses.push({\n\t\t\t\tproperty: segments[0],\n\t\t\t\toperator: 'EQ',\n\t\t\t\tvalue: segments[1]\n\t\t\t});\n\t\t} else if (statements[i].indexOf('!=') > 0) {\n\t\t\tsegments = statements[i].split('!=');\n\t\t\tclauses.push({\n\t\t\t\tproperty: segments[0],\n\t\t\t\toperator: 'NE',\n\t\t\t\tvalue: segments[1]\n\t\t\t});\n\t\t} else if (statements[i].indexOf('=lt=') > 0) {\n\t\t\tsegments = statements[i].split('=lt=');\n\t\t\tclauses.push({\n\t\t\t\tproperty: segments[0],\n\t\t\t\toperator: 'LT',\n\t\t\t\tvalue: segments[1]\n\t\t\t});\n\t\t} else if (statements[i].indexOf('=le=') > 0) {\n\t\t\tsegments = statements[i].split('=le=');\n\t\t\tclauses.push({\n\t\t\t\tproperty: segments[0],\n\t\t\t\toperator: 'LE',\n\t\t\t\tvalue: segments[1]\n\t\t\t});\n\t\t} else if (statements[i].indexOf('=gt=') > 0) {\n\t\t\tsegments = statements[i].split('=gt=');\n\t\t\tclauses.push({\n\t\t\t\tproperty: segments[0],\n\t\t\t\toperator: 'GT',\n\t\t\t\tvalue: segments[1]\n\t\t\t});\n\t\t} else if (statements[i].indexOf('=ge=') > 0) {\n\t\t\tsegments = statements[i].split('=ge=');\n\t\t\tclauses.push({\n\t\t\t\tproperty: segments[0],\n\t\t\t\toperator: 'GE',\n\t\t\t\tvalue: segments[1]\n\t\t\t});\n\t\t}\n\t}\n\treturn clauses;\n};\n\n\n/**\n * Parse an HTTP Content-Range header into the start, end, and total fields.\n * The header should be in a format like: \"items 0-14/28\".\n * \n * @param contentRange String from the Content-Range header\n */\nconst parseContentRange = (contentRange) => {\n\tif (!contentRange) {\n\t\treturn {start: 0, end: 0, total: 0};\n\t}\n\t// Example: items 0-14/28\n\tconst pattern = /items\\s+?(\\d+)\\s*-\\s*(\\d+)\\s*\\/\\s*(\\d+)/;\n\treturn {\n\t\tstart: Number(contentRange.replace(pattern, '$1')),\n\t\tend: Number(contentRange.replace(pattern, '$2')),\n\t\ttotal: Number(contentRange.replace(pattern, '$3'))\n\t};\n};\n\nconst normalizeOffset = (offset, maxOffset, limit) => {\n\tlet newOffset = offset;\n\n\t// Offset of the last page\n\tlet lastPageOffset;\n\tif (maxOffset < 0) {\n\t\tnewOffset = 0;\n\t\tlastPageOffset = 0;\n\t} else {\n\t\tlastPageOffset = Math.floor(maxOffset / limit) * limit; \n\t}\n\n\t// Bounds checking\n\tnewOffset = ((newOffset < 0) ? 0 : newOffset);\n\tnewOffset = ((newOffset > lastPageOffset) ? lastPageOffset : newOffset);\n\n\t// Make sure that offset is a multiple of limit\n\tnewOffset = Math.floor(newOffset / limit) * limit;\n\n\treturn newOffset;\n};\n\n/* // BMR: this doesn't seem to actually be used anywhere\nString.prototype.endsWith = function(suffix) {\n\treturn this.indexOf(suffix, this.length - suffix.length) !== -1;\n};\n*/\n\n// $filters that can be used to create human-readable versions of filter values\nangular.module('onmsListFilters', [])\n.filter('operator', function() {\n\treturn function(input, value) {\n\t\t// See if the string contains a wildcard\n\t\tvar fuzzy = (typeof value === 'string' && value.indexOf('*') > -1);\n\n\t\tswitch (input) {\n\t\tcase 'EQ':\n\t\t\treturn fuzzy ? 'is like' : 'equals';\n\t\tcase 'NE':\n\t\t\treturn fuzzy ? 'is not like' : 'does not equal';\n\t\tcase 'LT':\n\t\t\treturn 'is less than';\n\t\tcase 'LE':\n\t\t\treturn 'is less than or equal';\n\t\tcase 'GT':\n\t\t\treturn 'is greater than';\n\t\tcase 'GE':\n\t\t\treturn 'is greater than or equal';\n\t\tdefault:\n\t\t\t// If no match, return the input\n\t\t\treturn input;\n\t\t}\n\t}\n})\n.filter('isNotEmpty', function() {\n\treturn function(input) {\n\t\treturn input &&\n\t\t\t(typeof input === 'string' ? input.trim() !== '' : true);\n\t}\n})\n;\n\n// List module\nangular.module(MODULE_NAME, [])\n\n.config(/* @ngInject */ function($locationProvider) {\n\t$locationProvider.html5Mode({\n\t\t// Use HTML5 \n\t\tenabled: true,\n\t\t// Don't rewrite all <a> links on the page\n\t\trewriteLinks: false\n\t});\n})\n\n.directive('onmsListEditInPlace', /* @ngInject */ function() {\n\treturn {\n\t\tcontroller: function($scope) {\n\t\t\t$scope.editing = false;\n\t\t\t$scope.originalValue = angular.copy($scope.value);\n\n\t\t\t// Start editing the value\n\t\t\t$scope.edit = function() {\n\t\t\t\t$scope.editing = true;\n\t\t\t}\n\n\t\t\t// Stop editing the value\n\t\t\t$scope.unedit = function() {\n\t\t\t\t$scope.editing = false;\n\t\t\t}\n\n\t\t\t$scope.onKeyup = function($event) {\n\t\t\t\t// If the user types ESC, then abort the edit\n\t\t\t\tif($event.keyCode === 27) {\n\t\t\t\t\t$scope.cancel();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$scope.submit = function() {\n\t\t\t\t$scope.onSubmit();\n\t\t\t\t// TODO: Handle update failures\n\t\t\t\t// Now that we've save a new value, use it as the original value\n\t\t\t\t$scope.originalValue = $scope.value;\n\t\t\t\t// Switch out of edit mode\n\t\t\t\t$scope.unedit();\n\t\t\t}\n\n\t\t\t$scope.cancel = function() {\n\t\t\t\t// Restore the original value\n\t\t\t\t$scope.value = $scope.originalValue;\n\t\t\t\t// Switch out of edit mode\n\t\t\t\t$scope.unedit();\n\t\t\t}\n\t\t},\n\t\t// Use an isolated scope\n\t\tscope: {\n\t\t\titem: '=',\n\t\t\tvalue: '=',\n\t\t\tvalueType: '=',\n\t\t\t// Optional step attribute for number fields\n\t\t\tstep: '=',\n\t\t\tonSubmit: '&onSubmit'\n\t\t},\n\t\ttemplateUrl: editInPlaceTemplate,\n\t\ttransclude: true\n\t};\n})\n\n.directive('onmsListEditListInPlace', /* @ngInject */ function($window) {\n\treturn {\n\t\tcontroller: function($scope) {\n\t\t\t$scope.editing = false;\n\n\t\t\t// Start editing the value\n\t\t\t$scope.edit = function() {\n\t\t\t\t$scope.editing = true;\n\t\t\t}\n\n\t\t\t// Stop editing the value\n\t\t\t$scope.unedit = function() {\n\t\t\t\t// Undo any edits\n\t\t\t\t$scope.newValue = null;\n\t\t\t\t$scope.editing = false;\n\t\t\t}\n\n\t\t\t$scope.onKeyup = function(event) {\n\t\t\t\tswitch(event.keyCode) {\n\t\t\t\t// If the user types Enter, then submit the edit\n\t\t\t\tcase 13: $scope.add($scope.values, $scope.newValue); break;\n\t\t\t\t// If the user types ESC, then abort the edit\n\t\t\t\tcase 27: $scope.unedit(); break;\n\t\t\t\t// otherwise, do nothing\n\t\t\t\tdefault: break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$scope.confirmAndRemove = function(items, item) {\n\t\t\t\t// Splice the value out of the array\n\t\t\t\tif ($window.confirm('Are you sure you want to remove \"' + item + '\"?')) {\n\t\t\t\t\titems.splice(items.indexOf(item), 1);\n\t\t\t\t\t$scope.onEdit();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$scope.add = function(items, item) {\n\t\t\t\titems.push(item);\n\t\t\t\titems.sort();\n\t\t\t\t// TODO: Handle update failures\n\t\t\t\t$scope.onEdit();\n\t\t\t\t// Switch out of edit mode\n\t\t\t\t$scope.unedit();\n\t\t\t}\n\t\t},\n\t\t// Use an isolated scope\n\t\tscope: {\n\t\t\tvalues: '=',\n\t\t\tvalueType: '=',\n\t\t\t// Optional step attribute for number fields\n\t\t\tstep: '=',\n\t\t\tonEdit: '&onEdit'\n\t\t},\n\t\ttemplateUrl: editListInPlaceTemplate,\n\t\ttransclude: true\n\t};\n})\n\n.directive('onmsListEditMapInPlace', /* @ngInject */ function($window) {\n\treturn {\n\t\tcontroller: function($scope) {\n\t\t\t$scope.editing = false;\n\n\t\t\t// Start editing the value\n\t\t\t$scope.edit = function() {\n\t\t\t\t$scope.editing = true;\n\t\t\t}\n\n\t\t\t// Stop editing the value\n\t\t\t$scope.unedit = function() {\n\t\t\t\t// Undo any edits\n\t\t\t\t$scope.newKey = null;\n\t\t\t\t$scope.newValue = null;\n\t\t\t\t$scope.editing = false;\n\t\t\t}\n\n\t\t\t$scope.onKeyup = function(event) {\n\t\t\t\tswitch(event.keyCode) {\n\t\t\t\t// If the user types Enter, then submit the edit\n\t\t\t\tcase 13: $scope.add($scope.values, $scope.newKey, $scope.newValue); break;\n\t\t\t\t// If the user types ESC, then abort the edit\n\t\t\t\tcase 27: $scope.unedit(); break;\n\t\t\t\t// otherwise, do nothing\n\t\t\t\tdefault: break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$scope.confirmAndRemove = function(items, key) {\n\t\t\t\t// Splice the value out of the array\n\t\t\t\tif ($window.confirm('Are you sure you want to remove \"' + key + '\"?')) {\n\t\t\t\t\tdelete items[key];\n\t\t\t\t\t$scope.onEdit();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$scope.add = function(items, key, value) {\n\t\t\t\titems[key] = value;\n\t\t\t\t// TODO: Handle update failures\n\t\t\t\t$scope.onEdit();\n\t\t\t\t// Switch out of edit mode\n\t\t\t\t$scope.unedit();\n\t\t\t}\n\t\t},\n\t\t// Use an isolated scope\n\t\tscope: {\n\t\t\tvalues: '=',\n\t\t\tkeyType: '=',\n\t\t\tvalueType: '=',\n\t\t\t// Optional step attribute for number fields\n\t\t\tstep: '=',\n\t\t\tonEdit: '&onEdit'\n\t\t},\n\t\ttemplateUrl: editMapInPlaceTemplate,\n\t\ttransclude: true\n\t};\n})\n\n/**\n * Generic list controller\n */\n.controller('ListCtrl', ['$scope', '$location', '$window', '$log', '$filter', function($scope, $location, $window, $log, $filter) {\n\t$log.debug('ListCtrl initializing...');\n\n\t$scope.defaults = {\n\t\t_s: '',\n\t\tsearchClauses: [],\n\t\tlimit: 20,\n\t\toffset: 0,\n\t\torderBy: '',\n\t\torder: 'asc'\n\t}\n\n\tvar initialLimit = typeof $location.search().limit === 'undefined' ? $scope.defaults.limit : (Number($location.search().limit) > 0 ? Number($location.search().limit) : $scope.defaults.limit);\n\n\t// Restore any query parameters that you can from the \n\t// query string, blank out the rest\n\t$scope.query = {\n\t\tlastOffset: 0,\n\t\tmaxOffset: 0,\n\n\t\tsearchParam: typeof $location.search()._s === 'undefined' ? $scope.defaults._s : $location.search()._s,\n\t\tsearchClauses: typeof $location.search()._s === 'undefined' ? $scope.defaults.searchClauses : fromFiql($location.search()._s),\n\t\tlimit: initialLimit,\n\t\tnewLimit: initialLimit,\n\t\toffset: typeof $location.search().offset === 'undefined' ? $scope.defaults.offset : (Number($location.search().offset) > 0 ? normalizeOffset(Number($location.search().offset), Number.MAX_VALUE, initialLimit) : $scope.defaults.offset),\n\n\t\t// TODO: Validate that the orderBy is in a list of supported properties\n\t\torderBy: typeof $location.search().orderBy === 'undefined' ? $scope.defaults.orderBy : $location.search().orderBy,\n\t\torder: typeof $location.search().order === 'undefined' ? $scope.defaults.order : ($location.search().order === 'asc' ? 'asc' : 'desc')\n\t};\n\n\t// Sync the query hash with the $location query string\n\t$scope.$watch('query', function() {\n\t\tvar queryParams = angular.copy($scope.query);\n\n\t\t// Delete derived values that we don't need in the query string\n\t\tdelete queryParams.searchClauses;\n\t\tdelete queryParams.newLimit;\n\t\tdelete queryParams.lastOffset;\n\t\tdelete queryParams.maxOffset;\n\n\t\t// Rename searchParam to _s\n\t\tqueryParams._s = (queryParams.searchParam === '' ? null : queryParams.searchParam);\n\t\tdelete queryParams.searchParam;\n\n\t\t// Delete any parameters that have default or blank values\n\t\tif (queryParams.limit === $scope.defaults.limit || queryParams.limit === '') { delete queryParams.limit; }\n\t\tif (queryParams.offset === $scope.defaults.offset || queryParams.offset === '') { delete queryParams.offset; }\n\t\tif (queryParams.orderBy === $scope.defaults.orderBy || queryParams.orderBy === '') { delete queryParams.orderBy; }\n\t\tif (queryParams.order === $scope.defaults.order || queryParams.order === '') { delete queryParams.order; }\n\t\tif (queryParams._s === $scope.defaults._s || queryParams._s === '') { delete queryParams._s; }\n\n\t\t$location.search(queryParams);\n\t}, \n\ttrue // Use object equality because the reference doesn't change\n\t);\n\n\t// Add the search clause to the list of clauses\n\t$scope.addSearchClause = function(clause) {\n\t\tif(angular.isDate(clause.value)) {\n\t\t\t// Returns a value in yyyy-MM-ddTHH:mm:ss.sssZ format\n\t\t\t// Unfortunately, I don't think CXF will like this because\n\t\t\t// it includes the millisecond portion of the date.\n\t\t\t//clause.value = new Date(clause.value).toISOString();\n\n\t\t\tclause.value = $filter('date')(new Date(clause.value), ISO_8601_DATE_FORMAT);\n\t\t}\n\n\t\t// Make sure the clause isn't already in the list of search clauses\n\t\tif ($scope.getSearchClause(clause)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO: Add validation?\n\t\t$scope.query.searchClauses.push(angular.copy(clause));\n\t\t$scope.query.searchParam = toFiql($scope.query.searchClauses);\n\t\t$scope.refresh();\n\t}\n\n\t$scope.getSearchClause = function(clause) {\n\t\tfor (var i = 0; i < $scope.query.searchClauses.length; i++) {\n\t\t\tif ($scope.clauseEquals(clause, $scope.query.searchClauses[i])) {\n\t\t\t\treturn $scope.query.searchClauses[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t$scope.clauseEquals = function(a, b) {\n\t\treturn a.property === b.property &&\n\t\t\ta.operator === b.operator &&\n\t\t\ta.value === b.value;\n\t}\n\n\t// Convert an epoch timestamp into String format before adding the search clause\n\t$scope.addEpochTimestampSearchClause = function(clause) {\n\t\tclause.value = $filter('date')(clause.value, ISO_8601_DATE_FORMAT);\n\t\t$scope.addSearchClause(clause);\n\t}\n\n\t// Remove a search clause from the list of clauses\n\t$scope.removeSearchClause = function(clause) {\n\t\t// TODO: Add validation?\n\t\t$scope.query.searchClauses.splice($scope.query.searchClauses.indexOf(clause), 1);\n\t\t$scope.query.searchParam = toFiql($scope.query.searchClauses);\n\t\t$scope.refresh();\n\t}\n\n\t$scope.removeSearchClauses = function(clauses) {\n\t\tfor (var i = 0; i < clauses.length; i++) {\n\t\t\tvar index = $scope.query.searchClauses.indexOf(clauses[i]);\n\t\t\tif (index >= 0) {\n\t\t\t\t$scope.query.searchClauses.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\t$scope.query.searchParam = toFiql($scope.query.searchClauses);\n\t\t$scope.refresh();\n\t}\n\n\t// Replace a search clause with a new clause\n\t$scope.replaceSearchClause = function(oldClause, newClause) {\n\t\tif(angular.isDate(newClause.value)) {\n\t\t\t// Returns a value in yyyy-MM-ddTHH:mm:ss.sssZ format\n\t\t\t// Unfortunately, I don't think CXF will like this because\n\t\t\t// it includes the millisecond portion of the date.\n\t\t\t//clause.value = new Date(clause.value).toISOString();\n\n\t\t\tnewClause.value = $filter('date')(new Date(newClause.value), ISO_8601_DATE_FORMAT);\n\t\t}\n\n\t\t// TODO: Add validation?\n\t\tvar scopeOldClause = $scope.getSearchClause(oldClause);\n\t\tvar scopeNewClause = $scope.getSearchClause(newClause);\n\t\tif (!scopeOldClause) {\n\t\t\tif (!scopeNewClause) {\n\t\t\t\t// If the old clause is not present, simply add the new clause\n\t\t\t\t$scope.addSearchClause(newClause);\n\t\t\t} else {\n\t\t\t\t// If the old clause is not present and the new clause is already\n\t\t\t\t// present, then do nothing\n\t\t\t}\n\t\t} else {\n\t\t\tif (!scopeNewClause) {\n\t\t\t\t// If the old clause is present and the new clause is not, replace\n\t\t\t\t// the values inside the old clause and then refresh\n\t\t\t\tscopeOldClause.property = newClause.property;\n\t\t\t\tscopeOldClause.operator = newClause.operator;\n\t\t\t\tscopeOldClause.value = newClause.value;\n\n\t\t\t\t$scope.query.searchParam = toFiql($scope.query.searchClauses);\n\t\t\t\t$scope.refresh();\n\t\t\t} else {\n\t\t\t\t// If the old clause is present and the new clause is present,\n\t\t\t\t// then just remove the old clause (as if it had been replaced by\n\t\t\t\t// the already-existing new clause)\n\t\t\t\t$scope.removeSearchClause(oldClause);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Clear the current search\n\t$scope.clearSearch = function() {\n\t\tif ($scope.query.searchClauses.length > 0) {\n\t\t\t$scope.query.searchClauses = [];\n\t\t\t$scope.query.searchParam = '';\n\t\t\t$scope.refresh();\n\t\t}\n\t}\n\n\t// Change the sorting of the table\n\t$scope.changeOrderBy = function(property) {\n\t\tif ($scope.query.orderBy === property) {\n\t\t\t// TODO: Figure out if we should reset limit/offset here also\n\t\t\t// If the property is already selected then reverse the sorting\n\t\t\t$scope.query.order = ($scope.query.order === 'asc' ? 'desc' : 'asc');\n\t\t} else {\n\t\t\t// TODO: Figure out if we should reset limit/offset here also\n\t\t\t$scope.query.orderBy = property;\n\t\t\t$scope.query.order = $scope.defaults.order;\n\t\t}\n\t\t$scope.refresh();\n\t}\n\n\t$scope.setOffset = function(offset) {\n\t\tconst o = normalizeOffset(offset, $scope.query.maxOffset, $scope.query.limit);\n\n\t\tif ($scope.query.offset !== o) {\n\t\t\t$scope.query.offset = o;\n\t\t\t$scope.refresh();\n\t\t}\n\t}\n\n\t$scope.setLimit = function(limit) {\n\t\tif (limit < 1) {\n\t\t\t$scope.query.newLimit = $scope.query.limit;\n\t\t\t// TODO: Throw a validation error\n\t\t\treturn;\n\t\t}\n\t\tif ($scope.query.limit !== limit) {\n\t\t\t$scope.query.limit = limit;\n\t\t\t$scope.query.offset = normalizeOffset($scope.query.offset, $scope.query.maxOffset, $scope.query.limit);\n\t\t\t$scope.refresh();\n\t\t}\n\t}\n\n\t// Override this to implement updates to an object\n\t$scope.refresh = function() {\n\t\t$log.warn('You need to override $scope.$parent.refresh() in your controller');\n\t}\n\n\t// Override this to implement updates to an object\n\t$scope.update = function() {\n\t\t$log.warn('You need to override $scope.$parent.update() in your controller');\n\t}\n\n\t// Override this to implement deletions\n\t$scope.deleteItem = function(item) {\n\t\t$log.warn('You need to override $scope.$parent.deleteItem() in your controller');\n\t}\n\n\t$log.debug('ListCtrl initialized');\n}])\n\n.run(['$rootScope', '$log', function($rootScope, $log) {\n\t$log.debug('Finished initializing ' + MODULE_NAME);\n}])\n\n;\n\n/*\nangular.element(document).ready(function() {\n\tconsole.log('Bootstrapping ' + MODULE_NAME);\n\tangular.bootstrap(document, [MODULE_NAME]);\n});\n*/\n\nmodule.exports = {\n\tappendTransform: appendTransform,\n\ttoFiql: toFiql,\n\tfromFiql: fromFiql,\n\tparseContentRange: parseContentRange,\n\tescapeSearchValue: escapeSearchValue,\n\tnormalizeOffset: normalizeOffset\n};\n","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/onms-elementList/templates/angular-onms-elementList-editInPlace.html';\nvar html = \"<form class=form-inline ng-submit=submit() style=margin:0> <input ng-show=editing ng-keyup=onKeyup($event) type={{valueType}} step={{step}} ng-model=value /> <span style=line-height:24px ng-hide=editing ng-click=edit()>{{value}}&nbsp;</span> <a href style=text-decoration:none ng-click=edit() ng-hide=editing><i class=\\\"fa fa-edit fa-lg\\\"/></a> <a href style=text-decoration:none ng-click=submit() ng-show=editing><i class=\\\"fa fa-check fa-lg\\\"/></a> <a href style=text-decoration:none ng-click=cancel() ng-show=editing><i class=\\\"fa fa-close fa-lg\\\"/></a> <span ng-transclude/> </form> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;"],"sourceRoot":""}