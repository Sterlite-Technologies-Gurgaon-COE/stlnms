{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///./src/main/assets/js/vendor/bootstrap-js.js","webpack:///./src/main/assets/js/apps/onms-elementList/templates/angular-onms-elementList-editListInPlace.html","webpack:///./src/main/assets/js/apps/onms-elementList/templates/angular-onms-elementList-editMapInPlace.html","webpack:///./src/main/assets/js/lib/onms-http/403-permission-denied.html","webpack:///./src/main/assets/js/lib/onms-pagination/index.js","webpack:///./src/main/assets/js/lib/onms-pagination/pagination-toolbar.html","webpack:///./src/main/assets/modules/lib/util/index.js","webpack:///./src/main/assets/js/apps/onms-classifications/views/modals/popover.html","webpack:///./src/main/assets/js/apps/search/index.js","webpack:///./src/main/assets/js/apps/search/template.ksc.html","webpack:///./src/main/assets/js/vendor/angular-js.js","webpack:///./src/main/assets/js/apps/search/template.nodes.html","webpack:///./src/main/assets/js/apps/onms-central-search/index.js","webpack:///./src/main/assets/js/apps/onms-central-search/quicksearch.html","webpack:///./src/main/assets/js/apps/onms-default-apps/index.js","webpack:///./src/main/assets/js/vendor/jquery-js.js","webpack:///./src/main/assets/js/apps/onms-classifications/index.js","webpack:///./src/main/assets/js/apps/onms-classifications/views/index.html","webpack:///./src/main/assets/js/apps/onms-classifications/views/config.html","webpack:///./src/main/assets/js/apps/onms-classifications/views/group.html","webpack:///./src/main/assets/js/apps/onms-classifications/views/modals/new-rule-modal.html","webpack:///./src/main/assets/js/apps/onms-classifications/views/modals/new-group-modal.html","webpack:///./src/main/assets/js/apps/onms-classifications/views/modals/import-modal.html","webpack:///./src/main/assets/js/apps/onms-classifications/views/modals/export-modal.html","webpack:///./src/main/assets/js/lib/onms-http/index.js","webpack:///./src/main/assets/js/apps/onms-elementList/lib/elementList.js","webpack:///./src/main/assets/js/apps/onms-elementList/templates/angular-onms-elementList-editInPlace.html"],"names":["root","factory","exports","module","define","amd","a","i","window","console","log","jQuery","require","path","angular","run","c","put","paginationTemplate","directive","restrict","scope","model","position","onChangeCallback","link","element","attrs","undefined","Error","page","totalItems","limit","currentPage","onChange","transclude","templateUrl","Util","base","document","getElementsByTagName","href","url","location","getBaseHref","booleanValue","elementName","checkboxes","getElementsByName","index","hasOwnProperty","checked","kscTemplate","nodesTemplate","controller","$scope","$window","$http","getNodes","criteria","method","params","label","comparator","then","response","data","node","goToChooseResources","id","$filter","getKscReports","kscReport","goToKscReport","ksc","globalErrorHandling","errorResponse","error","quickSearchTemplate","$resource","isArray","cancellable","SearchResource","$timeout","$document","KeyCodes","Types","query","results","performSearchExecuted","showLoadingIndicator","showLoadingIndicatorDelay","performSearchDelay","performSearchPromise","performSearchHandle","showLoadingIndicatorPromise","shiftLastPressed","selectedIndex","event","isChild","$","has","target","length","isSelf","is","resetQuery","cancelRequest","e","keyCode","Date","focus","select","getElementById","navigateSearchResult","parentComponent","parentHeight","clientHeight","resultHeight","resultOffset","offsetTop","scrollTop","type","triggerHandler","click","selected","$cancelRequest","cancel","selectIndex","onQueryChange","eachResult","push","context","name","count","more","item","showMoreElement","loadMore","this","endIndex","searchResult","status","elementList","handleErrorResponse","message","indexTemplate","configTemplate","groupTemplate","newRuleModalTemplate","newGroupModalTemplate","importModalTemplate","exportModalTemplate","confirmTopoverTemplate","confirmationPopoverDefaults","config","$locationProvider","hashPrefix","html5Mode","$stateProvider","$urlRouterProvider","state","otherwise","input","charAt","toUpperCase","substr","toLowerCase","$state","ClassificationService","ClassificationGroupService","ProtocolService","groups","classificationRequest","classificationResponse","isClassificationCollapsed","classify","result","classifyError","classification","refreshTabs","navigateToFirstGroup","orderBy","group","enabled","l","r","go","loadProtocols","headers","protocols","fullyDefined","protocol","dstPort","dstAddress","srcPort","srcAddress","exporterAddress","toggleClassificationMode","classificationMode","$rootScope","$uibModal","$location","$log","openModal","open","backdrop","size","resolve","groupsTotalAmount","updateGroup","$update","refresh","deleteGroup","$delete","editGroup","closed","addGroup","parameters","offset","order","contentRange","parseContentRange","total","sortableGroups","start","ui","stop","oldIndex","newIndex","previousGroup","update","items","$stateParams","ClassificationRuleService","rules","search","splitRule","entry","replaceAll","findGroup","groupId","get","showExportRulesDialog","editPositionOfRuleEnabled","readOnly","sortable","groupFilter","refreshGroup","refreshAll","$promise","changeOrderBy","column","deleteRule","rule","deleteAllRules","delete","editRule","addRule","sortableRules","previousRule","importRules","clearSearch","$uibModalInstance","setFile","$apply","fileToUpload","files","openFileDialogue","resetInput","failedRows","containsHeader","deleteExistingRules","pagination","navigateWithinErrors","Math","min","errors","uploadFile","reader","FileReader","onload","success","close","errorKeys","rowIndex","readAsText","export","requestedFileName","exportGroup","string","currentSelection","selectedProtocols","buttonName","maxPosition","ruleCount","selectableGroups","save","closeCallback","errorCallback","keyword","convertProtocolsArrayToStringArray","dismiss","insertProtocol","removeProtocol","permissionDeniedTemplate","$q","responseError","rejection","$emit","reject","$httpProvider","defaults","common","interceptors","$on","baseTags","warn","reload","keyboard","MODULE_NAME","ISO_8601_DATE_FORMAT","ISO_8601_DATE_FORMAT_WITHOUT_MILLIS","escapeSearchValue","value","replace","toFiql","clauses","first","fiql","property","operator","fromFiql","statements","split","segments","normalizeOffset","maxOffset","lastPageOffset","newOffset","floor","editInPlaceTemplate","editListInPlaceTemplate","editMapInPlaceTemplate","fuzzy","rewriteLinks","editing","originalValue","copy","edit","unedit","onKeyup","$event","submit","onSubmit","valueType","step","newValue","add","confirmAndRemove","confirm","onEdit","values","newKey","key","keyType","debug","_s","searchClauses","initialLimit","Number","lastOffset","searchParam","newLimit","MAX_VALUE","$watch","queryParams","addSearchClause","clause","isDate","getSearchClause","clauseEquals","b","addEpochTimestampSearchClause","removeSearchClause","removeSearchClauses","replaceSearchClause","oldClause","newClause","scopeOldClause","scopeNewClause","setOffset","o","setLimit","deleteItem","appendTransform","defaultTransform","transform","t","end","pattern"],"mappings":"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","file":"onms-classifications.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn ","console.log('init: bootstrap-js'); // eslint-disable-line no-console\n\nconst jQuery = require('vendor/jquery-js');\nrequire('bootstrap/dist/js/bootstrap');\n\nmodule.exports = jQuery;\n","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/onms-elementList/templates/angular-onms-elementList-editListInPlace.html';\nvar html = \" <span ng-repeat=\\\"value in values\\\"> <button class=\\\"btn btn-sm btn-secondary\\\" ng-click=\\\"confirmAndRemove(values, value)\\\" style=margin-bottom:3px;margin-right:3px> {{value}}&nbsp;<i class=\\\"fa fa-close\\\"/> </button> </span> <span style=line-height:24px ng-hide=editing> <a href style=text-decoration:none ng-click=edit()><i class=\\\"fa fa-edit fa-lg\\\"/></a>&nbsp; </span> <span ng-show=editing class=text-nowrap> <input type={{valueType}} ng-keyup=onKeyup($event) ng-model=newValue /> <a href style=text-decoration:none ng-click=\\\"add(values, newValue)\\\"><i class=\\\"fa fa-plus fa-lg\\\"/></a> <a href style=text-decoration:none ng-click=unedit()><i class=\\\"fa fa-close fa-lg\\\"/></a> </span> <span ng-transclude/> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/onms-elementList/templates/angular-onms-elementList-editMapInPlace.html';\nvar html = \" <span ng-repeat=\\\"(key,value) in values\\\"> <button class=\\\"btn btn-sm btn-secondary\\\" ng-click=\\\"confirmAndRemove(values, key)\\\" style=margin-bottom:3px;margin-right:3px> <b>{{key}}:</b> {{value}}&nbsp;<i class=\\\"fa fa-close\\\"/> </button> </span> <span style=line-height:24px ng-hide=editing> <a href style=text-decoration:none ng-click=edit()><i class=\\\"fa fa-edit fa-lg\\\"/></a>&nbsp; </span> <span ng-show=editing class=text-nowrap> <input type={{keyType}} ng-keyup=onKeyup($event) ng-model=newKey /> <input type={{valueType}} ng-keyup=onKeyup($event) ng-model=newValue /> <a href style=text-decoration:none ng-click=\\\"add(values, newKey, newValue)\\\"><i class=\\\"fa fa-plus fa-lg\\\"/></a> <a href style=text-decoration:none ng-click=unedit()><i class=\\\"fa fa-close fa-lg\\\"/></a> </span> <span ng-transclude/> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/lib/onms-http/403-permission-denied.html';\nvar html = \"<div class=modal-header> <h3><i class=\\\"fa fa-exclamation-triangle text-warning\\\"></i> Permission Denied</h3> </div> <div class=modal-body> <h5> You are not allowed to perform the requested action. </h5> <p class=text-muted> This is not supposed to happen. Please reload the page and contact your administrator if this occurs more often. </p> </div> <div class=modal-footer> <button class=\\\"btn btn-primary\\\" ng-click=reload()>Reload</button> </div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","const angular = require('vendor/angular-js');\nconst paginationTemplate = require('./pagination-toolbar.html');\n\nconst MODULE_NAME = 'onms.pagination';\n\nangular.module(MODULE_NAME, [ 'ui.bootstrap' ])\n    .directive('pagination', function() {\n        return {\n            restrict: 'E',\n            scope: {\n                model: '=model',\n                position: '@position',\n                onChangeCallback: '=onChange'\n            },\n            link: function(scope, element, attrs) {\n                if (scope.model === undefined) { throw new Error('No model defined.'); }\n                if (scope.model.page === undefined) { throw new Error('No attribute model.page defined'); }\n                if (scope.model.totalItems === undefined) { throw new Error('No attribute model.totalItems defined'); }\n                if (scope.model.limit === undefined) { throw new Error('No attribute model.limit defined'); }\n\n                var currentPage = scope.model.page;\n                scope.onChange = function() {\n                    if (currentPage !== scope.model.page) {\n                        currentPage = scope.model.page;\n                        if (scope.onChangeCallback) {\n                            scope.onChangeCallback();\n                        }\n                    }\n                };\n            },\n            transclude: true,\n            templateUrl: paginationTemplate\n        }\n    });\n","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/lib/onms-pagination/pagination-toolbar.html';\nvar html = \"<div> <div ng-transclude ng-if=\\\"position === 'bottom'\\\"></div> <div class=row> <div class=\\\"col-md-4 col-lg-6 col-sm-12\\\" ng-show=\\\"(model.totalItems / model.limit) > 1\\\"> <div style=margin:0 uib-pagination ng-model=model.page total-items=model.totalItems items-per-page=model.limit rotate=true boundary-links=true max-size=5 boundary-link-numbers=true ng-change=onChange()> </div> </div> <div class=\\\"col-md-8 col-lg-6 col-sm-12 mt-4\\\"> <pre class=pull-right ng-show=\\\"model.totalItems == 0\\\">No items found.</pre> <pre class=pull-right ng-show=\\\"model.totalItems > 0\\\">{{model.totalItems / model.page === 1\\n            ? \\\"Item \\\" + (model.offset + 1)\\n            : \\\"Items \\\" + ((model.page - 1) * model.limit + 1) + \\\" - \\\" + (model.page * model.limit > model.totalItems ? model.totalItems : model.page * model.limit)}} ({{model.totalItems}} total)</pre> </div> </div> <div ng-transclude ng-if=\\\"position === 'top' || position === undefined\\\"></div> </div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","export default class Util {\n\tstatic getBaseHref() {\n\t\tconst base = document.getElementsByTagName('base')[0];\n\t\tif (base) {\n\t\t\treturn base.href;\n\t\t}\n\t\treturn '';\n\t}\n\tstatic setLocation(url) {\n\t\tif (window && window.location) {\n\t\t\twindow.location.href = Util.getBaseHref() + url;\n\t\t}\n\t}\n\tstatic toggle(booleanValue, elementName) {\n\t\tvar checkboxes = document.getElementsByName(elementName);\n\t\tfor (var index in checkboxes) {\n\t\t\tif (checkboxes.hasOwnProperty(index)) {\n\t\t\t\tcheckboxes[index].checked = booleanValue;\n\t\t\t}\n\t\t}\n\t}\n}","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/onms-classifications/views/modals/popover.html';\nvar html = \"<div class=\\\"popover px-2 py-2\\\" ng-class=\\\"[vm.$attrs.placement || vm.defaults.placement, 'bs-popover-' + (vm.$attrs.placement || vm.defaults.placement), vm.$attrs.popoverClass || vm.defaults.popoverClass, {fade: vm.animation}]\\\"> <div class=\\\"popover-arrow arrow\\\" style=top:50px></div> <h3 class=popover-title ng-bind-html=vm.$attrs.title></h3> <div class=popover-content> <p ng-bind-html=vm.$attrs.message></p> <div class=row> <div class=col-sm-6 ng-if=\\\"!vm.$attrs.hideConfirmButton && !vm.defaults.hideConfirmButton\\\" ng-class=\\\"{'col-sm-offset-3': vm.$attrs.hideCancelButton || vm.defaults.hideCancelButton}\\\"> <button class=\\\"btn btn-block confirm-button\\\" ng-class=\\\"'btn-' + (vm.$attrs.confirmButtonType || vm.defaults.confirmButtonType)\\\" ng-click=\\\"vm.onConfirm(); vm.hidePopover()\\\" ng-bind-html=\\\"vm.$attrs.confirmText || vm.defaults.confirmText\\\"> </button> </div> <div class=col-sm-6 ng-if=\\\"!vm.$attrs.hideCancelButton && !vm.defaults.hideCancelButton\\\" ng-class=\\\"{'col-sm-offset-3': vm.$attrs.hideConfirmButton || vm.defaults.hideConfirmButton}\\\"> <button class=\\\"btn btn-block cancel-button\\\" ng-class=\\\"'btn-' + (vm.$attrs.cancelButtonType || vm.defaults.cancelButtonType)\\\" ng-click=\\\"vm.onCancel(); vm.hidePopover()\\\" ng-bind-html=\\\"vm.$attrs.cancelText || vm.defaults.cancelText\\\"> </button> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","/**\n* @author Alejandro Galue <agalue@opennms.org>\n* @copyright 2016-2017 The OpenNMS Group, Inc.\n*/\n\n'use strict';\n\nconst angular = require('vendor/angular-js');\nrequire('lib/onms-http');\n\nconst kscTemplate = require('./template.ksc.html');\nconst nodesTemplate = require('./template.nodes.html');\n\nimport Util from 'lib/util';\n\nangular.module('onms-search', [\n  'onms.http',\n  'ui.bootstrap'\n])\n\n.directive('onmsSearchNodes', function() {\n  return {\n    restrict: 'E',\n    transclude: true,\n    templateUrl: nodesTemplate,\n    controller: 'NodeSearchCtrl'\n  };\n})\n\n.directive('onmsSearchKsc', function() {\n  return {\n    restrict: 'E',\n    transclude: true,\n    templateUrl: kscTemplate,\n    controller: 'KscSearchCtrl'\n  };\n})\n\n.controller('NodeSearchCtrl', ['$scope', '$window', '$http', function($scope, $window, $http) {\n\n  $scope.getNodes = function(criteria) {\n    return $http({\n      url: 'rest/nodes',\n      method: 'GET',\n      params: { label: criteria, comparator: 'contains' }\n    }).then(function(response) {\n      return response.data.node;\n    });\n  };\n\n  $scope.goToChooseResources = function(node) {\n    $window.location.href = Util.getBaseHref() + 'graph/chooseresource.jsp?node=' + node.id;\n  }\n\n}])\n\n.controller('KscSearchCtrl', ['$scope', '$window', '$http', '$filter', function($scope, $window, $http, $filter) {\n\n  $scope.getKscReports = function(criteria) {\n    return $http({\n      url: 'rest/ksc',\n      method: 'GET'\n    }).then(function(response) {\n       return $filter('filter')(response.data.kscReport, criteria);\n    });\n  };\n\n  $scope.goToKscReport = function(ksc) {\n    $window.location.href = Util.getBaseHref() + 'KSC/customView.htm?type=custom&report=' + ksc.id;\n  }\n\n}]);","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/search/template.ksc.html';\nvar html = \"<div class=form-group> <div class=input-group> <input type=text class=form-control ng-model=asyncKsc placeholder=\\\"Type the KSC report name\\\" uib-typeahead=\\\"ksc as ksc.label for ksc in getKscReports($viewValue)\\\" typeahead-editable=false typeahead-loading=kscLoadingNodes typeahead-no-results=kscNoResults typeahead-min-length=1 typeahead-on-select=goToKscReport($item) /> <div class=input-group-append> <span class=input-group-text><i class=\\\"fa fa-search\\\"></i></span> </div> </div> <i ng-show=kscLoadingNodes class=\\\"fa fa-refresh\\\"></i> <p class=\\\"form-text text-muted\\\" ng-show=kscNoResults> <i class=\\\"fa fa-remove\\\"></i> No Results Found </p> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","/* Angular Core */\nconst angular = require('angular');\nrequire('angular-animate');\nrequire('angular-cookies');\nrequire('angular-route');\nrequire('angular-resource');\nrequire('angular-sanitize');\n\n/* 3rd-Party Modules */\nrequire('angular-growl-v2');\nrequire('angular-loading-bar');\n\nrequire('angular-growl-v2/build/angular-growl.css');\nrequire('angular-loading-bar/build/loading-bar.css');\n\n/* Bootstrap UI */\nrequire('vendor/bootstrap-js');\nrequire('angular-bootstrap-checkbox');\nrequire('ui-bootstrap4'); // angular-ui-boostrap for bootstrap 4\n\nconsole.log('init: angular-js'); // eslint-disable-line no-console\n\nmodule.exports = window['angular'] = angular;","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/search/template.nodes.html';\nvar html = \"<div class=form-group> <div class=input-group> <input type=text class=form-control ng-model=asyncNode placeholder=\\\"Type the node label\\\" uib-typeahead=\\\"node as node.label for node in getNodes($viewValue)\\\" typeahead-editable=false typeahead-loading=nodeLoadingNodes typeahead-no-results=nodeNoResults typeahead-min-length=1 typeahead-on-select=goToChooseResources($item) /> <div class=input-group-append> <span class=input-group-text><i class=\\\"fa fa-search\\\"></i></span> </div> </div> <i ng-show=nodeLoadingNodes class=\\\"fa fa-refresh\\\"></i> <p class=\\\"form-text text-muted\\\" ng-show=nodeNoResults> <i class=\\\"fa fa-remove\\\"></i> No Results Found </p> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","const angular = require('vendor/angular-js');\nrequire('../../lib/onms-http');\nrequire('angular-bootstrap-toggle/dist/angular-bootstrap-toggle');\nrequire('angular-bootstrap-toggle/dist/angular-bootstrap-toggle.css');\nrequire('angular-ui-router');\n\nconst quickSearchTemplate  = require('./quicksearch.html');\n\nconst globalErrorHandling = function(scope, errorResponse) {\n    if (errorResponse.data) {\n        scope.error = errorResponse.data;\n    } else {\n        scope.error = \"An unexpected error occurred while handling the request\";\n    }\n};\n\n(function() {\n    'use strict';\n\n    var MODULE_NAME = 'onms.central.search';\n\n    angular.module(MODULE_NAME, [\n        'angular-loading-bar',\n        'ngResource',\n        'ui.router',\n        'onms.http',\n    ])\n        .directive('onmsCentralSearch', function() {\n            return {\n                restrict: 'E',\n                transclude: false,\n                templateUrl: quickSearchTemplate,\n                controller: 'QuickSearchController'\n            };\n        })\n        .factory('SearchResource', function($resource) {\n            return $resource('api/v2/search', {}, {\n                'query':      { method: 'GET', isArray: true, cancellable: true },\n            });\n        })\n        .controller('QuickSearchController', ['$scope', 'SearchResource', '$timeout', '$document', function($scope, SearchResource, $timeout, $document) {\n            var KeyCodes = {\n                ENTER: 13,\n                SHIFT: 16,\n                ESC: 27,\n                KEY_LEFT: 37,\n                KEY_UP: 38,\n                KEY_RIGHT: 39,\n                KEY_DOWN: 40,\n            };\n\n            var Types = {\n                Group: 'Group',\n                Item: 'Item',\n                More: 'More'\n            };\n\n            $scope.query = '';\n            $scope.results = {};\n            $scope.performSearchExecuted = false;\n            $scope.showLoadingIndicator = false;\n            $scope.showLoadingIndicatorDelay = 250;\n            $scope.performSearchDelay = 500; // in ms\n            $scope.performSearchPromise = undefined;\n            $scope.performSearchHandle = undefined;\n            $scope.showLoadingIndicatorPromise = undefined;\n            $scope.shiftLastPressed = undefined;\n            $scope.selectedIndex = 0;\n\n            $document.bind('mousedown', function(event) {\n                var isChild = $('#onms-search-form').has(event.target).length > 0;\n                var isSelf = $('#onms-search-form').is(event.target);\n                var isInside = isChild || isSelf;\n                if (!isInside) {\n                    $timeout(function() {\n                        $scope.resetQuery();\n                        $scope.cancelRequest();\n                    });\n                }\n            });\n\n            $document.bind('keyup', function(e) {\n                // Search Focus Field\n                $timeout(function() {\n                    if (e.keyCode === KeyCodes.SHIFT && new Date() - $scope.shiftLastPressed <= 350) {\n                        angular.element('#onms-search-query').focus();\n                        angular.element('#onms-search-query').select();\n                        $scope.shiftLastPressed = undefined;\n                    } else if(e.keyCode === KeyCodes.SHIFT) {\n                        $scope.shiftLastPressed = new Date();\n                    }\n\n                    // Reset Search\n                    if (e.keyCode === KeyCodes.ESC) {\n                        $scope.resetQuery();\n                        $scope.cancelRequest();\n                    }\n                });\n            });\n\n            $document.bind('keydown', function(e) {\n                $timeout(function() {\n                    if ($scope.results.length > 0) {\n                        var element = document.getElementById('onms-search-result-item-' + $scope.selectedIndex);\n                        if (e.keyCode === KeyCodes.KEY_UP || e.keyCode === KeyCodes.KEY_DOWN) {\n                            $scope.navigateSearchResult(e.keyCode);\n\n                            // Ideally we would use scrollToView(), but that will also scroll the body, which\n                            // results in the header scrolling down slightly, which looks weird when using the search\n                            // So instead scrolling is implemented manually\n                            var parentComponent = document.getElementById('onms-search-result');\n                            var parentHeight = parentComponent.clientHeight;\n                            var resultHeight = element.clientHeight;\n                            var resultOffset = element.offsetTop;\n                            var padding = 25;\n\n                            // Scroll down\n                            if (resultOffset + resultHeight + padding >= parentHeight + parentComponent.scrollTop) {\n                                parentComponent.scrollTop = resultOffset;\n                            }\n                            // Scroll up\n                            if (parentComponent.scrollTop !== 0\n                                && parentComponent.scrollTop > resultOffset - resultHeight) {\n                                parentComponent.scrollTop = resultOffset - resultHeight;\n                            }\n                        }\n                        if (e.keyCode === KeyCodes.ENTER) {\n                            if ($scope.results[$scope.selectedIndex].type === Types.More) {\n                                // Ensure next action is run in angular context\n                                // Do not use angular.$apply here, as it may fail on angular sites,\n                                // such as the requisition ui\n                                $timeout(function() {\n                                    angular.element(element).triggerHandler('click');\n                                }, 0);\n                            } else {\n                                $scope.resetQuery();\n                                $scope.cancelRequest();\n                                element.click();\n                            }\n                        }\n                    }\n                });\n            });\n\n            $scope.navigateSearchResult = function(keyCode) {\n                $scope.results[$scope.selectedIndex].selected = false;\n                switch(keyCode) {\n                    case KeyCodes.KEY_UP:\n                        $scope.selectedIndex--;\n                        break;\n                    case KeyCodes.KEY_DOWN:\n                        $scope.selectedIndex++;\n                        break;\n                    default:\n                        break;\n                }\n                if ($scope.selectedIndex < 1) {\n                    $scope.selectedIndex = 1;\n                }\n                if ($scope.selectedIndex >= $scope.results.length) {\n                    $scope.selectedIndex = $scope.results.length - 1;\n                }\n                if ($scope.results[$scope.selectedIndex].type === Types.Group) {\n                    $scope.navigateSearchResult(keyCode); // Skip group element\n                } else {\n                    $scope.results[$scope.selectedIndex].selected = true;\n                }\n            };\n\n            $scope.resetQuery = function() {\n                $scope.query = '';\n                $scope.results = [];\n                $scope.performSearchExecuted = false;\n                if ($scope.performSearchHandle) {\n                    $scope.performSearchHandle.$cancelRequest();\n                }\n            };\n\n            $scope.cancelRequest = function() {\n                if ($scope.performSearchHandle) {\n                    $scope.performSearchHandle.$cancelRequest();\n                }\n                $scope.showLoadingIndicator = false;\n                $timeout.cancel($scope.showLoadingIndicatorPromise);\n            };\n\n            // Ensure there is no difference between selected and mouseover\n            $scope.select = function(index) {\n                var selectIndex = index || 1;\n                if ($scope.selectedIndex >= 1) {\n                    $scope.results[$scope.selectedIndex].selected = false;\n                }\n                $scope.selectedIndex = selectIndex;\n                $scope.results[$scope.selectedIndex].selected = true;\n            };\n\n            $scope.onQueryChange = function() {\n                if ($scope.query.length == 0) {\n                    $scope.resetQuery();\n                    return;\n                }\n                if ($scope.query.length < 3) {\n                    return;\n                }\n\n                // Stop any previous loading\n                $timeout.cancel($scope.performSearchPromise);\n                $scope.results = [];\n                $scope.performSearchExecuted = false;\n\n                // Start timeout before actually searching, this will allow for not invoking when the user\n                // is still typing. Fiddle with $scope.loadingDelay to make it resolve faster\n                $scope.performSearchPromise = $timeout(function() {\n                    // Stop any previously started delay\n                    $timeout.cancel($scope.showLoadingIndicatorPromise);\n\n                    // Kick of loading indicator\n                    $scope.showLoadingIndicatorPromise = $timeout(function() {\n                        $scope.showLoadingIndicator = true;\n                    }, $scope.showLoadingIndicatorDelay);\n\n                    // Cancel any previous request\n                    if ($scope.performSearchHandle) {\n                        $scope.performSearchHandle.$cancelRequest();\n                    }\n\n                    // Kick of the search\n                    $scope.error = undefined;\n                    $scope.performSearchHandle = SearchResource.query({'_s' : $scope.query},\n                        function(data) {\n                            $scope.cancelRequest();\n                            $scope.performSearchExecuted = true;\n\n                            var results = [];\n                            data.forEach(function(eachResult) {\n                                // Create the header\n                                results.push({\n                                        context: eachResult.context.name,\n                                        // Make the label have an s at the end if it has multiple items\n                                        label: eachResult.results.length > 1 ? eachResult.context.name + 's' : eachResult.context.name,\n                                        type: Types.Group,\n                                        count: eachResult.results.length,\n                                        more: eachResult.more\n                                    }\n                                );\n\n                                eachResult.results.forEach(function(item) {\n                                    item.type = Types.Item;\n                                    results.push(item);\n                                });\n\n                                if (eachResult.more === true) {\n                                    var showMoreElement = {\n                                        context: eachResult.context.name,\n                                        count: eachResult.results.length,\n                                        type: Types.More,\n                                        loadMore: function() {\n                                            $scope.error = undefined;\n                                            SearchResource.query({'_s': $scope.query, '_l': this.count + 10, '_c' : this.context}, function(response) {\n                                                var endIndex = $scope.results.indexOf(showMoreElement);\n\n                                                // The result is context focused, so there is only one search result anyways\n                                                var searchResult = response[0];\n                                                var results = searchResult.results.slice(endIndex - 1); // Remove first elements, as they are already being showed\n                                                results.forEach(function(item, i) {\n                                                    // Add item\n                                                    item.type = Types.Item;\n                                                    $scope.results.splice(endIndex + i, 0, item);\n                                                    showMoreElement.count++;\n                                                });\n                                                // Toggle Selection\n                                                showMoreElement.selected = false;\n                                                $scope.results[$scope.selectedIndex].selected = true;\n\n                                                // Hide element\n                                                if (searchResult.more === false) {\n                                                    $scope.results.splice($scope.results.indexOf(showMoreElement), 1);\n                                                }\n                                            }, function(response) {\n                                                $scope.performSearchExecuted = true;\n                                                globalErrorHandling($scope, response);\n                                            });\n                                        },\n                                        selected: false\n                                    };\n                                    results.push(showMoreElement);\n                                }\n                            });\n                            $scope.results = results;\n                            if ($scope.results.length != 0) {\n                                $scope.selectedIndex = 1;\n                                $scope.results[$scope.selectedIndex].selected = true;\n                            }\n                        },\n                        function(response) {\n                            if (response.status >= 0) {\n                                $scope.performSearchExecuted = true;\n                                globalErrorHandling($scope, response);\n                                $scope.cancelRequest();\n                            } else {\n                                // Request cancelled\n                            }\n                        }\n                    );\n                }, $scope.performSearchDelay);\n            };\n        }])\n    ;\n}());\n","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/onms-central-search/quicksearch.html';\nvar html = \"<style type=text/css>.search-result{max-height:700px;min-width:280px;max-width:60%;position:absolute;top:100%;z-index:100000;overflow:auto;border:#343a40 solid 1px}.search-result .list-group-item{padding:.25rem .75rem;font-size:90%}.search-result .list-group-item:last-child{border-bottom-right-radius:0;border-bottom-left-radius:0}.search-bar .form-control{border:none;outline:0;box-shadow:none;border-radius:1rem;padding:0}.search-bar .input-group-text{border-top-left-radius:1rem;border-bottom-left-radius:1rem;background-color:#fff;border-color:#fff}.search-result .list-group-item:hover{background-color:#e9ecef}.selected{background-color:#e9ecef}</style> <form id=onms-search-form autocomplete=off novalidate class=form-inline> <input autocomplete=false name=hidden type=text style=display:none> <div class=\\\"input-group search-bar\\\"> <div class=input-group-prepend> <div class=input-group-text><i class=\\\"fa fa-search\\\"></i></div> </div> <label class=form-control> <input id=onms-search-query ng-change=onQueryChange() ng-focus=\\\"input.focus=true\\\" ng-blur=\\\"input.focus=false\\\" ng-model=query type=text class=form-control placeholder=Search... aria-label=Search> <small class=\\\"text-muted mr-4\\\" ng-show=!input.focus>2x ⇧</small> </label> <div ng-if=showLoadingIndicator class=\\\"btn btn-secondary rounded-0\\\"> <div class=\\\"spinner-border spinner-border-sm text-white\\\" role=status /> <span class=sr-only>Loading...</span> </div> <div ng-if=\\\"performSearchExecuted === true && !showLoadingIndicator\\\" class=input-group-append> <button class=\\\"btn btn-secondary\\\" type=button title=\\\"Reset Search\\\" ng-click=resetQuery()><i class=\\\"fa fa-times\\\"></i></button> </div> <div ng-if=showLoadingIndicator class=input-group-append> <button class=\\\"btn btn-secondary\\\" type=button title=\\\"Cancel Request\\\" ng-click=cancelRequest()><i class=\\\"fa fa-times\\\"></i></button> </div> </div> <div ng-if=\\\"performSearchExecuted === true\\\" class=\\\"bg-dark search-result rounded-bottom\\\" id=onms-search-result> <div class=list-group ng-if=\\\"results.length > 0\\\"> <div id=onms-search-result-item-{{$index}} ng-repeat-start=\\\"item in results track by $index\\\" ng-if=\\\"item.type === 'Group'\\\" class=\\\"list-group-item bg-dark text-grey border-0 pl-2\\\"> <span ng-if=!item.t>{{item.label}}</span> </div> <a id=onms-search-result-item-{{$index}} ng-class=\\\"{'selected': item.selected}\\\" ng-if=\\\"item.type === 'More'\\\" ng-click=item.loadMore() class=\\\"list-group-item list-group-item-action\\\" href ng-mouseover=select($index)>more...</a> <a id=onms-search-result-item-{{$index}} ng-class=\\\"{'selected': item.selected}\\\" ng-repeat-end ng-if=\\\"item.type === 'Item'\\\" href={{item.url}} class=\\\"list-group-item list-group-item-action\\\" ng-mouseover=select($index) ng-click=resetQuery()> <h6 class=mb-0><i class={{item.icon}} ng-if=item.icon>&nbsp;</i>{{item.label}} <i style=-webkit-transform:scaleY(-1);transform:scaleY(-1) class=\\\"fa fa-reply pull-right\\\" ng-if=item.selected></i></h6> <small class=mr-4 ng-class=\\\"{'text-muted': !item.selected}\\\" ng-repeat=\\\"match in item.matches\\\">{{match.label}}: {{match.value}}</small> </a> </div> <div ng-if=\\\"!error && results.length === 0\\\" class=text-grey> <span>No Results found</span> </div> <div ng-if=error class=\\\"alert alert-danger mx-2 my-2\\\"> <span>{{error}}</span> </div> </div> </form> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","const angular = require('vendor/angular-js');\nconst search = require('apps/search');\nconst centralSearch = require('apps/onms-central-search');\n\nconst MODULE_NAME = 'onms.default.apps';\n\nangular.module(MODULE_NAME, [ 'onms.central.search', 'onms-search' ]);\n","console.log('init: jquery-js'); // eslint-disable-line no-console\n\nconst jQuery = require('jquery');\nmodule.exports = jQuery;\n","const angular = require('vendor/angular-js');\nconst elementList = require('../onms-elementList/lib/elementList');\nrequire('../../lib/onms-pagination');\nrequire('../../lib/onms-http');\nrequire('../onms-default-apps');\nrequire('angular-bootstrap-confirm');\nrequire('angular-bootstrap-toggle/dist/angular-bootstrap-toggle');\nrequire('angular-bootstrap-toggle/dist/angular-bootstrap-toggle.css');\nrequire('angular-ui-router');\nrequire('angular-ui-sortable');\n\nconst indexTemplate  = require('./views/index.html');\nconst configTemplate = require('./views/config.html');\nconst groupTemplate  = require('./views/group.html');\n\nconst newRuleModalTemplate = require('./views/modals/new-rule-modal.html');\nconst newGroupModalTemplate = require('./views/modals/new-group-modal.html');\nconst importModalTemplate  = require('./views/modals/import-modal.html');\nconst exportModalTemplate  = require('./views/modals/export-modal.html');\n\nconst confirmTopoverTemplate = require('./views/modals/popover.html');\n\nconst handleErrorResponse = function(response, $scope) {\n    if (response && response.data) {\n        var error = response.data;\n        $scope.error = {};\n        $scope.error[error.context] = error.message;\n    }\n};\n\n(function() {\n    'use strict';\n\n    var MODULE_NAME = 'onms.classifications';\n\n    angular.module(MODULE_NAME, [\n            'angular-loading-bar',\n            'ngResource',\n            'ui.router',\n            'ui.bootstrap',\n            'ui.checkbox',\n            'ui.toggle',\n            'ui.sortable',\n            'onms.http',\n            'onms.elementList',\n            'mwl.confirm',\n            'onms.pagination',\n            'onms.default.apps',\n        ])\n        .run(function(confirmationPopoverDefaults) {\n            confirmationPopoverDefaults.templateUrl = confirmTopoverTemplate;\n        })\n\n        .config( ['$locationProvider', function ($locationProvider) {\n            $locationProvider.hashPrefix('!');\n            $locationProvider.html5Mode(false);\n        }])\n        .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\n            $stateProvider\n                .state('classifications', {\n                    url: '/classifications',\n                    controller: 'ClassificationController',\n                    templateUrl: indexTemplate\n                })\n                .state('classifications.config', {\n                    templateUrl: configTemplate,\n                    url: '/config',\n                    controller: 'ClassificationConfigController'\n                })\n                .state('classifications.group', {\n                    templateUrl: groupTemplate,\n                    url: '/:id',\n                    controller: 'ClassificationGroupController'\n                });\n            $urlRouterProvider.otherwise('classifications/config');\n        }])\n\n        .filter('capitalize', function() {\n            return function(input) {\n                return input ? input.charAt(0).toUpperCase() + input.substr(1).toLowerCase() : '';\n            }\n        })\n\n        .factory('ClassificationService', /* @ngInject */ function($resource) {\n            return $resource('rest/classifications/', {},\n                {\n                    'classify': { method: 'POST', url:'rest/classifications/classify'}\n                }\n            );\n        })\n        .factory('ClassificationGroupService', /* @ngInject */ function($resource) {\n            return $resource('rest/classifications/groups/:id', {id: '@id'},\n                {\n                    'get': {method: 'GET'},\n                    'update': {method: 'PUT'},\n                    'query': {method: 'GET', isArray: true},\n                    'delete': {method: 'DELETE'},\n                }\n            );\n        })\n        .factory('ClassificationRuleService', /* @ngInject */ function($resource) {\n            return $resource('rest/classifications/:id', {id: '@id'},\n                {\n                    'get': {method: 'GET'},\n                    'save': {method: 'POST'},\n                    'update': {method: 'PUT'},\n                    'query': {method: 'GET', isArray: true},\n                    'delete': {method: 'DELETE'}\n                }\n            );\n        })\n\n        .factory('ProtocolService', /* @ngInject */ function($resource) {\n            return $resource('rest/classifications/protocols');\n        })\n        .controller('ClassificationController', ['$scope', '$state', 'ClassificationService', 'ClassificationGroupService', 'ProtocolService', function($scope, $state, ClassificationService, ClassificationGroupService, ProtocolService) {\n            $scope.groups = [];\n            $scope.classificationRequest = {};\n            $scope.classificationResponse = undefined;\n            $scope.isClassificationCollapsed = true;\n            $scope.error = undefined;\n\n            $scope.classify = function (classificationRequest) {\n                ClassificationService.classify(classificationRequest, function (result) {\n                    $scope.classifyError = undefined;\n                    $scope.classificationResponse = result.classification === undefined ? 'No mapping found' : result.classification;\n                }, function (response) {\n                    $scope.classificationResponse = undefined;\n                    if (response.status === 400 && response.data && response.data.context && response.data.message) {\n                        $scope.classifyError = {};\n                        $scope.classifyError[response.data.context] = response.data.message;\n                    } else {\n                        $scope.classifyError['entity'] = 'Cannot perform the request.';\n                    }\n                });\n            };\n\n            $scope.refreshTabs = function(navigateToFirstGroup) {\n                return ClassificationGroupService.query({\n                    limit: 1000, // override default limit (we want to show as many groups as possible)\n                    orderBy: 'position',\n                }, function(response) {\n                    // Remove disabled groups\n                    $scope.groups = response.filter(function(group) {\n                        return group.enabled === true\n                    });\n                    // Sort by position (lowest first)\n                    $scope.groups = $scope.groups.sort(function(l, r) {\n                        return r.position - l.position;\n                    });\n                    $scope.groups = $scope.groups.reverse();\n\n                    // Select first group if available\n                    if (navigateToFirstGroup && $scope.groups.length !== 0) {\n                        $state.go('classifications.group', {id: $scope.groups[0].id});\n                    }\n                });\n            };\n\n            $scope.loadProtocols = function() {\n                ProtocolService.query(function(response, headers) {\n                    $scope.protocols = response;\n                });\n            };\n\n            $scope.fullyDefined = function() {\n                var fullyDefined = $scope.classificationRequest\n                    && $scope.classificationRequest.protocol\n                    && $scope.classificationRequest.dstPort && $scope.classificationRequest.dstAddress\n                    && $scope.classificationRequest.srcPort && $scope.classificationRequest.srcAddress\n                    && $scope.classificationRequest.exporterAddress;\n                return fullyDefined;\n            };\n\n            $scope.toggleClassificationMode = function() {\n                $scope.classificationMode = ($scope.classificationMode === 'simple' ? 'complex' : 'simple');\n            };\n\n            $scope.loadProtocols();\n            $scope.refreshTabs(true);\n\n        }])\n        .controller('ClassificationConfigController', ['$scope', '$rootScope', '$uibModal', '$location', '$log', 'ClassificationGroupService', function($scope, $rootScope, $uibModal, $location, $log, ClassificationGroupService) {\n            $scope.groups = [];\n            $scope.query = {\n                page: 1,\n                limit: 20,\n                totalItems: 0,\n            };\n            $scope.updateGroup = function(group) {\n                group.$update({}, function() {\n                    $scope.refreshTabs();\n                    $scope.refresh();\n                });\n            };\n            $scope.deleteGroup = function(group) {\n                group.$delete().then(function() {\n                    $scope.refreshTabs();\n                    $scope.refresh();\n                });\n            };\n            var openModal = function(group) {\n                return $uibModal.open({\n                    backdrop: false,\n                    controller: 'GroupModalController',\n                    templateUrl: newGroupModalTemplate,\n                    size: 'lg',\n                    resolve: {\n                        group: function() {\n                            return group;\n                        },\n                        groups: function () {\n                            return $scope.groups;\n                        },\n                        groupsTotalAmount: function () {\n                            return $scope.query.totalItems;\n                        }\n                    }\n                });\n            };\n            $scope.editGroup = function(group) {\n                var modalInstance = openModal(group);\n                modalInstance.closed.then(function () {\n                    $scope.refreshTabs();\n                    $scope.refresh();\n                }, function() {\n                    // modal was dismissed\n                    $scope.refresh();\n                });\n            };\n            $scope.addGroup = function(group) {\n                var modalInstance = openModal(group);\n                modalInstance.closed.then(function () {\n                    $scope.refreshTabs();\n                    $scope.refresh();\n                });\n            };\n            $scope.refresh = function() {\n                var parameters = $scope.query || {};\n                ClassificationGroupService.query({\n                    limit: 20,\n                    offset: (parameters.page -1) * parameters.limit || 0,\n                    orderBy: 'position',\n                    order: 'asc'\n                }, function(result, headers) {\n                    $scope.groups = result;\n                    var contentRange = elementList.parseContentRange(headers('Content-Range'));\n                    $scope.query.totalItems = contentRange.total;\n                });\n            };\n            // for drag and drop of groups (redefining position)\n            $scope.sortableGroups = {\n                start: function(e, ui) {\n                    // remember old index before moving\n                    angular.element(ui.item).data('oldIndex', ui.item.index());\n                },\n                stop: function(e, ui) {\n\n                    // Check Precondition:  item was actually moved\n                    var oldIndex =  angular.element(ui.item).data().oldIndex;\n                    var newIndex =  ui.item.index();\n                    if(oldIndex !== newIndex) {\n                        // Calculate and set new position (index + offset)\n                        var parameters = $scope.query || {};\n                        var offset = (parameters.page - 1) * parameters.limit || 0;\n                        var group = $scope.groups[newIndex];\n                        var position;\n                        if (newIndex - 1 < 0) {\n                            // we are already at the beginning of the visible paged list\n                            position = offset;\n                        } else {\n                            var previousGroup = $scope.groups[newIndex - 1];\n                            position = (newIndex > oldIndex) ? previousGroup.position : previousGroup.position + 1;\n                        }\n                        group.position = position;\n\n                        // Update backend\n                        var refreshCallback = function () {\n                            $scope.refreshTabs();\n                            $scope.refresh();\n                        };\n                        var errorCallback = function(response) {\n                            handleErrorResponse(response, $scope);\n                        };\n\n                        ClassificationGroupService.update(group, refreshCallback, errorCallback);\n                    }\n                },\n                items: \"tr:not(.unsortable)\"\n            };\n            $scope.refresh();\n        }])\n        .controller('ClassificationGroupController', ['$scope', '$stateParams', '$uibModal', '$log', '$http', '$window','ClassificationRuleService', 'ClassificationGroupService', function($scope, $stateParams, $uibModal, $log, $http, $window,ClassificationRuleService, ClassificationGroupService) {\n            // Defaults\n            $scope.rules = [];\n            $scope.query = {\n                page: 1,\n                limit: 20,\n                totalItems: 0,\n                orderBy: 'position',\n                order: 'asc',\n                groups: [$stateParams.id],\n                search: undefined\n            };\n\n            $scope.splitRule = (entry) => {\n                return entry ? entry.replaceAll(',', '\\n') : entry;\n            };\n\n            $scope.findGroup = function(groupId) {\n                return ClassificationGroupService.get({id: groupId}, function(response) {\n                    $scope.group = response;\n                    $scope.refresh();\n                });\n            };\n\n            $scope.showExportRulesDialog = function() {\n                var modalInstance = $uibModal.open({\n                    backdrop: false,\n                    controller: 'ClassificationExportController',\n                    templateUrl: exportModalTemplate,\n                    resolve: {\n                        group: function () {\n                            return $scope.group;\n                        }\n                    }\n                });\n                modalInstance.result.then(function () {\n                    $scope.refreshTabs();\n                    $scope.refresh();\n                });\n            };\n\n            $scope.refresh = function() {\n                var parameters = $scope.query || {};\n                var editPositionOfRuleEnabled = !($scope.group.readOnly) && ($scope.query.orderBy === 'position' && $scope.query.order === 'asc');\n                var sortable =  angular.element( '.ui-sortable' );\n                if(editPositionOfRuleEnabled === true) {\n                    sortable.sortable('enable');\n                } else {\n                    sortable.sortable('disable');\n                }\n                return ClassificationRuleService.query( {\n                    limit: parameters.limit || 20,\n                    offset: (parameters.page -1) * parameters.limit || 0,\n                    orderBy: parameters.orderBy,\n                    order: parameters.order,\n                    groupFilter: parameters.groups || [],\n                    query: parameters.search\n                }, function (result, headers) {\n                    $scope.rules = result;\n                    var contentRange = elementList.parseContentRange(headers('Content-Range'));\n                    $scope.query.totalItems = contentRange.total;\n                });\n            };\n\n            // In some cases the currently selected group needs to be refreshed, this method finds the group from\n            // $scope.groups and updates $scope.group accordingly, in order to reflect updates in $scope.groups\n            $scope.refreshGroup = function() {\n                for (var i = 0; i<$scope.groups.length; i++) {\n                    var group = $scope.groups[i];\n                    if (group.id === $scope.group.id) {\n                        $scope.group = group;\n                        return;\n                    }\n                }\n            };\n\n            $scope.refreshAll = function() {\n                var result = $scope.refreshTabs();\n                result.$promise.then(function() {\n                    $scope.refreshGroup()\n                    $scope.refresh();\n                });\n            };\n\n            $scope.changeOrderBy = function(column) {\n                if ($scope.query.orderBy === column) {\n                    $scope.query.order = $scope.query.order === 'asc' ? 'desc' : 'asc';\n                } else {\n                    $scope.query.orderBy = column;\n                    $scope.query.order = 'asc';\n                }\n                $scope.refresh();\n            };\n\n            $scope.deleteRule = function(rule) {\n                rule.$delete().then(function() {\n                    $scope.refreshAll();\n                });\n            };\n\n            $scope.deleteAllRules = function() {\n                ClassificationRuleService.delete({groupId: $scope.group.id}, function() {\n                    $scope.refreshAll();\n                });\n            };\n\n            var openModal = function(classification, group) {\n                return $uibModal.open({\n                    backdrop: false,\n                    controller: 'ClassificationModalController',\n                    templateUrl: newRuleModalTemplate,\n                    size: 'lg',\n                    resolve: {\n                        classification: function() {\n                            return classification;\n                        },\n                        group: function() {\n                            return group;\n                        },\n                        groups: function () {\n                            return $scope.groups;\n                        }\n                    }\n                });\n            };\n\n            $scope.editRule = function(rule) {\n                var modalInstance = openModal(rule, rule.group);\n                modalInstance.closed.then(function () {\n                    $scope.refreshAll();\n                }, function() {\n                    // modal was dismissed\n                    $scope.refresh();\n                });\n            };\n\n            $scope.addRule = function(group) {\n                var modalInstance = openModal(null, group);\n                modalInstance.closed.then(function () {\n                    $scope.refreshAll();\n                });\n            };\n\n            // for drag and drop of rules (redefining position)\n            $scope.sortableRules = {\n                start: function(e, ui) {\n                    // remember old index before moving\n                    angular.element(ui.item).data('oldIndex', ui.item.index());\n                },\n                stop: function(e, ui) {\n                    // Check Precondition: item was actually moved\n                    var oldIndex =  angular.element(ui.item).data().oldIndex;\n                    var newIndex =  ui.item.index();\n                    if(oldIndex !== newIndex) {\n                        // Calculate and set new position (index + offset)\n                        var parameters = $scope.query || {};\n                        var offset = (parameters.page - 1) * parameters.limit || 0;\n                        var rule = $scope.rules[newIndex];\n                        var position;\n                        if (newIndex - 1 < 0) {\n                            // we are already at the beginning of the visible paged list\n                            position = offset;\n                        } else {\n                            var previousRule = $scope.rules[newIndex - 1];\n                            position = (newIndex > oldIndex) ? previousRule.position : previousRule.position + 1;\n                        }\n                        rule.position = position;\n\n                        // Update backend\n                        var refreshCallback = function () {\n                            $scope.refreshAll();\n                        };\n                        var errorCallback = function(response) {\n                            handleErrorResponse(response, $scope);\n                        };\n\n                        ClassificationRuleService.update(rule, refreshCallback, errorCallback);\n                    }\n                }\n            };\n\n            $scope.importRules = function() {\n                var modalInstance = $uibModal.open({\n                    size: 'lg',\n                    backdrop: false,\n                    controller: 'ClassificationImportController',\n                    templateUrl: importModalTemplate,\n                    resolve: {\n                        group: function () {\n                            return $scope.group;\n                        }\n                    }\n                });\n                modalInstance.closed.then(function () {\n                    $scope.refreshAll();\n                });\n            };\n\n            $scope.clearSearch = function() {\n                $scope.query.search = undefined;\n                $scope.refresh();\n            };\n\n            $scope.findGroup($stateParams.id);\n        }])\n        .controller('ClassificationImportController', ['$scope', '$http', '$uibModalInstance', 'group', function($scope, $http, $uibModalInstance, group) {\n            $scope.group = group;\n            $scope.setFile = function(element) {\n                $scope.$apply(function(scope) {\n                    scope.fileToUpload = element.files[0];\n                });\n            };\n            $scope.openFileDialogue = function() {\n                setTimeout(function() {\n                    document.getElementById('fileToImport').click();\n                }, 0);\n            };\n            $scope.resetInput = function() {\n                $scope.fileToUpload = undefined;\n                $scope.error = undefined;\n                $scope.failedRows = [];\n                $scope.containsHeader = true;\n                $scope.deleteExistingRules = false;\n                $scope.pagination = {\n                    page: 1,\n                    totalItems: 0,\n                    limit: 5\n                };\n            };\n\n            $scope.navigateWithinErrors = function() {\n                var limit = $scope.pagination.limit;\n                var offset = ($scope.pagination.page - 1) * limit;\n                var endIndex = Math.min(offset + limit, $scope.errors.length);\n                $scope.failedRows = $scope.errors.slice(offset, endIndex);\n            };\n\n            $scope.uploadFile = function() {\n                var reader = new FileReader();\n                reader.onload = function(e) {\n                    $scope.error = undefined;\n                    $scope.errors = [];\n                    $scope.failedRows = [];\n                    $http({\n                        url: 'rest/classifications/groups/'+group.id,\n                        method: 'POST',\n                        data: reader.result,\n                        params: {'hasHeader': $scope.containsHeader, 'deleteExistingRules' : $scope.deleteExistingRules},\n                        headers: {'Content-Type': 'text/comma-separated-values'}\n                    }).success(function (response) {\n                        $uibModalInstance.close();\n                    }).error(function (response, status) {\n                        if (status === 500) {\n                            $scope.error = 'An unexpected error occurred.';\n                        }\n                        if (status === 400) {\n                            // General error\n                            if (response.error) {\n                                $scope.error = response.error.message;\n                                return;\n                            }\n                            // Report failed rows\n                            if (response.errors) {\n                                $scope.error = 'The rules could not be imported. Please fix the errors shown below and retry.';\n                                // Persist locally\n                                var errorKeys = Object.getOwnPropertyNames(response.errors);\n                                for (var i = 0; i<errorKeys.length; i++) {\n                                    var index = errorKeys[i];\n                                    var rowIndex = $scope.containsHeader ? parseInt(index, 10) + 1 : index; // increase row index if csv contains header\n                                    $scope.errors.push({index: rowIndex, message: response.errors[index].message});\n                                }\n                                // Update pagination settings\n                                $scope.pagination.totalItems = $scope.errors.length;\n                                $scope.navigateWithinErrors();\n                            }\n                        }\n                    });\n                };\n                reader.readAsText($scope.fileToUpload);\n            };\n            $scope.resetInput();\n        }])\n        .controller('ClassificationExportController', ['$scope', '$http', '$uibModalInstance', 'group', '$window',\n            function($scope, $http, $uibModalInstance, group, $window) {\n                $scope.group = group;\n                $scope.export = {};\n                $scope.export.requestedFileName = group.name + '_rules.csv';\n                $scope.exportGroup = function() {\n                    var requestedFileName = $scope.export.requestedFileName.trim();\n                    $window.location = 'rest/classifications/groups/' + $scope.group.id +'?filename='\n                        +requestedFileName+'&format=csv';\n                    $uibModalInstance.close();\n            };\n\n        }])\n        .controller('ClassificationModalController', ['$scope', '$uibModalInstance', 'ProtocolService', 'ClassificationRuleService', 'classification', 'group', 'groups', function($scope, $uibModalInstance, ProtocolService, ClassificationRuleService, classification, group, groups) {\n            $scope.classification = classification || {group:group};\n            $scope.protocols = [];\n            $scope.currentSelection = undefined;\n            $scope.selectedProtocols = [];\n            $scope.buttonName = $scope.classification.id ? 'Update' : 'Create';\n            $scope.group = group;\n            $scope.maxPosition = (classification === null) ? group.ruleCount : group.ruleCount-1;\n            $scope.selectableGroups = groups.filter((group) => group.readOnly === false);\n\n            var convertStringArrayToProtocolsArray = function(string) {\n                return string.map(function(protocol) {\n                    return {keyword: protocol};\n                })\n            };\n\n            var convertProtocolsArrayToStringArray = function(protocols) {\n                return protocols.map(function(protocol) {\n                    return protocol.keyword;\n                });\n            };\n\n            $scope.save = function() {\n                // Close modal afterwards\n                var closeCallback = function() {\n                    $uibModalInstance.close();\n                };\n                var errorCallback = function(response) {\n                    handleErrorResponse(response, $scope);\n                };\n                $scope.classification.protocols = convertProtocolsArrayToStringArray($scope.selectedProtocols);\n                if ($scope.classification.id) {\n                    ClassificationRuleService.update($scope.classification, closeCallback, errorCallback);\n                } else {\n                    ClassificationRuleService.save($scope.classification, closeCallback, errorCallback);\n                }\n            };\n\n            $scope.cancel = function() {\n                $uibModalInstance.dismiss('Cancelled by User');\n            };\n\n            $scope.insertProtocol = function(item) {\n                if (item && $scope.selectedProtocols.indexOf(item) === -1) {\n                    $scope.currentSelection = '';\n                    $scope.selectedProtocols.push(item);\n                }\n            };\n\n            $scope.removeProtocol = function(protocol) {\n                var index = $scope.selectedProtocols.indexOf(protocol);\n                if (index !== -1) {\n                    $scope.selectedProtocols.splice(index, 1);\n                }\n            };\n\n            $scope.loadProtocols = function() {\n                ProtocolService.query(function(response, headers) {\n                    $scope.protocols = response;\n                });\n            };\n\n            if ($scope.classification.id) {\n                $scope.selectedProtocols = convertStringArrayToProtocolsArray($scope.classification.protocols);\n            }\n\n            $scope.loadProtocols();\n\n        }])\n        .controller('GroupModalController', ['$scope', '$uibModalInstance', 'ClassificationGroupService', 'group', 'groups', 'groupsTotalAmount', function($scope, $uibModalInstance, ClassificationGroupService, group, groups, groupsTotalAmount) {\n            $scope.group = group || {enabled:true};\n            $scope.currentSelection = undefined;\n            $scope.buttonName = $scope.group.id ? 'Update' : 'Create';\n            $scope.groups = groups;\n            $scope.groupsTotalAmount = groupsTotalAmount;\n            $scope.maxPosition = (group === undefined) ? groupsTotalAmount-1 : groupsTotalAmount-2; // pre-defined group has always the last position\n\n            $scope.save = function() {\n                // Close modal afterwards\n                var closeCallback = function() {\n                    $uibModalInstance.close();\n                };\n                var errorCallback = function(response) {\n                    handleErrorResponse(response, $scope);\n                };\n                if ($scope.group.id) {\n                    ClassificationGroupService.update($scope.group, closeCallback, errorCallback);\n                } else {\n                    ClassificationGroupService.save($scope.group, closeCallback, errorCallback);\n                }\n            };\n\n            $scope.cancel = function() {\n                $uibModalInstance.dismiss('Cancelled by User');\n            };\n        }])\n    ;\n}());\n","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/onms-classifications/views/index.html';\nvar html = \"<div class=row> <div class=\\\"\\\" ng-class=\\\"{'col-md-12': isClassificationCollapsed, 'col-md-9': !isClassificationCollapsed}\\\"> <ul id=tabs class=\\\"nav nav-tabs\\\"> <li role=presentation class=nav-item> <a ui-sref-active=active ui-sref=classifications.config data-name=settings class=nav-link>Settings</a> </li> <li role=presentation ng-repeat=\\\"group in groups\\\" class=nav-item> <a ui-sref-active=active ui-sref=\\\"classifications.group({'id': group.id, 'group': group})\\\" title={{group.description}} data-name={{group.name}} class=nav-link> {{group.name | capitalize}} Rules <span class=\\\"badge badge-primary\\\" title=\\\"{{group.ruleCount}} defined rules\\\">{{group.ruleCount}}</span> </a> </li> <button id=action.classification.toggle class=\\\"btn btn-secondary mr-3\\\" style=position:absolute;right:0;z-index:900 ng-click=\\\"isClassificationCollapsed = !isClassificationCollapsed\\\" title=\\\"{{isClassificationCollapsed ? 'Test classification' : 'Collapse classification panel'}}\\\"> <i class=fa ng-class=\\\"{'fa-magic': isClassificationCollapsed, 'fa-caret-right': !isClassificationCollapsed}\\\"/> </button> </ul> <div class=\\\"card border-top-0\\\" ui-view> </div> </div> <div id=classification-tab class=col-md-3 class=collapse uib-collapse=isClassificationCollapsed> <div> <ul class=\\\"nav nav-tabs\\\"> <li role=presentation class=nav-item> <a class=\\\"nav-link active\\\">Test Classification</a> </li> </ul> </div> <div class=\\\"card border-top-0\\\"> <div class=\\\"card-default card-body\\\"> <form name=classifyForm> <div class=form-group> <label class=col-form-label for=classify-protocol>Protocol</label> <input class=form-control type=text autocomplete=off id=classify-protocol name=classify-protocol ng-model=classificationRequest.protocol placeholder=\\\"A valid RFC specified IP protocol, e.g. TCP, UDP\\\" typeahead-min-length=0 uib-typeahead=\\\"protocol.keyword for protocol in protocols | filter:$viewValue\\\" typeahead-editable=false ng-class=\\\"{ 'is-invalid' : ruleForm['classify-protocol'].$invalid || classifyError.protocol }\\\"/> <p id=classifyError.protocol ng-show=classifyError.protocol class=\\\"form-text text-muted\\\">{{classifyError.protocol}}</p> </div> <div class=form-group> <label class=col-form-label for=classify-exporterAddress>Exporter Address</label> <input class=form-control type=text id=classify-exporterAddress name=classify-exporterAddress placeholder=\\\"e.g. 10.0.0.1\\\" ng-model=classificationRequest.exporterAddress ng-class=\\\"{ 'is-invalid' : ruleForm['classify-exporterAddress'].$invalid || classifyError.exporterAddress }\\\"> <p id=classifyError.exporterAddress ng-show=classifyError.exporterAddress class=invalid-feedback>{{classifyError.exporterAddress}}</p> </div> <div class=form-row> <div class=\\\"form-group col-md-8 col-sm-8 col-xs-8\\\"> <label class=col-form-label for=classify-srcAddress>Source Address</label> <input class=form-control type=text id=classify-srcAddress name=classify-srcAddress placeholder=\\\"e.g. 127.0.0.1\\\" ng-model=classificationRequest.srcAddress ng-class=\\\"{ 'is-invalid' : ruleForm['classify-srcAddress'].$invalid || classifyError.srcAddress }\\\"> <p id=classifyError.srcAddress ng-show=classifyError.srcAddress class=invalid-feedback>{{classifyError.srcAddress}}</p> </div> <div class=\\\"form-group col-md-4 col-sm-4 col-xs-4\\\"> <label class=col-form-label for=classify-srcPort>Port</label> <input class=form-control type=text id=classify-srcPort name=classify-srcPort placeholder=\\\"e.g. 55252\\\" ng-model=classificationRequest.srcPort ng-class=\\\"{ 'is-invalid' : ruleForm['classify-srcPort'].$invalid || classifyError.srcPort }\\\"> <p id=classifyError.srcPort ng-show=classifyError.srcPort class=invalid-feedback>{{classifyError.srcPort}}</p> </div> </div> <div class=form-row> <div class=\\\"form-group col-md-8 col-sm-8 col-xs-8\\\"> <label class=col-form-label for=classify-dstAddress>Destination Address</label> <input class=form-control type=text id=classify-dstAddress name=classify-dstAddress placeholder=\\\"e.g. 127.0.0.1\\\" ng-model=classificationRequest.dstAddress ng-class=\\\"{ 'is-invalid' : ruleForm['classify-dstAddress'].$invalid || classifyError.dstAddress }\\\"> <p id=classifyError.dstAddress ng-show=classifyError.dstAddress class=invalid-feedback>{{classifyError.dstAddress}}</p> </div> <div class=\\\"form-group col-md-4 col-sm-4 col-xs-4\\\"> <label class=col-form-label for=classify-dstPort>Port</label> <input class=form-control type=text id=classify-dstPort name=classify-dstPort placeholder=\\\"e.g. 80\\\" ng-model=classificationRequest.dstPort ng-class=\\\"{ 'is-invalid' : ruleForm['classify-dstPort'].$invalid || classifyError.dstPort }\\\"> <p id=classifyError.dstPort ng-show=classifyError.dstPort class=invalid-feedback>{{classifyError.dstPort}}</p> </div> </div> <div class=\\\"badge badge-secondary\\\" ng-show=classificationResponse> <span id=classification-response title=\\\"Based on the current set of rules, the given flow would be mapped to\\\">{{classificationResponse}}</span> </div> <div class=\\\"alert alert-danger\\\" ng-show=classifyError.entity> <span id=classification-error>{{classifyError.entity}}</span> </div> <div class=form-group> <button type=submit class=\\\"btn btn-primary pull-right\\\" id=classification-submit ng-click=classify(classificationRequest) ng-disabled=\\\"classifyForm.$invalid || !fullyDefined()\\\">Classify</button> </div> </form> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/onms-classifications/views/config.html';\nvar html = \"<div class=card-body> <div class=\\\"btn-toolbar pull-right mb-2\\\"> <div class=\\\"btn-group ml-2\\\" role=group> <button id=action.refresh class=\\\"btn btn-secondary\\\" ng-click=refresh() title=\\\"Refresh list\\\"><i class=\\\"fa fa-refresh\\\"></i></button> </div> <div class=\\\"btn-group ml-2\\\" role=group> <button id=action.addGroup class=\\\"btn btn-secondary\\\" ng-click=addGroup() title=\\\"Add new classification group\\\"><i class=\\\"fa fa-plus\\\"></i></button> </div> </div> <div ng-show=\\\"groups.length == 0\\\">No groups defined.</div> <pagination model=query ng-show=\\\"groups.length > 0\\\" position=bottom on-change=refresh> <table class=\\\"table table-striped\\\"> <thead> <tr class=d-flex> <th class=\\\"col-md-1 text-nowrap\\\">Position</th> <th class=\\\"col-md-3 text-nowrap\\\">Name</th> <th class=\\\"col-md-5 text-nowrap\\\">Description</th> <th class=\\\"col-md-1 text-nowrap\\\">Editable</th> <th class=\\\"col-md-1 text-nowrap\\\">Enabled</th> <th class=\\\"col-md-1 text-nowrap\\\">Actions</th> </tr> </thead> <tbody ng-model=groups ui-sortable=sortableGroups> <tr class=d-flex ng-repeat=\\\"group in groups\\\" data-row={{group.name}} ng-class=\\\"{'unsortable': group['readOnly']}\\\"> <td class=\\\"col-md-1 text-nowrap\\\"> <i class=\\\"fa fa-bars text-muted\\\" style=padding-right:1em ng-style=\\\"{'visibility': !group['readOnly'] ? 'visible' : 'hidden'}\\\"></i> {{group['position']}}</td> <td class=\\\"col-md-3 text-nowrap\\\">{{group['name']}}</td> <td class=\\\"col-md-5 text-nowrap\\\">{{group['description']}}</td> <td class=\\\"col-md-1 text-nowrap\\\">{{!group['readOnly']}}</td> <td class=\\\"col-md-1 text-nowrap\\\"> <toggle id=action.{{group.name}}.toggle size=btn-sm ng-model=\\\"group['enabled']\\\" ng-change=updateGroup(group)></toggle> </td> <td class=\\\"col-md-1 text-nowrap\\\"> <div class=pull-right> <button id=action.{{group.position}}.edit class=\\\"btn btn-sm btn-secondary\\\" ng-click=editGroup(group) title=\\\"edit group\\\" ng-show=!group.readOnly><i class=\\\"fa fa-edit\\\"></i></button> <button id=action.{{group.position}}.delete class=\\\"btn btn-sm btn-secondary\\\" mwl-confirm title=\\\"delete group\\\" message=\\\"Do you want to delete group '{{group.name}}' with {{group.ruleCount}} rule(s)?\\\" on-confirm=deleteGroup(group) placement=left confirm-button-type=danger cancel-button-type=secondary confirm-text=Yes cancel-text=No ng-show=!group.readOnly><i class=\\\"fa fa-trash-o\\\"></i></button> </div> </td> </tr> </tbody> </table> </pagination> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/onms-classifications/views/group.html';\nvar html = \"<style type=text/css>.wrapped{white-space:pre}.text-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap!important}</style> <div class=card-body> <div class=\\\"btn-toolbar pull-right mb-2\\\" role=toolbar> <div class=input-group role=group ng-show=\\\"group.ruleCount > 0\\\"> <div class=input-group-prepend> <span class=input-group-text><i class=\\\"fa fa-search\\\"/></span> </div> <input type=text id=action.search ng-model=query.search ng-change=refresh() placeholder=search... class=form-control /> <div class=input-group-append> <button class=\\\"btn btn-secondary\\\" title=\\\"Clear search\\\" ng-click=clearSearch() ng-show=query.search><i class=\\\"fa fa-close\\\"/></button> </div> </div> <div class=\\\"btn-group ml-4\\\" role=group> <button id=action.refresh class=\\\"btn btn-secondary\\\" ng-click=refreshAll() title=\\\"Refresh list\\\"><i class=\\\"fa fa-refresh\\\"></i></button> </div> <div class=\\\"btn-group ml-2\\\" role=group ng-show=!group.readOnly> <button id=action.addRule class=\\\"btn btn-secondary\\\" ng-click=addRule(group) title=\\\"Add new classification rule\\\"><i class=\\\"fa fa-plus\\\"></i></button> <button ng-if=\\\"rules.length > 0\\\" id=action.deleteAll class=\\\"btn btn-secondary\\\" mwl-confirm title=\\\"Delete rules\\\" message=\\\"Do you want to delete all {{group.name}} rules?\\\" on-confirm=deleteAllRules() placement=left confirm-button-type=danger cancel-button-type=secondary confirm-text=Yes cancel-text=No><i class=\\\"fa fa-trash-o\\\"></i></button> </div> <div class=\\\"btn-group ml-2\\\" role=group ng-show=!group.readOnly> <button id=action.importCSV class=\\\"btn btn-secondary\\\" ng-click=importRules() title=\\\"Import classification rules from CSV\\\"><i class=\\\"fa fa-upload\\\"></i></button> <button id=action.exportCSV class=\\\"btn btn-secondary\\\" ng-click=showExportRulesDialog() title=\\\"Export classification rules as CSV\\\"> <i class=\\\"fa fa-download\\\"></i> </button> </div> </div> <h5 class=pt-2>{{group.description}} <span class=\\\"badge badge-secondary\\\" ng-if=group.readOnly>read-only</span></h5> <div class=\\\"text-center mt-4\\\" ng-show=\\\"rules.length == 0\\\"><pre>No rules defined.</pre></div> <pagination model=query ng-show=\\\"rules.length > 0\\\" position=bottom on-change=refresh> <table class=\\\"table table-striped\\\"> <thead> <tr class=d-flex> <th class=\\\"col-md-1 text-nowrap\\\"> <a ng-click=\\\"changeOrderBy('position')\\\">Position</a> <i ng-show=\\\"query.orderBy === 'position' &amp;&amp; query.order === 'asc'\\\" class=\\\"fa fa-sort-asc\\\"/> <i ng-show=\\\"query.orderBy === 'position' &amp;&amp; query.order === 'desc'\\\" class=\\\"fa fa-sort-desc\\\"/> </th> <th class=\\\"col-md-1 text-nowrap\\\"> <a ng-click=\\\"changeOrderBy('name')\\\">Application</a> <i ng-show=\\\"query.orderBy === 'name' &amp;&amp; query.order === 'asc'\\\" class=\\\"fa fa-sort-asc\\\"/> <i ng-show=\\\"query.orderBy === 'name' &amp;&amp; query.order === 'desc'\\\" class=\\\"fa fa-sort-desc\\\"/> </th> <th class=\\\"col-md-1 text-nowrap\\\"> <a ng-click=\\\"changeOrderBy('protocol')\\\">Protocol</a> <i ng-show=\\\"query.orderBy === 'protocol' &amp;&amp; query.order === 'asc'\\\" class=\\\"fa fa-sort-asc\\\"/> <i ng-show=\\\"query.orderBy === 'protocol' &amp;&amp; query.order === 'desc'\\\" class=\\\"fa fa-sort-desc\\\"/> </th> <th class=\\\"col-md-2 text-nowrap\\\"> <a ng-click=\\\"changeOrderBy('srcAddress')\\\">Src. Address</a> <i ng-show=\\\"query.orderBy === 'srcAddress' &amp;&amp; query.order === 'asc'\\\" class=\\\"fa fa-sort-asc\\\"/> <i ng-show=\\\"query.orderBy === 'srcAddress' &amp;&amp; query.order === 'desc'\\\" class=\\\"fa fa-sort-desc\\\"/> </th> <th class=\\\"col-md-1 text-nowrap\\\"> <a ng-click=\\\"changeOrderBy('srcPort')\\\">Src. Port</a> <i ng-show=\\\"query.orderBy === 'srcPort' &amp;&amp; query.order === 'asc'\\\" class=\\\"fa fa-sort-asc\\\"/> <i ng-show=\\\"query.orderBy === 'srcPort' &amp;&amp; query.order === 'desc'\\\" class=\\\"fa fa-sort-desc\\\"/> </th> <th class=\\\"col-md-2 text-nowrap\\\"> <a ng-click=\\\"changeOrderBy('dstAddress')\\\">Dst. Address</a> <i ng-show=\\\"query.orderBy === 'dstAddress' &amp;&amp; query.order === 'asc'\\\" class=\\\"fa fa-sort-asc\\\"/> <i ng-show=\\\"query.orderBy === 'dstAddress' &amp;&amp; query.order === 'desc'\\\" class=\\\"fa fa-sort-desc\\\"/> </th> <th class=\\\"col-md-1 text-nowrap\\\"> <a ng-click=\\\"changeOrderBy('dstPort')\\\">Dst. Port</a> <i ng-show=\\\"query.orderBy === 'dstPort' &amp;&amp; query.order === 'asc'\\\" class=\\\"fa fa-sort-asc\\\"/> <i ng-show=\\\"query.orderBy === 'dstPort' &amp;&amp; query.order === 'desc'\\\" class=\\\"fa fa-sort-desc\\\"/> </th> <th ng-class=\\\"{'col-md-1': group.readOnly === false, 'col-md-2': group.readOnly === true}\\\" class=text-nowrap> <a ng-click=\\\"changeOrderBy('exporterFilter')\\\">Exporter Filter</a> <i ng-show=\\\"query.orderBy === 'exporterFilter' &amp;&amp; query.order === 'asc'\\\" class=\\\"fa fa-sort-asc\\\"/> <i ng-show=\\\"query.orderBy === 'exporterFilter' &amp;&amp; query.order === 'desc'\\\" class=\\\"fa fa-sort-desc\\\"/> </th> <th class=\\\"col-md-1 text-nowrap\\\"> <a ng-click=\\\"changeOrderBy('omnidirectional')\\\">Omnidirectional</a> <i ng-show=\\\"query.orderBy === 'omnidirectional' &amp;&amp; query.order === 'asc'\\\" class=\\\"fa fa-sort-asc\\\"/> <i ng-show=\\\"query.orderBy === 'omnidirectional' &amp;&amp; query.order === 'desc'\\\" class=\\\"fa fa-sort-desc\\\"/> </th> <th class=col-md-1 ng-if=\\\"group.readOnly === false\\\"> Actions </th> </tr> </thead> <tbody ng-model=rules ui-sortable=sortableRules> <tr ng-repeat=\\\"rule in rules\\\" class=d-flex> <td class=\\\"col-md-1 text-nowrap\\\"> <i class=\\\"fa fa-bars text-muted\\\" ng-show=\\\"!group.readOnly && query.orderBy === 'position' && query.order === 'asc'\\\" style=padding-right:1em></i>{{rule['position']}} </td> <td class=\\\"col-md-1 text-nowrap\\\">{{rule['name']}}</td> <td class=\\\"col-md-1 text-nowrap\\\"> <span ng-repeat=\\\"protocol in rule.protocols\\\" class=\\\"badge badge-secondary mr-2\\\">{{protocol}}</span> </td> <td class=\\\"col-md-2 wrapped\\\">{{splitRule(rule['srcAddress'])}}</td> <td class=\\\"col-md-1 wrapped\\\">{{splitRule(rule['srcPort'])}}</td> <td class=\\\"col-md-2 wrapped\\\">{{splitRule(rule['dstAddress'])}}</td> <td class=\\\"col-md-1 wrapped\\\">{{splitRule(rule['dstPort'])}}</td> <td ng-class=\\\"{'col-md-1': group.readOnly === false, 'col-md-2': group.readOnly === true}\\\" class=text-ellipsis> <span title=\\\"{{rule['exporterFilter']}}\\\">{{rule['exporterFilter']}}</span> </td> <td class=\\\"col-md-1 text-nowrap\\\"><span class=\\\"fa fa-exchange\\\" ng-if=\\\"rule['omnidirectional'] === true\\\" aria-hidden=true></span></td> <td class=col-md-1 ng-if=\\\"group.readOnly === false\\\"> <div class=pull-right> <button id=action.{{rule.position}}.edit class=\\\"btn btn-sm btn-secondary\\\" ng-click=\\\"editRule(rule, group)\\\" title=\\\"edit rule\\\"><i class=\\\"fa fa-edit\\\"></i></button> <button id=action.{{rule.position}}.delete class=\\\"btn btn-sm btn-secondary\\\" ng-click=deleteRule(rule) title=\\\"delete rule\\\"><i class=\\\"fa fa-trash-o\\\"></i></button> </div> </td> </tr> </tbody> </table> </pagination> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/onms-classifications/views/modals/new-rule-modal.html';\nvar html = \"<div id=ruleModal> <div class=modal-header> <h5 class=modal-title ng-show=\\\"classification.id === undefined\\\">Create Classification Rule</h5> <h5 class=modal-title ng-show=\\\"classification.id !== undefined\\\">Edit Classification Rule</h5> </div> <div class=modal-body> <form name=ruleForm novalidate> <div class=form-group> <div ng-show=error.entity class=\\\"form-text text-danger\\\">{{error.entity}}</div> </div> <div class=\\\"form-group form-row\\\"> <label class=col-form-label for=rule.group>Group</label> <select class=\\\"form-control custom-select\\\" ng-options=\\\"group as group.name for group in selectableGroups track by group.id\\\" ng-model=classification.group ng-disabled=\\\"classification.id === undefined\\\" id=rule.group></select> </div> <div class=\\\"form-group form-row\\\"> <label class=col-form-label for=rule.position>Position</label> <button class=\\\"btn btn-link\\\" uib-popover-html=\\\"'<div>Rules on low positions will be evaluated first:<br>position 0 -&gt; position 1 -&gt; position 2 -&gt; ...</div>'\\\" popover-trigger=\\\"'outsideClick'\\\"><i class=\\\"fa fa-question-circle\\\"/></button> <input class=form-control id=rule.position name=position placeholder={{maxPosition}} type=number min=0 max={{maxPosition}} step=1 pattern=[0-9]* ng-model=classification.position ng-class=\\\"{ 'is-invalid' : ruleForm.position.$invalid || error.position }\\\"/> <div ng-show=ruleForm.position.$invalid class=invalid-feedback>Position must be between 0 and {{maxPosition}}.</div> </div> <div class=\\\"form-group form-row\\\"> <label class=col-form-label for=rule.name>Application Name</label> <input class=form-control type=text id=rule.name name=name placeholder=HTTP ng-model=classification.name ng-class=\\\"{ 'is-invalid' : ruleForm.name.$invalid || error.name }\\\" required/> <div ng-show=ruleForm.name.$invalid class=invalid-feedback>The name is required.</div> <div ng-show=error.name class=invalid-feedback>{{error.name}}</div> </div> <div class=form-row> <div class=\\\"form-group col-md-8\\\"> <label class=col-form-label for=rule.srcAddress>Source IP Address</label> <input class=form-control type=text id=rule.srcAddress name=srcAddress placeholder=127.0.0.1,10.0.0.0/24,10.0.0.0-10.255.255.255 ng-model=classification.srcAddress ng-class=\\\"{ 'is-invalid' : ruleForm.srcAddress.$invalid || error.srcAddress}\\\"/> <div ng-show=error.srcAddress class=invalid-feedback>{{error.srcAddress}}</div> </div> <div class=\\\"form-group col-md-4\\\"> <label class=col-form-label for=rule.srcPort>Source Port</label> <input class=form-control type=text id=rule.srcPort name=srcPort placeholder=80,8080 ng-model=classification.srcPort ng-class=\\\"{ 'is-invalid' : ruleForm.srcPort.$invalid || error.srcPort }\\\"/> <div ng-show=error.srcPort class=invalid-feedback>{{error.srcPort}}</div> </div> </div> <div class=form-row> <div class=\\\"form-group col-md-8\\\"> <label class=col-form-label for=rule.dstAddress>Destination IP Address</label> <input class=form-control type=text id=rule.dstAddress name=dstAddress placeholder=127.0.0.1,10.0.0.0/24,10.0.0.0-10.255.255.255 ng-model=classification.dstAddress ng-class=\\\"{ 'is-invalid' : ruleForm.dstAddress.$invalid || error.dstAddress}\\\"/> <div ng-show=error.dstAddress class=invalid-feedback>{{error.dstAddress}}</div> </div> <div class=\\\"form-group col-md-4\\\"> <label class=col-form-label for=rule.dstPort>Destination Port</label> <input class=form-control type=text id=rule.dstPort name=dstPort placeholder=80,8080 ng-model=classification.dstPort ng-class=\\\"{ 'is-invalid' : ruleForm.dstPort.$invalid || error.dstPort }\\\"/> <div ng-show=error.dstPort class=invalid-feedback>{{error.dstPort}}</div> </div> </div> <div class=form-group> <label class=col-form-label for=rule.omnidirectional>Omnidirectional</label> <div class=form-check> <input class=form-check-input type=checkbox id=rule.omnidirectional name=omnidirectional ng-model=classification.omnidirectional ng-class=\\\"{ 'is-invalid' : ruleForm.omnidirectional.$invalid || error.omnidirectional }\\\"/> <label class=form-check-label for=rule.omnidirectional>Enable matching independent of the flow direction</label> <div ng-show=error.omnidirectional class=invalid-feedback>{{error.omnidirectional}}</div> </div> </div> <div class=\\\"form-group form-row\\\"> <label class=col-form-label for=rule.exporterFilter>Exporter Filter</label> <button class=\\\"btn btn-link\\\" uib-popover-html=\\\"'<div>The rule is only applied if the exporter of the flow matches the defined <a href=https://wiki.opennms.org/wiki/Filters target=_blank>filter</a>.</div>'\\\" popover-trigger=\\\"'outsideClick'\\\"><i class=\\\"fa fa-question-circle\\\"/></button> <input class=form-control type=text id=rule.exporterFilter name=exporterFilter placeholder=\\\"categoryName == 'Exporters' | ipAddr == '10.0.0.1'\\\" ng-model=classification.exporterFilter ng-class=\\\"{ 'is-invalid' : ruleForm.exporterFilter.$invalid || error.exporterFilter }\\\"/> <div ng-show=error.exporterFilter class=invalid-feedback>{{error.exporterFilter}}</div> </div> <div class=\\\"form-group form-row\\\"> <label class=col-form-label for=rule.protocol>IP Protocol</label> <input class=form-control type=text id=rule.protocol name=protocol ng-model=currentSelection placeholder=tcp typeahead-on-select=insertProtocol($item) typeahead-min-length=0 uib-typeahead=\\\"protocol.keyword for protocol in protocols | filter:$viewValue\\\" typeahead-editable=false ng-class=\\\"{ 'is-invalid' : ruleForm.protocol.$invalid || error.protocol }\\\"/> <span ng-repeat=\\\"protocol in selectedProtocols\\\" class=\\\"badge badge-secondary mt-2 mr-2\\\"> {{protocol.keyword | uppercase}} <a href class=text-danger name=remove-protocol ng-click=removeProtocol(protocol)><i class=\\\"fa fa-remove\\\" title=\\\"remove protocol\\\"></i></a> </span> <div ng-show=error.protocol class=invalid-feedback>{{error.protocol}}</div> </div> </form> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-primary\\\" id=save-rule ng-click=save() ng-disabled=ruleForm.$invalid>{{buttonName}}</button> <button type=button class=\\\"btn btn-secondary\\\" id=cancel-rule ng-click=cancel()>Cancel</button> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/onms-classifications/views/modals/new-group-modal.html';\nvar html = \"<div id=groupModal> <div class=modal-header> <h5 class=modal-title ng-show=\\\"group.id === undefined\\\">Create Classification Group</h5> <h5 class=modal-title ng-show=\\\"group.id !== undefined\\\">Edit Classification Group</h5> </div> <div class=modal-body> <form name=groupForm novalidate> <div class=form-group> <div ng-show=error.entity class=\\\"form-text text-danger\\\">{{error.entity}}</div> </div> <div class=\\\"form-group form-row\\\"> <label class=col-form-label for=group.position>Position</label> <button class=\\\"btn btn-link\\\" uib-popover-html=\\\"'<div>Groups on low positions will be evaluated first:<br>position 0 -&gt; position 1 -&gt; position 2 -&gt; ...</div>'\\\" popover-trigger=\\\"'outsideClick'\\\"><i class=\\\"fa fa-question-circle\\\"/></button> <input class=form-control id=group.position name=position placeholder={{maxPosition}} type=number min=0 max={{maxPosition}} step=1 pattern=[0-9]* ng-model=group.position ng-class=\\\"{ 'is-invalid' : groupForm.position.$invalid || error.position }\\\"/> <div ng-show=groupForm.position.$invalid class=invalid-feedback>Position must be between 0 and {{maxPosition}}.</div> </div> <div class=\\\"form-group form-row\\\"> <label class=col-form-label for=group.name>Group Name</label> <input class=form-control type=text id=group.name name=name placeholder=\\\"my classification group\\\" ng-model=group.name ng-class=\\\"{ 'is-invalid' : groupForm.name.$invalid || error.name }\\\" required/> <div ng-show=groupForm.name.$invalid class=invalid-feedback>The name is required.</div> <div ng-show=error.name class=invalid-feedback>{{error.name}}</div> </div> <div class=\\\"form-group form-row\\\"> <label class=col-form-label for=group.description>Group Description</label> <input class=form-control type=text id=group.description name=description placeholder=\\\"my description\\\" ng-model=group.description ng-class=\\\"{ 'is-invalid' : groupForm.description.$invalid || error.description }\\\" required/> <div ng-show=error.description class=invalid-feedback>{{error.description}}</div> </div> </form> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-primary\\\" id=save-group ng-click=save() ng-disabled=groupForm.$invalid>{{buttonName}}</button> <button type=button class=\\\"btn btn-secondary\\\" id=cancel-group ng-click=cancel()>Cancel</button> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/onms-classifications/views/modals/import-modal.html';\nvar html = \"<div class=modal-header> <h5 class=modal-title>Import Classification Rules</h5> </div> <div class=modal-body> <form class=form> <div class=\\\"form-group form-row\\\"> <label class=\\\"col-sm-3 col-form-label\\\">Group</label> <div class=col-sm-9> <p class=form-control-plaintext>{{group.name}}</p> </div> </div> <div class=\\\"form-group form-row\\\"> <label class=\\\"col-sm-3 col-form-label\\\" for=importFile>Select file to import</label> <div class=col-sm-9> <div class=input-group> <span class=input-group-prepend> <button ng-click=openFileDialogue() class=\\\"btn btn-secondary\\\" type=button>Choose</button> </span> <input ng-click=openFileDialogue() type=text id=importFile class=form-control placeholder=\\\"Choose a file...\\\" ng-model=fileToUpload.name /> <span class=input-group-append> <button class=\\\"btn btn-secondary\\\" type=button ng-click=resetInput()>Reset</button> </span> </div> </div> </div> <div class=\\\"form-group form-row\\\"> <div class=\\\"col-sm-offset-3 col-sm-9\\\"> <div class=checkbox> <label> <input type=checkbox ng-model=containsHeader> Contains header </label> </div> <div class=checkbox> <label> <input type=checkbox ng-model=deleteExistingRules> Delete existing rules </label> </div> </div> </div> <input id=fileToImport type=file style=visibility:hidden;display:none onchange=angular.element(this).scope().setFile(this) /> </form> <div class=\\\"alert alert-danger\\\" ng-show=error> {{error}} </div> <div ng-show=\\\"failedRows.length > 0\\\"> <pagination model=pagination position=bottom on-change=navigateWithinErrors> <table class=\\\"table table-bordered table-striped\\\"> <tbody> <tr class=d-flex> <th class=col-md-1>Row Index</th> <th class=col-md-11>Error Message</th> </tr> <tr class=d-flex ng-repeat=\\\"failedRow in failedRows\\\"> <td class=col-md-1>{{failedRow['index']}}</td> <td class=col-md-11>{{failedRow['message']}}</td> </tr> </tbody> </table> </pagination> </div> </div> <div class=modal-footer> <div style=display:inline title=\\\"Please confirm deletion\\\"> <button type=button class=\\\"btn btn-primary\\\" ng-click=uploadFile() ng-show=fileToUpload title=\\\"Upload Rule\\\">Upload</button> </div> <button type=button class=\\\"btn btn-secondary\\\" ng-click=\\\"$dismiss('cancelled by user')\\\">Cancel</button> </div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/onms-classifications/views/modals/export-modal.html';\nvar html = \"<div id=exportModal> <div class=modal-header> <h5 class=modal-title>Export Classification Rules for Group: {{group.name}}</h5> </div> <div class=modal-body> <form name=exportGroupForm> <div class=form-group> <div class=form-group> <label class=col-form-label for=export.requestedFileName>File Name</label> <input class=form-control type=text id=export.requestedFileName name=requestedFileName value={{group.id}}_rules.csv ng-model=export.requestedFileName ng-pattern=\\\"/^[a-zA-Z1-9_ .-]{1,}$/\\\" required ng-class=\\\"{ 'is-invalid' : exportGroupForm.requestedFileName.$invalid }\\\"/> <p ng-show=exportGroupForm.requestedFileName.$invalid class=invalid-feedback> A valid file name is required, allowed characters: [a-zA-Z1-9_ .-]</p> </div> </div> </form> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-primary\\\" ng-click=exportGroup() ng-disabled=exportGroupForm.$invalid>Export</button> <button type=button class=\\\"btn btn-secondary\\\" ng-click=\\\"$dismiss('cancelled by user')\\\">Cancel</button> </div> </div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","'use strict';\n\nconst angular = require('vendor/angular-js');\n\nconst permissionDeniedTemplate  = require('./403-permission-denied.html');\n\nangular.module('onms.http', ['ui.bootstrap'])\n    .factory('InterceptorService',['$q', '$rootScope', function($q, $rootScope) {\n        return {\n            responseError: function (rejection) {\n                if (rejection.status === 401) {\n                    if (rejection.config && rejection.config.url\n                        && (rejection.config.url.startsWith('rest/')\n                            || rejection.config.url.startsWith('api/v2/'))\n                    ) {\n                        console.error('Login Required', rejection, rejection.headers); // eslint-disable-line no-console\n                        $rootScope.$emit('loginRequired');\n                    }\n                }\n                if (rejection.status === 403) {\n                    $rootScope.$emit('permissionDenied');\n                }\n                return $q.reject(rejection);\n            }\n        }\n    }])\n    .config(['$httpProvider',\n        function ($httpProvider) {\n            $httpProvider.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n            $httpProvider.interceptors.push('InterceptorService');\n        }\n    ])\n    .run(['$rootScope', '$uibModal', function($rootScope, $uibModal) {\n        $rootScope.$on('loginRequired', function() {\n            var baseTags = document.getElementsByTagName('base');\n            if (baseTags && baseTags.length > 0 && baseTags[0].href) {\n                window.location.href = baseTags[0].href + 'login.jsp?session_expired=true';\n            } else {\n                console.warn('Login is required, but cannot forward to login page due to missing base tag.'); // eslint-disable-line no-console\n            }\n        });\n\n        $rootScope.$on('permissionDenied', function() {\n            $uibModal.open({\n                templateUrl: permissionDeniedTemplate,\n                controller: function($scope, $uibModalInstance) {\n                    $scope.reload = function () {\n                        $uibModalInstance.dismiss();\n                        window.location.reload();\n                    };\n                },\n                size: '',\n                backdrop: 'static',\n                keyboard  : false\n            });\n        });\n    }])\n;\n\nmodule.exports = angular;","const MODULE_NAME = 'onms.elementList';\n\n/**\n * ISO-8601 date format string.\n */\nwindow.ISO_8601_DATE_FORMAT = 'yyyy-MM-ddTHH:mm:ss.sssZ';\nwindow.ISO_8601_DATE_FORMAT_WITHOUT_MILLIS = 'yyyy-MM-ddTHH:mm:ssZ';\n\nconst angular = require('vendor/angular-js');\nconst jQuery = require('vendor/jquery-js');\nrequire('vendor/bootstrap-js');\n\nconst editInPlaceTemplate = require('../templates/angular-onms-elementList-editInPlace.html');\nconst editListInPlaceTemplate = require('../templates/angular-onms-elementList-editListInPlace.html');\nconst editMapInPlaceTemplate = require('../templates/angular-onms-elementList-editMapInPlace.html');\n\n/**\n * Function used to append an extra transformer to the default $http transforms.\n */\nconst appendTransform = (defaultTransform, transform) => {\n\tconst t = angular.isArray(defaultTransform) ? defaultTransform : [ defaultTransform ];\n\treturn t.concat(transform);\n};\n\n/**\n * Escape FIQL reserved characters by URL-encoding them. Reserved characters are:\n * <ul>\n * <li>!</li>\n * <li>$</li>\n * <li>'</li>\n * <li>(</li>\n * <li>)</li>\n * <li>*</li>\n * <li>+</li>\n * <li>,</li>\n * <li>;</li>\n * <li>=</li>\n * </ul>\n * @param value\n * @returns String with reserved characters URL-encoded\n */\nconst escapeSearchValue = (value) => {\n\tif (typeof value === 'string') {\n\t\t\treturn value\n\t\t\t\t\t.replace('!', '%21')\n\t\t\t\t\t.replace('$', '%24')\n\t\t\t\t\t.replace('\\'', '%27')\n\t\t\t\t\t.replace('(', '%28')\n\t\t\t\t\t.replace(')', '%29')\n\t\t\t\t\t// People are going to type this in as a wildcard, so I\n\t\t\t\t\t// guess they'll have to type in '%2A' if they want to\n\t\t\t\t\t// match an asterisk...\n\t\t\t\t\t//.replace('*', '%2A')\n\t\t\t\t\t.replace('+', '%2B')\n\t\t\t\t\t.replace(',', '%2C')\n\t\t\t\t\t.replace(';', '%3B')\n\t\t\t\t\t.replace('=', '%3D');\n\t}\n\treturn value;\n};\n\n/**\n * Convert from a clause into a FIQL query string.\n */\nconst toFiql = (clauses) => {\n\tlet first = true;\n\tlet fiql = '';\n\tfor (let i = 0; i < clauses.length; i++) {\n\t\tif (!first) {\n\t\t\tfiql += ';';\n\t\t}\n\t\tfiql += clauses[i].property;\n\n\t\tswitch (clauses[i].operator) {\n\t\tcase 'EQ':\n\t\t\tfiql += '=='; break;\n\t\tcase 'NE':\n\t\t\tfiql += '!='; break;\n\t\tcase 'LT':\n\t\t\tfiql += '=lt='; break;\n\t\tcase 'LE':\n\t\t\tfiql += '=le='; break;\n\t\tcase 'GT':\n\t\t\tfiql += '=gt='; break;\n\t\tcase 'GE':\n\t\t\tfiql += '=ge='; break;\n\t\tdefault:\n\t\t\t// otherwise, do nothing\n\t\t\tbreak;\n\t\t}\n\n\t\tfiql += escapeSearchValue(clauses[i].value);\n\n\t\tfirst = false;\n\t}\n\treturn fiql;\n};\n\n/**\n * Convert from a FIQL query string into separate clause objects.\n * This only works for simple queries composed of multiple AND (';')\n * clauses.\n * \n * TODO: Expand this to cover more FIQL syntax\n */\nconst fromFiql = (fiql) => {\n\tlet statements = fiql.split(';');\n\tlet segments = [];\n\tlet clauses = [];\n\tfor (let i = 0; i < statements.length; i++) {\n\t\tif (statements[i].indexOf('==') > 0) {\n\t\t\tsegments = statements[i].split('==');\n\t\t\tclauses.push({\n\t\t\t\tproperty: segments[0],\n\t\t\t\toperator: 'EQ',\n\t\t\t\tvalue: segments[1]\n\t\t\t});\n\t\t} else if (statements[i].indexOf('!=') > 0) {\n\t\t\tsegments = statements[i].split('!=');\n\t\t\tclauses.push({\n\t\t\t\tproperty: segments[0],\n\t\t\t\toperator: 'NE',\n\t\t\t\tvalue: segments[1]\n\t\t\t});\n\t\t} else if (statements[i].indexOf('=lt=') > 0) {\n\t\t\tsegments = statements[i].split('=lt=');\n\t\t\tclauses.push({\n\t\t\t\tproperty: segments[0],\n\t\t\t\toperator: 'LT',\n\t\t\t\tvalue: segments[1]\n\t\t\t});\n\t\t} else if (statements[i].indexOf('=le=') > 0) {\n\t\t\tsegments = statements[i].split('=le=');\n\t\t\tclauses.push({\n\t\t\t\tproperty: segments[0],\n\t\t\t\toperator: 'LE',\n\t\t\t\tvalue: segments[1]\n\t\t\t});\n\t\t} else if (statements[i].indexOf('=gt=') > 0) {\n\t\t\tsegments = statements[i].split('=gt=');\n\t\t\tclauses.push({\n\t\t\t\tproperty: segments[0],\n\t\t\t\toperator: 'GT',\n\t\t\t\tvalue: segments[1]\n\t\t\t});\n\t\t} else if (statements[i].indexOf('=ge=') > 0) {\n\t\t\tsegments = statements[i].split('=ge=');\n\t\t\tclauses.push({\n\t\t\t\tproperty: segments[0],\n\t\t\t\toperator: 'GE',\n\t\t\t\tvalue: segments[1]\n\t\t\t});\n\t\t}\n\t}\n\treturn clauses;\n};\n\n\n/**\n * Parse an HTTP Content-Range header into the start, end, and total fields.\n * The header should be in a format like: \"items 0-14/28\".\n * \n * @param contentRange String from the Content-Range header\n */\nconst parseContentRange = (contentRange) => {\n\tif (!contentRange) {\n\t\treturn {start: 0, end: 0, total: 0};\n\t}\n\t// Example: items 0-14/28\n\tconst pattern = /items\\s+?(\\d+)\\s*-\\s*(\\d+)\\s*\\/\\s*(\\d+)/;\n\treturn {\n\t\tstart: Number(contentRange.replace(pattern, '$1')),\n\t\tend: Number(contentRange.replace(pattern, '$2')),\n\t\ttotal: Number(contentRange.replace(pattern, '$3'))\n\t};\n};\n\nconst normalizeOffset = (offset, maxOffset, limit) => {\n\tlet newOffset = offset;\n\n\t// Offset of the last page\n\tlet lastPageOffset;\n\tif (maxOffset < 0) {\n\t\tnewOffset = 0;\n\t\tlastPageOffset = 0;\n\t} else {\n\t\tlastPageOffset = Math.floor(maxOffset / limit) * limit; \n\t}\n\n\t// Bounds checking\n\tnewOffset = ((newOffset < 0) ? 0 : newOffset);\n\tnewOffset = ((newOffset > lastPageOffset) ? lastPageOffset : newOffset);\n\n\t// Make sure that offset is a multiple of limit\n\tnewOffset = Math.floor(newOffset / limit) * limit;\n\n\treturn newOffset;\n};\n\n/* // BMR: this doesn't seem to actually be used anywhere\nString.prototype.endsWith = function(suffix) {\n\treturn this.indexOf(suffix, this.length - suffix.length) !== -1;\n};\n*/\n\n// $filters that can be used to create human-readable versions of filter values\nangular.module('onmsListFilters', [])\n.filter('operator', function() {\n\treturn function(input, value) {\n\t\t// See if the string contains a wildcard\n\t\tvar fuzzy = (typeof value === 'string' && value.indexOf('*') > -1);\n\n\t\tswitch (input) {\n\t\tcase 'EQ':\n\t\t\treturn fuzzy ? 'is like' : 'equals';\n\t\tcase 'NE':\n\t\t\treturn fuzzy ? 'is not like' : 'does not equal';\n\t\tcase 'LT':\n\t\t\treturn 'is less than';\n\t\tcase 'LE':\n\t\t\treturn 'is less than or equal';\n\t\tcase 'GT':\n\t\t\treturn 'is greater than';\n\t\tcase 'GE':\n\t\t\treturn 'is greater than or equal';\n\t\tdefault:\n\t\t\t// If no match, return the input\n\t\t\treturn input;\n\t\t}\n\t}\n})\n.filter('isNotEmpty', function() {\n\treturn function(input) {\n\t\treturn input &&\n\t\t\t(typeof input === 'string' ? input.trim() !== '' : true);\n\t}\n})\n;\n\n// List module\nangular.module(MODULE_NAME, [])\n\n.config(/* @ngInject */ function($locationProvider) {\n\t$locationProvider.html5Mode({\n\t\t// Use HTML5 \n\t\tenabled: true,\n\t\t// Don't rewrite all <a> links on the page\n\t\trewriteLinks: false\n\t});\n})\n\n.directive('onmsListEditInPlace', /* @ngInject */ function() {\n\treturn {\n\t\tcontroller: function($scope) {\n\t\t\t$scope.editing = false;\n\t\t\t$scope.originalValue = angular.copy($scope.value);\n\n\t\t\t// Start editing the value\n\t\t\t$scope.edit = function() {\n\t\t\t\t$scope.editing = true;\n\t\t\t}\n\n\t\t\t// Stop editing the value\n\t\t\t$scope.unedit = function() {\n\t\t\t\t$scope.editing = false;\n\t\t\t}\n\n\t\t\t$scope.onKeyup = function($event) {\n\t\t\t\t// If the user types ESC, then abort the edit\n\t\t\t\tif($event.keyCode === 27) {\n\t\t\t\t\t$scope.cancel();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$scope.submit = function() {\n\t\t\t\t$scope.onSubmit();\n\t\t\t\t// TODO: Handle update failures\n\t\t\t\t// Now that we've save a new value, use it as the original value\n\t\t\t\t$scope.originalValue = $scope.value;\n\t\t\t\t// Switch out of edit mode\n\t\t\t\t$scope.unedit();\n\t\t\t}\n\n\t\t\t$scope.cancel = function() {\n\t\t\t\t// Restore the original value\n\t\t\t\t$scope.value = $scope.originalValue;\n\t\t\t\t// Switch out of edit mode\n\t\t\t\t$scope.unedit();\n\t\t\t}\n\t\t},\n\t\t// Use an isolated scope\n\t\tscope: {\n\t\t\titem: '=',\n\t\t\tvalue: '=',\n\t\t\tvalueType: '=',\n\t\t\t// Optional step attribute for number fields\n\t\t\tstep: '=',\n\t\t\tonSubmit: '&onSubmit'\n\t\t},\n\t\ttemplateUrl: editInPlaceTemplate,\n\t\ttransclude: true\n\t};\n})\n\n.directive('onmsListEditListInPlace', /* @ngInject */ function($window) {\n\treturn {\n\t\tcontroller: function($scope) {\n\t\t\t$scope.editing = false;\n\n\t\t\t// Start editing the value\n\t\t\t$scope.edit = function() {\n\t\t\t\t$scope.editing = true;\n\t\t\t}\n\n\t\t\t// Stop editing the value\n\t\t\t$scope.unedit = function() {\n\t\t\t\t// Undo any edits\n\t\t\t\t$scope.newValue = null;\n\t\t\t\t$scope.editing = false;\n\t\t\t}\n\n\t\t\t$scope.onKeyup = function(event) {\n\t\t\t\tswitch(event.keyCode) {\n\t\t\t\t// If the user types Enter, then submit the edit\n\t\t\t\tcase 13: $scope.add($scope.values, $scope.newValue); break;\n\t\t\t\t// If the user types ESC, then abort the edit\n\t\t\t\tcase 27: $scope.unedit(); break;\n\t\t\t\t// otherwise, do nothing\n\t\t\t\tdefault: break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$scope.confirmAndRemove = function(items, item) {\n\t\t\t\t// Splice the value out of the array\n\t\t\t\tif ($window.confirm('Are you sure you want to remove \"' + item + '\"?')) {\n\t\t\t\t\titems.splice(items.indexOf(item), 1);\n\t\t\t\t\t$scope.onEdit();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$scope.add = function(items, item) {\n\t\t\t\titems.push(item);\n\t\t\t\titems.sort();\n\t\t\t\t// TODO: Handle update failures\n\t\t\t\t$scope.onEdit();\n\t\t\t\t// Switch out of edit mode\n\t\t\t\t$scope.unedit();\n\t\t\t}\n\t\t},\n\t\t// Use an isolated scope\n\t\tscope: {\n\t\t\tvalues: '=',\n\t\t\tvalueType: '=',\n\t\t\t// Optional step attribute for number fields\n\t\t\tstep: '=',\n\t\t\tonEdit: '&onEdit'\n\t\t},\n\t\ttemplateUrl: editListInPlaceTemplate,\n\t\ttransclude: true\n\t};\n})\n\n.directive('onmsListEditMapInPlace', /* @ngInject */ function($window) {\n\treturn {\n\t\tcontroller: function($scope) {\n\t\t\t$scope.editing = false;\n\n\t\t\t// Start editing the value\n\t\t\t$scope.edit = function() {\n\t\t\t\t$scope.editing = true;\n\t\t\t}\n\n\t\t\t// Stop editing the value\n\t\t\t$scope.unedit = function() {\n\t\t\t\t// Undo any edits\n\t\t\t\t$scope.newKey = null;\n\t\t\t\t$scope.newValue = null;\n\t\t\t\t$scope.editing = false;\n\t\t\t}\n\n\t\t\t$scope.onKeyup = function(event) {\n\t\t\t\tswitch(event.keyCode) {\n\t\t\t\t// If the user types Enter, then submit the edit\n\t\t\t\tcase 13: $scope.add($scope.values, $scope.newKey, $scope.newValue); break;\n\t\t\t\t// If the user types ESC, then abort the edit\n\t\t\t\tcase 27: $scope.unedit(); break;\n\t\t\t\t// otherwise, do nothing\n\t\t\t\tdefault: break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$scope.confirmAndRemove = function(items, key) {\n\t\t\t\t// Splice the value out of the array\n\t\t\t\tif ($window.confirm('Are you sure you want to remove \"' + key + '\"?')) {\n\t\t\t\t\tdelete items[key];\n\t\t\t\t\t$scope.onEdit();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$scope.add = function(items, key, value) {\n\t\t\t\titems[key] = value;\n\t\t\t\t// TODO: Handle update failures\n\t\t\t\t$scope.onEdit();\n\t\t\t\t// Switch out of edit mode\n\t\t\t\t$scope.unedit();\n\t\t\t}\n\t\t},\n\t\t// Use an isolated scope\n\t\tscope: {\n\t\t\tvalues: '=',\n\t\t\tkeyType: '=',\n\t\t\tvalueType: '=',\n\t\t\t// Optional step attribute for number fields\n\t\t\tstep: '=',\n\t\t\tonEdit: '&onEdit'\n\t\t},\n\t\ttemplateUrl: editMapInPlaceTemplate,\n\t\ttransclude: true\n\t};\n})\n\n/**\n * Generic list controller\n */\n.controller('ListCtrl', ['$scope', '$location', '$window', '$log', '$filter', function($scope, $location, $window, $log, $filter) {\n\t$log.debug('ListCtrl initializing...');\n\n\t$scope.defaults = {\n\t\t_s: '',\n\t\tsearchClauses: [],\n\t\tlimit: 20,\n\t\toffset: 0,\n\t\torderBy: '',\n\t\torder: 'asc'\n\t}\n\n\tvar initialLimit = typeof $location.search().limit === 'undefined' ? $scope.defaults.limit : (Number($location.search().limit) > 0 ? Number($location.search().limit) : $scope.defaults.limit);\n\n\t// Restore any query parameters that you can from the \n\t// query string, blank out the rest\n\t$scope.query = {\n\t\tlastOffset: 0,\n\t\tmaxOffset: 0,\n\n\t\tsearchParam: typeof $location.search()._s === 'undefined' ? $scope.defaults._s : $location.search()._s,\n\t\tsearchClauses: typeof $location.search()._s === 'undefined' ? $scope.defaults.searchClauses : fromFiql($location.search()._s),\n\t\tlimit: initialLimit,\n\t\tnewLimit: initialLimit,\n\t\toffset: typeof $location.search().offset === 'undefined' ? $scope.defaults.offset : (Number($location.search().offset) > 0 ? normalizeOffset(Number($location.search().offset), Number.MAX_VALUE, initialLimit) : $scope.defaults.offset),\n\n\t\t// TODO: Validate that the orderBy is in a list of supported properties\n\t\torderBy: typeof $location.search().orderBy === 'undefined' ? $scope.defaults.orderBy : $location.search().orderBy,\n\t\torder: typeof $location.search().order === 'undefined' ? $scope.defaults.order : ($location.search().order === 'asc' ? 'asc' : 'desc')\n\t};\n\n\t// Sync the query hash with the $location query string\n\t$scope.$watch('query', function() {\n\t\tvar queryParams = angular.copy($scope.query);\n\n\t\t// Delete derived values that we don't need in the query string\n\t\tdelete queryParams.searchClauses;\n\t\tdelete queryParams.newLimit;\n\t\tdelete queryParams.lastOffset;\n\t\tdelete queryParams.maxOffset;\n\n\t\t// Rename searchParam to _s\n\t\tqueryParams._s = (queryParams.searchParam === '' ? null : queryParams.searchParam);\n\t\tdelete queryParams.searchParam;\n\n\t\t// Delete any parameters that have default or blank values\n\t\tif (queryParams.limit === $scope.defaults.limit || queryParams.limit === '') { delete queryParams.limit; }\n\t\tif (queryParams.offset === $scope.defaults.offset || queryParams.offset === '') { delete queryParams.offset; }\n\t\tif (queryParams.orderBy === $scope.defaults.orderBy || queryParams.orderBy === '') { delete queryParams.orderBy; }\n\t\tif (queryParams.order === $scope.defaults.order || queryParams.order === '') { delete queryParams.order; }\n\t\tif (queryParams._s === $scope.defaults._s || queryParams._s === '') { delete queryParams._s; }\n\n\t\t$location.search(queryParams);\n\t}, \n\ttrue // Use object equality because the reference doesn't change\n\t);\n\n\t// Add the search clause to the list of clauses\n\t$scope.addSearchClause = function(clause) {\n\t\tif(angular.isDate(clause.value)) {\n\t\t\t// Returns a value in yyyy-MM-ddTHH:mm:ss.sssZ format\n\t\t\t// Unfortunately, I don't think CXF will like this because\n\t\t\t// it includes the millisecond portion of the date.\n\t\t\t//clause.value = new Date(clause.value).toISOString();\n\n\t\t\tclause.value = $filter('date')(new Date(clause.value), ISO_8601_DATE_FORMAT);\n\t\t}\n\n\t\t// Make sure the clause isn't already in the list of search clauses\n\t\tif ($scope.getSearchClause(clause)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO: Add validation?\n\t\t$scope.query.searchClauses.push(angular.copy(clause));\n\t\t$scope.query.searchParam = toFiql($scope.query.searchClauses);\n\t\t$scope.refresh();\n\t}\n\n\t$scope.getSearchClause = function(clause) {\n\t\tfor (var i = 0; i < $scope.query.searchClauses.length; i++) {\n\t\t\tif ($scope.clauseEquals(clause, $scope.query.searchClauses[i])) {\n\t\t\t\treturn $scope.query.searchClauses[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t$scope.clauseEquals = function(a, b) {\n\t\treturn a.property === b.property &&\n\t\t\ta.operator === b.operator &&\n\t\t\ta.value === b.value;\n\t}\n\n\t// Convert an epoch timestamp into String format before adding the search clause\n\t$scope.addEpochTimestampSearchClause = function(clause) {\n\t\tclause.value = $filter('date')(clause.value, ISO_8601_DATE_FORMAT);\n\t\t$scope.addSearchClause(clause);\n\t}\n\n\t// Remove a search clause from the list of clauses\n\t$scope.removeSearchClause = function(clause) {\n\t\t// TODO: Add validation?\n\t\t$scope.query.searchClauses.splice($scope.query.searchClauses.indexOf(clause), 1);\n\t\t$scope.query.searchParam = toFiql($scope.query.searchClauses);\n\t\t$scope.refresh();\n\t}\n\n\t$scope.removeSearchClauses = function(clauses) {\n\t\tfor (var i = 0; i < clauses.length; i++) {\n\t\t\tvar index = $scope.query.searchClauses.indexOf(clauses[i]);\n\t\t\tif (index >= 0) {\n\t\t\t\t$scope.query.searchClauses.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\t$scope.query.searchParam = toFiql($scope.query.searchClauses);\n\t\t$scope.refresh();\n\t}\n\n\t// Replace a search clause with a new clause\n\t$scope.replaceSearchClause = function(oldClause, newClause) {\n\t\tif(angular.isDate(newClause.value)) {\n\t\t\t// Returns a value in yyyy-MM-ddTHH:mm:ss.sssZ format\n\t\t\t// Unfortunately, I don't think CXF will like this because\n\t\t\t// it includes the millisecond portion of the date.\n\t\t\t//clause.value = new Date(clause.value).toISOString();\n\n\t\t\tnewClause.value = $filter('date')(new Date(newClause.value), ISO_8601_DATE_FORMAT);\n\t\t}\n\n\t\t// TODO: Add validation?\n\t\tvar scopeOldClause = $scope.getSearchClause(oldClause);\n\t\tvar scopeNewClause = $scope.getSearchClause(newClause);\n\t\tif (!scopeOldClause) {\n\t\t\tif (!scopeNewClause) {\n\t\t\t\t// If the old clause is not present, simply add the new clause\n\t\t\t\t$scope.addSearchClause(newClause);\n\t\t\t} else {\n\t\t\t\t// If the old clause is not present and the new clause is already\n\t\t\t\t// present, then do nothing\n\t\t\t}\n\t\t} else {\n\t\t\tif (!scopeNewClause) {\n\t\t\t\t// If the old clause is present and the new clause is not, replace\n\t\t\t\t// the values inside the old clause and then refresh\n\t\t\t\tscopeOldClause.property = newClause.property;\n\t\t\t\tscopeOldClause.operator = newClause.operator;\n\t\t\t\tscopeOldClause.value = newClause.value;\n\n\t\t\t\t$scope.query.searchParam = toFiql($scope.query.searchClauses);\n\t\t\t\t$scope.refresh();\n\t\t\t} else {\n\t\t\t\t// If the old clause is present and the new clause is present,\n\t\t\t\t// then just remove the old clause (as if it had been replaced by\n\t\t\t\t// the already-existing new clause)\n\t\t\t\t$scope.removeSearchClause(oldClause);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Clear the current search\n\t$scope.clearSearch = function() {\n\t\tif ($scope.query.searchClauses.length > 0) {\n\t\t\t$scope.query.searchClauses = [];\n\t\t\t$scope.query.searchParam = '';\n\t\t\t$scope.refresh();\n\t\t}\n\t}\n\n\t// Change the sorting of the table\n\t$scope.changeOrderBy = function(property) {\n\t\tif ($scope.query.orderBy === property) {\n\t\t\t// TODO: Figure out if we should reset limit/offset here also\n\t\t\t// If the property is already selected then reverse the sorting\n\t\t\t$scope.query.order = ($scope.query.order === 'asc' ? 'desc' : 'asc');\n\t\t} else {\n\t\t\t// TODO: Figure out if we should reset limit/offset here also\n\t\t\t$scope.query.orderBy = property;\n\t\t\t$scope.query.order = $scope.defaults.order;\n\t\t}\n\t\t$scope.refresh();\n\t}\n\n\t$scope.setOffset = function(offset) {\n\t\tconst o = normalizeOffset(offset, $scope.query.maxOffset, $scope.query.limit);\n\n\t\tif ($scope.query.offset !== o) {\n\t\t\t$scope.query.offset = o;\n\t\t\t$scope.refresh();\n\t\t}\n\t}\n\n\t$scope.setLimit = function(limit) {\n\t\tif (limit < 1) {\n\t\t\t$scope.query.newLimit = $scope.query.limit;\n\t\t\t// TODO: Throw a validation error\n\t\t\treturn;\n\t\t}\n\t\tif ($scope.query.limit !== limit) {\n\t\t\t$scope.query.limit = limit;\n\t\t\t$scope.query.offset = normalizeOffset($scope.query.offset, $scope.query.maxOffset, $scope.query.limit);\n\t\t\t$scope.refresh();\n\t\t}\n\t}\n\n\t// Override this to implement updates to an object\n\t$scope.refresh = function() {\n\t\t$log.warn('You need to override $scope.$parent.refresh() in your controller');\n\t}\n\n\t// Override this to implement updates to an object\n\t$scope.update = function() {\n\t\t$log.warn('You need to override $scope.$parent.update() in your controller');\n\t}\n\n\t// Override this to implement deletions\n\t$scope.deleteItem = function(item) {\n\t\t$log.warn('You need to override $scope.$parent.deleteItem() in your controller');\n\t}\n\n\t$log.debug('ListCtrl initialized');\n}])\n\n.run(['$rootScope', '$log', function($rootScope, $log) {\n\t$log.debug('Finished initializing ' + MODULE_NAME);\n}])\n\n;\n\n/*\nangular.element(document).ready(function() {\n\tconsole.log('Bootstrapping ' + MODULE_NAME);\n\tangular.bootstrap(document, [MODULE_NAME]);\n});\n*/\n\nmodule.exports = {\n\tappendTransform: appendTransform,\n\ttoFiql: toFiql,\n\tfromFiql: fromFiql,\n\tparseContentRange: parseContentRange,\n\tescapeSearchValue: escapeSearchValue,\n\tnormalizeOffset: normalizeOffset\n};\n","var path = '/home/kevlin/Documents/UAT_branch/core/web-assets/src/main/assets/js/apps/onms-elementList/templates/angular-onms-elementList-editInPlace.html';\nvar html = \"<form class=form-inline ng-submit=submit() style=margin:0> <input ng-show=editing ng-keyup=onKeyup($event) type={{valueType}} step={{step}} ng-model=value /> <span style=line-height:24px ng-hide=editing ng-click=edit()>{{value}}&nbsp;</span> <a href style=text-decoration:none ng-click=edit() ng-hide=editing><i class=\\\"fa fa-edit fa-lg\\\"/></a> <a href style=text-decoration:none ng-click=submit() ng-show=editing><i class=\\\"fa fa-check fa-lg\\\"/></a> <a href style=text-decoration:none ng-click=cancel() ng-show=editing><i class=\\\"fa fa-close fa-lg\\\"/></a> <span ng-transclude/> </form> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;"],"sourceRoot":""}